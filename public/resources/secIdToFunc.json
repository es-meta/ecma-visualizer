{
  "sec-static-semantics-vardeclarednames|Statement|ReturnStatement" : [
    357,
    "[VarDeclaredNames] Statement : ReturnStatement",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|GeneratorDeclaration|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    280,
    "[IsConstantDeclaration] GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-contains|FunctionExpression|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    830,
    "[Contains] FunctionExpression : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-ordinaryobjectcreate" : [
    1107,
    "OrdinaryObjectCreate",
    [
    ]
  ],
  "sec-compilequantifier|Quantifier|QuantifierPrefix" : [
    2364,
    "[CompileQuantifier] Quantifier : QuantifierPrefix",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|LiteralPropertyName|NumericLiteral" : [
    1271,
    "[Evaluation] LiteralPropertyName : NumericLiteral",
    [
    ]
  ],
  "sec-static-semantics-isstrict|Script|ScriptBody" : [
    1911,
    "[IsStrict] Script : ScriptBody",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetCharacter|\\b" : [
    2428,
    "[CompileToCharSet] ClassSetCharacter : \\b",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|ClassExpression" : [
    1881,
    "[HasCallInTailPosition] PrimaryExpression : ClassExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|FunctionStatementList" : [
    699,
    "[ContainsUndefinedContinueTarget] FunctionStatementList :",
    [
    ]
  ],
  "sec-static-semantics-toplevellexicallydeclarednames|StatementListItem|Declaration" : [
    495,
    "[TopLevelLexicallyDeclaredNames] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Block|{|}" : [
    519,
    "[ContainsDuplicateLabels] Block : { }",
    [
    ]
  ],
  "sec-ordinaryfunctioncreate" : [
    1124,
    "OrdinaryFunctionCreate",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|RelationalExpression|instanceof|ShiftExpression" : [
    759,
    "[IsFunctionDefinition] RelationalExpression : RelationalExpression instanceof ShiftExpression",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|GeneratorDeclaration|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    873,
    "[InstantiateFunctionObject] GeneratorDeclaration : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-dataview.prototype.setuint16" : [
    2690,
    "DataView.prototype.setUint16",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|ExpressionStatement" : [
    576,
    "[ContainsUndefinedBreakTarget] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncfunctionobject|AsyncFunctionDeclaration|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1751,
    "[InstantiateAsyncFunctionObject] AsyncFunctionDeclaration : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-identifiers-runtime-semantics-evaluation|IdentifierReference|await" : [
    1240,
    "[Evaluation] IdentifierReference : await",
    [
    ]
  ],
  "sec-%typedarray%.prototype.join" : [
    2550,
    "TypedArray.prototype.join",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|CharacterEscape|IdentityEscape" : [
    2303,
    "[CharacterValue] CharacterEscape : IdentityEscape",
    [
    ]
  ],
  "sec-class-definitions-runtime-semantics-evaluation|ClassDeclaration|class|BindingIdentifier|ClassTail" : [
    1745,
    "[Evaluation] ClassDeclaration : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-string.prototype.startswith" : [
    2265,
    "String.prototype.startsWith",
    [
    ]
  ],
  "sec-debugger-statement-runtime-semantics-evaluation|DebuggerStatement|debugger|;" : [
    1555,
    "[Evaluation] DebuggerStatement : debugger ;",
    [
    ]
  ],
  "sec-string.prototype.localecompare" : [
    2249,
    "String.prototype.localeCompare",
    [
    ]
  ],
  "sec-promise-resolve-functions" : [
    2750,
    "yet:PromiseResolveFunction",
    [
    ]
  ],
  "sec-binary-bitwise-operators-runtime-semantics-evaluation|BitwiseXORExpression|BitwiseXORExpression|^|BitwiseANDExpression" : [
    1378,
    "[Evaluation] BitwiseXORExpression : BitwiseXORExpression ^ BitwiseANDExpression",
    [
    ]
  ],
  "sec-built-in-function-objects-construct-argumentslist-newtarget" : [
    1135,
    "[[Construct]]",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    541,
    "[ContainsDuplicateLabels] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-date.prototype.settime" : [
    2215,
    "Date.prototype.setTime",
    [
    ]
  ],
  "sec-touint8" : [
    137,
    "ToUint8",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    532,
    "[ContainsDuplicateLabels] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    1499,
    "[ForInOfLoopEvaluation] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    818,
    "[NamedEvaluation] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|await|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    678,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for await ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-patterns-static-semantics-is-character-class|ClassEscape|CharacterClassEscape" : [
    2288,
    "[IsCharacterClass] ClassEscape : CharacterClassEscape",
    [
    ]
  ],
  "sec-numeric-types-bigint-tostring" : [
    2,
    "BigInt::toString",
    [
    ]
  ],
  "sec-object-environment-records-setmutablebinding-n-v-s" : [
    1021,
    "SetMutableBinding",
    [
    ]
  ],
  "sec-aggregate-error" : [
    2105,
    "AggregateError",
    [
    ]
  ],
  "sec-get-dataview.prototype.buffer" : [
    2669,
    "get DataView.prototype.buffer",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|AsyncConciseBody|ExpressionBody" : [
    416,
    "[VarDeclaredNames] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-defineownproperty-p-desc" : [
    1182,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-numericvalue|DecimalBigIntegerLiteral|NonZeroDigit|DecimalDigits|BigIntLiteralSuffix" : [
    1223,
    "[NumericValue] DecimalBigIntegerLiteral : NonZeroDigit DecimalDigits BigIntLiteralSuffix",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|FormalParameters|FormalParameterList|,|FunctionRestParameter" : [
    1578,
    "[ContainsExpression] FormalParameters : FormalParameterList , FunctionRestParameter",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|WithStatement|with|(|Expression|)|Statement" : [
    1805,
    "[HasCallInTailPosition] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-numericvalue|DecimalBigIntegerLiteral|NonZeroDigit|BigIntLiteralSuffix" : [
    1222,
    "[NumericValue] DecimalBigIntegerLiteral : NonZeroDigit BigIntLiteralSuffix",
    [
    ]
  ],
  "sec-ordinarytoprimitive" : [
    110,
    "OrdinaryToPrimitive",
    [
    ]
  ],
  "sec-arguments-exotic-objects-set-p-v-receiver" : [
    1153,
    "[[Set]]",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|FieldDefinition|ClassElementName|Initializer" : [
    1689,
    "[PrivateBoundIdentifiers] FieldDefinition : ClassElementName Initializer",
    [
    ]
  ],
  "sec-emptymatcher" : [
    2352,
    "EmptyMatcher",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|?.|Arguments" : [
    1330,
    "[ChainEvaluation] OptionalChain : ?. Arguments",
    [
    ]
  ],
  "sec-%typedarray%.prototype.at" : [
    2534,
    "TypedArray.prototype.at",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetCharacter|SourceCharacter" : [
    2425,
    "[CompileToCharSet] ClassSetCharacter : SourceCharacter",
    [
    ]
  ],
  "sec-yield" : [
    2804,
    "Yield",
    [
    ]
  ],
  "sec-haslexicaldeclaration" : [
    1044,
    "HasLexicalDeclaration",
    [
    ]
  ],
  "sec-thisnumbervalue" : [
    2117,
    "ThisNumberValue",
    [
    ]
  ],
  "sec-%asyncfromsynciteratorprototype%.return" : [
    2744,
    "AsyncFromSyncIteratorPrototype.return",
    [
    ]
  ],
  "sec-stringpad" : [
    2256,
    "StringPad",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|Literal" : [
    1877,
    "[HasCallInTailPosition] PrimaryExpression : Literal",
    [
    ]
  ],
  "sec-literals-runtime-semantics-evaluation|Literal|NullLiteral" : [
    1242,
    "[Evaluation] Literal : NullLiteral",
    [
    ]
  ],
  "sec-initializeboundname" : [
    889,
    "InitializeBoundName",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|AsyncGeneratorExpression" : [
    930,
    "[AssignmentTargetType] PrimaryExpression : AsyncGeneratorExpression",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|CoverCallExpressionAndAsyncArrowHead" : [
    933,
    "[AssignmentTargetType] CallExpression : CoverCallExpressionAndAsyncArrowHead",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|FieldDefinition|ClassElementName" : [
    869,
    "[ComputedPropertyContains] FieldDefinition : ClassElementName",
    [
    ]
  ],
  "sec-tostring" : [
    141,
    "ToString",
    [
    ]
  ],
  "sec-declarative-environment-records-setmutablebinding-n-v-s" : [
    1012,
    "SetMutableBinding",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassUnion|ClassSetOperand" : [
    2322,
    "[MayContainStrings] ClassUnion : ClassSetOperand",
    [
    ]
  ],
  "sec-runtime-semantics-classdefinitionevaluation|ClassTail|ClassHeritage|{|ClassBody|}" : [
    1742,
    "[ClassDefinitionEvaluation] ClassTail : ClassHeritage { ClassBody }",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|+|UnaryExpression" : [
    743,
    "[IsFunctionDefinition] UnaryExpression : + UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|DefaultClause|default|:|StatementList" : [
    562,
    "[ContainsDuplicateLabels] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|SubstitutionTemplate|TemplateHead|Expression|TemplateSpans" : [
    1326,
    "[ArgumentListEvaluation] SubstitutionTemplate : TemplateHead Expression TemplateSpans",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|;|;|)|Statement" : [
    1786,
    "[HasCallInTailPosition] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-getnamedtimezoneoffsetnanoseconds" : [
    2176,
    "GetNamedTimeZoneOffsetNanoseconds",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|ClassElement|;" : [
    867,
    "[ComputedPropertyContains] ClassElement : ;",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassSetCharacter|\\b" : [
    2306,
    "[CharacterValue] ClassSetCharacter : \\b",
    [
    ]
  ],
  "sec-compileatom|Atom|(|Disjunction|)" : [
    2375,
    "[CompileAtom] Atom : ( Disjunction )",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-isextensible" : [
    1086,
    "[[IsExtensible]]",
    [
    ]
  ],
  "sec-numerictorawbytes" : [
    2640,
    "NumericToRawBytes",
    [
    ]
  ],
  "sec-initializetypedarrayfromarraylike" : [
    2584,
    "InitializeTypedArrayFromArrayLike",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|BindingElementList|,|BindingRestElement|]" : [
    895,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ BindingElementList , BindingRestElement ]",
    [
    ]
  ],
  "sec-array.isarray" : [
    2479,
    "Array.isArray",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|TemplateLiteral" : [
    1886,
    "[HasCallInTailPosition] PrimaryExpression : TemplateLiteral",
    [
    ]
  ],
  "sec-arraybufferbytelength" : [
    2626,
    "ArrayBufferByteLength",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|BreakStatement" : [
    425,
    "[VarScopedDeclarations] Statement : BreakStatement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|BreakStatement" : [
    641,
    "[ContainsUndefinedContinueTarget] Statement : BreakStatement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    366,
    "[VarDeclaredNames] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Statement|ThrowStatement" : [
    358,
    "[VarDeclaredNames] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    1696,
    "[PrivateBoundIdentifiers] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-dataview.prototype.setuint8" : [
    2689,
    "DataView.prototype.setUint8",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ModuleItem|StatementListItem" : [
    318,
    "[LexicallyDeclaredNames] ModuleItem : StatementListItem",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|LiteralPropertyName|StringLiteral" : [
    1270,
    "[Evaluation] LiteralPropertyName : StringLiteral",
    [
    ]
  ],
  "sec-static-semantics-contains|ArrowParameters|CoverParenthesizedExpressionAndArrowParameterList" : [
    847,
    "[Contains] ArrowParameters : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|RelationalExpression|<|ShiftExpression" : [
    963,
    "[AssignmentTargetType] RelationalExpression : RelationalExpression < ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseClause|case|Expression|:" : [
    1814,
    "[HasCallInTailPosition] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|BindingElementList|,|Elision|]" : [
    226,
    "[BoundNames] ArrayBindingPattern : [ BindingElementList , Elision ]",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|s" : [
    2399,
    "[CompileToCharSet] CharacterClassEscape : s",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AdditiveExpression|AdditiveExpression|+|MultiplicativeExpression" : [
    1847,
    "[HasCallInTailPosition] AdditiveExpression : AdditiveExpression + MultiplicativeExpression",
    [
    ]
  ],
  "sec-break-statement-runtime-semantics-evaluation|BreakStatement|break|;" : [
    1514,
    "[Evaluation] BreakStatement : break ;",
    [
    ]
  ],
  "sec-property-accessors-runtime-semantics-evaluation|CallExpression|CallExpression|.|IdentifierName" : [
    1304,
    "[Evaluation] CallExpression : CallExpression . IdentifierName",
    [
    ]
  ],
  "sec-isconstructor" : [
    148,
    "IsConstructor",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|w" : [
    2401,
    "[CompileToCharSet] CharacterClassEscape : w",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    1797,
    "[HasCallInTailPosition] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-privateset" : [
    189,
    "PrivateSet",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|RegularExpressionLiteral" : [
    931,
    "[AssignmentTargetType] PrimaryExpression : RegularExpressionLiteral",
    [
    ]
  ],
  "sec-issharedarraybuffer" : [
    2655,
    "IsSharedArrayBuffer",
    [
    ]
  ],
  "sec-date.prototype.getdate" : [
    2190,
    "Date.prototype.getDate",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|BreakStatement|break|LabelIdentifier|;" : [
    614,
    "[ContainsUndefinedBreakTarget] BreakStatement : break LabelIdentifier ;",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|BindingPattern|ArrayBindingPattern" : [
    883,
    "[BindingInitialization] BindingPattern : ArrayBindingPattern",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|delete|UnaryExpression" : [
    948,
    "[AssignmentTargetType] UnaryExpression : delete UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-boundnames|VariableDeclaration|BindingIdentifier" : [
    216,
    "[BoundNames] VariableDeclaration : BindingIdentifier",
    [
    ]
  ],
  "sec-set.prototype.add" : [
    2605,
    "Set.prototype.add",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|d" : [
    2397,
    "[CompileToCharSet] CharacterClassEscape : d",
    [
    ]
  ],
  "sec-array.prototype.with" : [
    2526,
    "Array.prototype.with",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|MetaProperty" : [
    1872,
    "[HasCallInTailPosition] MemberExpression : MetaProperty",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassSetCharacter|SourceCharacter" : [
    2304,
    "[CharacterValue] ClassSetCharacter : SourceCharacter",
    [
    ]
  ],
  "sec-static-semantics-specialmethod|MethodDefinition|AsyncGeneratorMethod" : [
    1636,
    "[SpecialMethod] MethodDefinition : AsyncGeneratorMethod",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    609,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|?.|[|Expression|]" : [
    1331,
    "[ChainEvaluation] OptionalChain : ?. [ Expression ]",
    [
    ]
  ],
  "sec-compiletocharset|UnicodePropertyValueExpression|LoneUnicodePropertyNameOrValue" : [
    2406,
    "[CompileToCharSet] UnicodePropertyValueExpression : LoneUnicodePropertyNameOrValue",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|CallExpression|Arguments" : [
    936,
    "[AssignmentTargetType] CallExpression : CallExpression Arguments",
    [
    ]
  ],
  "sec-function.prototype.apply" : [
    2084,
    "Function.prototype.apply",
    [
    ]
  ],
  "sec-symbol.prototype.tostring" : [
    2096,
    "Symbol.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MemberExpression|new|MemberExpression|Arguments" : [
    940,
    "[AssignmentTargetType] MemberExpression : new MemberExpression Arguments",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    921,
    "[AssignmentTargetType] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|S" : [
    2400,
    "[CompileToCharSet] CharacterClassEscape : S",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingElisionElement|Elision|BindingElement" : [
    1570,
    "[ContainsExpression] BindingElisionElement : Elision BindingElement",
    [
    ]
  ],
  "sec-array.prototype.flatmap" : [
    2497,
    "Array.prototype.flatMap",
    [
    ]
  ],
  "sec-template-literals-runtime-semantics-evaluation|TemplateMiddleList|TemplateMiddleList|TemplateMiddle|Expression" : [
    1297,
    "[Evaluation] TemplateMiddleList : TemplateMiddleList TemplateMiddle Expression",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|default|AssignmentExpression|;" : [
    2010,
    "[ExportEntries] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-get-map.prototype.size" : [
    2598,
    "get Map.prototype.size",
    [
    ]
  ],
  "sec-async-module-execution-fulfilled" : [
    1941,
    "AsyncModuleExecutionFulfilled",
    [
    ]
  ],
  "sec-static-semantics-concisebodycontainsusestrict|ConciseBody|{|FunctionBody|}" : [
    1622,
    "[ConciseBodyContainsUseStrict] ConciseBody : { FunctionBody }",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|W" : [
    2402,
    "[CompileToCharSet] CharacterClassEscape : W",
    [
    ]
  ],
  "sec-isstringwellformedunicode" : [
    153,
    "IsStringWellFormedUnicode",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|TryStatement|try|Block|Catch|Finally" : [
    697,
    "[ContainsUndefinedContinueTarget] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    1703,
    "[ContainsArguments] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    535,
    "[ContainsDuplicateLabels] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-boundnames|LexicalBinding|BindingIdentifier|Initializer" : [
    213,
    "[BoundNames] LexicalBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|NonEmptyClassString|ClassSetCharacter|NonEmptyClassString" : [
    2332,
    "[MayContainStrings] NonEmptyClassString : ClassSetCharacter NonEmptyClassString",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|new|MemberExpression|Arguments" : [
    811,
    "[IsIdentifierRef] MemberExpression : new MemberExpression Arguments",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|CallExpression|CallExpression|.|PrivateIdentifier" : [
    1683,
    "[AllPrivateIdentifiersValid] CallExpression : CallExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-boundnames|GeneratorDeclaration|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    245,
    "[BoundNames] GeneratorDeclaration : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-get-regexp.prototype.source" : [
    2459,
    "get RegExp.prototype.source",
    [
    ]
  ],
  "sec-daywithinyear" : [
    2165,
    "DayWithinYear",
    [
    ]
  ],
  "sec-compiletocharset|NestedClass|[^|ClassContents|]" : [
    2420,
    "[CompileToCharSet] NestedClass : [^ ClassContents ]",
    [
    ]
  ],
  "sec-get-regexp.prototype.unicode" : [
    2465,
    "get RegExp.prototype.unicode",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|D" : [
    2398,
    "[CompileToCharSet] CharacterClassEscape : D",
    [
    ]
  ],
  "sec-object.prototype.valueof" : [
    2075,
    "Object.prototype.valueOf",
    [
    ]
  ],
  "sec-number.issafeinteger" : [
    2111,
    "Number.isSafeInteger",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|?.|PrivateIdentifier" : [
    1901,
    "[HasCallInTailPosition] OptionalChain : ?. PrivateIdentifier",
    [
    ]
  ],
  "sec-compilesubpattern|Term|Atom|Quantifier" : [
    2350,
    "[CompileSubpattern] Term : Atom Quantifier",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|HexLeadSurrogate|Hex4Digits" : [
    2300,
    "[CharacterValue] HexLeadSurrogate : Hex4Digits",
    [
    ]
  ],
  "sec-template-literals-runtime-semantics-evaluation|TemplateSpans|TemplateMiddleList|TemplateTail" : [
    1295,
    "[Evaluation] TemplateSpans : TemplateMiddleList TemplateTail",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|AssignmentElementList|,|Elision|AssignmentRestElement|]" : [
    1404,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ AssignmentElementList , Elision AssignmentRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|ForBinding|BindingPattern" : [
    1492,
    "[IsDestructuring] ForBinding : BindingPattern",
    [
    ]
  ],
  "sec-get-arraybuffer.prototype.detached" : [
    2647,
    "get ArrayBuffer.prototype.detached",
    [
    ]
  ],
  "sec-array-initializer-runtime-semantics-evaluation|ArrayLiteral|[|]" : [
    1257,
    "[Evaluation] ArrayLiteral : [ ]",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|SingleNameBinding|BindingIdentifier|Initializer" : [
    1586,
    "[IsSimpleParameterList] SingleNameBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-createdatapropertyorthrow" : [
    165,
    "CreateDataPropertyOrThrow",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AdditiveExpression|AdditiveExpression|+|MultiplicativeExpression" : [
    750,
    "[IsFunctionDefinition] AdditiveExpression : AdditiveExpression + MultiplicativeExpression",
    [
    ]
  ],
  "sec-ContinueModuleLoading" : [
    1932,
    "ContinueModuleLoading",
    [
    ]
  ],
  "sec-static-semantics-exportentriesformodule|NamedExports|{|}" : [
    2013,
    "[ExportEntriesForModule] NamedExports : { }",
    [
    ]
  ],
  "sec-createsetiterator" : [
    2614,
    "CreateSetIterator",
    [
      2613
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|LabelledItem|FunctionDeclaration" : [
    1536,
    "[LabelledEvaluation] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportDeclaration|export|default|AssignmentExpression|;" : [
    1995,
    "[ExportedNames] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    382,
    "[VarDeclaredNames] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-compiletocharset|ClassUnion|ClassSetRange|ClassUnion" : [
    2408,
    "[CompileToCharSet] ClassUnion : ClassSetRange ClassUnion",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|RelationalExpression|in|ShiftExpression" : [
    1842,
    "[HasCallInTailPosition] RelationalExpression : RelationalExpression in ShiftExpression",
    [
    ]
  ],
  "sec-math.tan" : [
    2156,
    "Math.tan",
    [
    ]
  ],
  "sec-runtime-semantics-scriptevaluation" : [
    1914,
    "ScriptEvaluation",
    [
    ]
  ],
  "sec-timefromyear" : [
    2163,
    "TimeFromYear",
    [
    ]
  ],
  "sec-dataview.prototype.getuint32" : [
    2681,
    "DataView.prototype.getUint32",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    685,
    "[ContainsUndefinedContinueTarget] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|VariableStatement" : [
    263,
    "[BoundNames] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-createsharedbytedatablock" : [
    107,
    "CreateSharedByteDataBlock",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    460,
    "[VarScopedDeclarations] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-function-environment-records-hasthisbinding" : [
    1028,
    "HasThisBinding",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|MemberExpression|TemplateLiteral" : [
    808,
    "[IsIdentifierRef] MemberExpression : MemberExpression TemplateLiteral",
    [
    ]
  ],
  "sec-runtime-semantics-classdefinitionevaluation|ClassTail|ClassHeritage|{|}" : [
    1740,
    "[ClassDefinitionEvaluation] ClassTail : ClassHeritage { }",
    [
    ]
  ],
  "sec-toint8" : [
    136,
    "ToInt8",
    [
    ]
  ],
  "sec-hasownproperty" : [
    171,
    "HasOwnProperty",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    1467,
    "[ForLoopEvaluation] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-math.ceil" : [
    2134,
    "Math.ceil",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    1709,
    "[ContainsArguments] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-wordcharacters" : [
    2431,
    "WordCharacters",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|NamedExports|;" : [
    2023,
    "[Evaluation] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-return-statement-runtime-semantics-evaluation|ReturnStatement|return|;" : [
    1516,
    "[Evaluation] ReturnStatement : return ;",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|AsyncConciseBody|ExpressionBody" : [
    1119,
    "[EvaluateBody] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-%typedarray%.of" : [
    2532,
    "TypedArray.of",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    1486,
    "[IsDestructuring] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-get-%typedarray%-@@species" : [
    2533,
    "get TypedArray[@@species]",
    [
    ]
  ],
  "sec-isintegralnumber" : [
    150,
    "IsIntegralNumber",
    [
    ]
  ],
  "sec-newdeclarativeenvironment" : [
    1055,
    "NewDeclarativeEnvironment",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|NamedExports|;" : [
    2005,
    "[ExportEntries] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    557,
    "[ContainsDuplicateLabels] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|BindingElementList|,|Elision|BindingRestElement|]" : [
    1566,
    "[ContainsExpression] ArrayBindingPattern : [ BindingElementList , Elision BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|LogicalORExpression|LogicalORExpression||||LogicalANDExpression" : [
    1891,
    "[HasCallInTailPosition] LogicalORExpression : LogicalORExpression || LogicalANDExpression",
    [
    ]
  ],
  "sec-get-dataview.prototype.byteoffset" : [
    2671,
    "get DataView.prototype.byteOffset",
    [
    ]
  ],
  "sec-math.atan" : [
    2130,
    "Math.atan",
    [
    ]
  ],
  "sec-builtincallorconstruct" : [
    1136,
    "BuiltinCallOrConstruct",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentElementList|AssignmentElementList|,|AssignmentElisionElement" : [
    1411,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentElementList : AssignmentElementList , AssignmentElisionElement",
    [
    ]
  ],
  "sec-encodeuri-uri" : [
    2038,
    "encodeURI",
    [
    ]
  ],
  "sec-static-semantics-importentries|ImportDeclaration|import|ImportClause|FromClause|;" : [
    1959,
    "[ImportEntries] ImportDeclaration : import ImportClause FromClause ;",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|Elision|," : [
    1414,
    "[IteratorDestructuringAssignmentEvaluation] Elision : ,",
    [
    ]
  ],
  "sec-evaluatestringornumericbinaryexpression" : [
    1390,
    "EvaluateStringOrNumericBinaryExpression",
    [
    ]
  ],
  "sec-copydatablockbytes" : [
    108,
    "CopyDataBlockBytes",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|MemberExpression|.|IdentifierName" : [
    807,
    "[IsIdentifierRef] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|VariableStatement" : [
    1974,
    "[ExportedBindings] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    386,
    "[VarDeclaredNames] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-setintegritylevel" : [
    174,
    "SetIntegrityLevel",
    [
    ]
  ],
  "sec-async-function-definitions-runtime-semantics-evaluation|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1755,
    "[Evaluation] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-createiteratorfromclosure" : [
    2805,
    "CreateIteratorFromClosure",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|ShiftExpression|ShiftExpression|>>>|AdditiveExpression" : [
    962,
    "[AssignmentTargetType] ShiftExpression : ShiftExpression >>> AdditiveExpression",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-delete-p" : [
    1103,
    "[[Delete]]",
    [
    ]
  ],
  "sec-revalidateatomicaccess" : [
    2695,
    "RevalidateAtomicAccess",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|GeneratorMethod|*|ClassElementName|(|UniqueFormalParameters|)|{|GeneratorBody|}" : [
    863,
    "[ComputedPropertyContains] GeneratorMethod : * ClassElementName ( UniqueFormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-get-sharedarraybuffer.prototype.growable" : [
    2660,
    "get SharedArrayBuffer.prototype.growable",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncArrowFunction|async|AsyncArrowBindingIdentifier|=>|AsyncConciseBody" : [
    848,
    "[Contains] AsyncArrowFunction : async AsyncArrowBindingIdentifier => AsyncConciseBody",
    [
    ]
  ],
  "sec-runtime-semantics-definemethod|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    1639,
    "[DefineMethod] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    601,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-createasyncfromsynciterator" : [
    2742,
    "CreateAsyncFromSyncIterator",
    [
    ]
  ],
  "sec-dataview.prototype.getuint16" : [
    2680,
    "DataView.prototype.getUint16",
    [
    ]
  ],
  "sec-static-semantics-contains|CallExpression|CallExpression|.|IdentifierName" : [
    854,
    "[Contains] CallExpression : CallExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-specialmethod|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    1637,
    "[SpecialMethod] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|EqualityExpression|EqualityExpression|!=|RelationalExpression" : [
    971,
    "[AssignmentTargetType] EqualityExpression : EqualityExpression != RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-propertynamelist|PropertyDefinitionList|PropertyDefinition" : [
    1264,
    "[PropertyNameList] PropertyDefinitionList : PropertyDefinition",
    [
    ]
  ],
  "sec-bitwise-not-operator-runtime-semantics-evaluation|UnaryExpression|~|UnaryExpression" : [
    1356,
    "[Evaluation] UnaryExpression : ~ UnaryExpression",
    [
    ]
  ],
  "sec-event-set" : [
    2853,
    "EventSet",
    [
    ]
  ],
  "sec-%typedarray%.prototype.findindex" : [
    2544,
    "TypedArray.prototype.findIndex",
    [
    ]
  ],
  "sec-static-semantics-hasname|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    704,
    "[HasName] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|~|UnaryExpression" : [
    1860,
    "[HasCallInTailPosition] UnaryExpression : ~ UnaryExpression",
    [
    ]
  ],
  "sec-template-literals-runtime-semantics-evaluation|TemplateLiteral|NoSubstitutionTemplate" : [
    1292,
    "[Evaluation] TemplateLiteral : NoSubstitutionTemplate",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|MemberExpression|[|Expression|]" : [
    1480,
    "[IsDestructuring] MemberExpression : MemberExpression [ Expression ]",
    [
    ]
  ],
  "sec-boundfunctioncreate" : [
    1140,
    "BoundFunctionCreate",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentElement|DestructuringAssignmentTarget" : [
    1416,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentElement : DestructuringAssignmentTarget",
    [
    ]
  ],
  "sec-getnewtarget" : [
    1070,
    "GetNewTarget",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MemberExpression|SuperProperty" : [
    919,
    "[AssignmentTargetType] MemberExpression : SuperProperty",
    [
    ]
  ],
  "sec-%typedarray%.prototype.includes" : [
    2548,
    "TypedArray.prototype.includes",
    [
    ]
  ],
  "sec-createarrayiterator" : [
    2528,
    "CreateArrayIterator",
    [
      2527
    ]
  ],
  "sec-getiterator" : [
    195,
    "GetIterator",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|LogicalANDExpression|LogicalANDExpression|&&|BitwiseORExpression" : [
    769,
    "[IsFunctionDefinition] LogicalANDExpression : LogicalANDExpression && BitwiseORExpression",
    [
    ]
  ],
  "sec-makeclassconstructor" : [
    1128,
    "MakeClassConstructor",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatefunctionbody|FunctionBody|FunctionStatementList" : [
    1611,
    "[EvaluateFunctionBody] FunctionBody : FunctionStatementList",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    346,
    "[LexicallyScopedDeclarations] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|ImportSpecifier|ImportedBinding" : [
    1967,
    "[ImportEntriesForModule] ImportSpecifier : ImportedBinding",
    [
    ]
  ],
  "sec-this-keyword-runtime-semantics-evaluation|PrimaryExpression|this" : [
    1241,
    "[Evaluation] PrimaryExpression : this",
    [
    ]
  ],
  "sec-assignment-operators-runtime-semantics-evaluation|AssignmentExpression|LeftHandSideExpression|=|AssignmentExpression" : [
    1384,
    "[Evaluation] AssignmentExpression : LeftHandSideExpression = AssignmentExpression",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|Expression|;|;|)|Statement" : [
    1465,
    "[ForLoopEvaluation] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-compileatom|Atom|(|GroupSpecifier|Disjunction|)" : [
    2376,
    "[CompileAtom] Atom : ( GroupSpecifier Disjunction )",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|ObjectLiteral|{|PropertyDefinitionList|}" : [
    1267,
    "[Evaluation] ObjectLiteral : { PropertyDefinitionList }",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportDeclaration|export|default|ClassDeclaration" : [
    1994,
    "[ExportedNames] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|ClassDeclaration|class|BindingIdentifier|ClassTail" : [
    285,
    "[IsConstantDeclaration] ClassDeclaration : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-static-semantics-propertynamelist|PropertyDefinitionList|PropertyDefinitionList|,|PropertyDefinition" : [
    1265,
    "[PropertyNameList] PropertyDefinitionList : PropertyDefinitionList , PropertyDefinition",
    [
    ]
  ],
  "sec-iteratorstep" : [
    199,
    "IteratorStep",
    [
    ]
  ],
  "sec-atomics.islockfree" : [
    2717,
    "Atomics.isLockFree",
    [
    ]
  ],
  "sec-isvalidintegerindex" : [
    1173,
    "IsValidIntegerIndex",
    [
    ]
  ],
  "sec-runtime-semantics-evaluateasyncfunctionbody|AsyncFunctionBody|FunctionBody" : [
    1754,
    "[EvaluateAsyncFunctionBody] AsyncFunctionBody : FunctionBody",
    [
    ]
  ],
  "sec-reflect.get" : [
    2841,
    "Reflect.get",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|Expression|;|;|)|Statement" : [
    372,
    "[VarDeclaredNames] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-getvaluefrombuffer" : [
    2639,
    "GetValueFromBuffer",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|LeftHandSideExpression|||=|AssignmentExpression" : [
    987,
    "[AssignmentTargetType] AssignmentExpression : LeftHandSideExpression ||= AssignmentExpression",
    [
    ]
  ],
  "sec-object.getprototypeof" : [
    2058,
    "Object.getPrototypeOf",
    [
    ]
  ],
  "sec-static-semantics-classelementevaluation|ClassElement|FieldDefinition|;" : [
    1729,
    "[ClassElementEvaluation] ClassElement : FieldDefinition ;",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|ObjectLiteral" : [
    797,
    "[IsIdentifierRef] PrimaryExpression : ObjectLiteral",
    [
    ]
  ],
  "sec-date.prototype.totimestring" : [
    2231,
    "Date.prototype.toTimeString",
    [
    ]
  ],
  "sec-static-semantics-contains|SuperProperty|super|.|IdentifierName" : [
    853,
    "[Contains] SuperProperty : super . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Catch|catch|(|CatchParameter|)|Block" : [
    632,
    "[ContainsUndefinedBreakTarget] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-runtime-semantics-keyedbindinginitialization|SingleNameBinding|BindingIdentifier|Initializer" : [
    1449,
    "[KeyedBindingInitialization] SingleNameBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-day" : [
    2159,
    "Day",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|LabelledItem|FunctionDeclaration" : [
    306,
    "[LexicallyDeclaredNames] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-conditional-operator-runtime-semantics-evaluation|ConditionalExpression|ShortCircuitExpression|?|AssignmentExpression|:|AssignmentExpression" : [
    1383,
    "[Evaluation] ConditionalExpression : ShortCircuitExpression ? AssignmentExpression : AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-templatestrings|TemplateSpans|TemplateMiddleList|TemplateTail" : [
    1283,
    "[TemplateStrings] TemplateSpans : TemplateMiddleList TemplateTail",
    [
    ]
  ],
  "sec-ordinarygetownproperty" : [
    1091,
    "OrdinaryGetOwnProperty",
    [
    ]
  ],
  "sec-static-semantics-boundnames|VariableDeclaration|BindingPattern|Initializer" : [
    218,
    "[BoundNames] VariableDeclaration : BindingPattern Initializer",
    [
    ]
  ],
  "sec-getglobalobject" : [
    1071,
    "GetGlobalObject",
    [
    ]
  ],
  "sec-evaldeclarationinstantiation" : [
    2031,
    "EvalDeclarationInstantiation",
    [
    ]
  ],
  "sec-preparefortailcall" : [
    24,
    "PrepareForTailCall",
    [
    ]
  ],
  "sec-static-semantics-capturinggroupname|GroupName|<|RegExpIdentifierName|>" : [
    2334,
    "[CapturingGroupName] GroupName : < RegExpIdentifierName >",
    [
    ]
  ],
  "sec-runtime-semantics-characterrange-abstract-operation" : [
    2429,
    "CharacterRange",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UpdateExpression|--|UnaryExpression" : [
    1854,
    "[HasCallInTailPosition] UpdateExpression : -- UnaryExpression",
    [
    ]
  ],
  "sec-runtime-semantics-methoddefinitionevaluation|GeneratorMethod|*|ClassElementName|(|UniqueFormalParameters|)|{|GeneratorBody|}" : [
    1643,
    "[MethodDefinitionEvaluation] GeneratorMethod : * ClassElementName ( UniqueFormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|P{|UnicodePropertyValueExpression|}" : [
    2404,
    "[CompileToCharSet] CharacterClassEscape : P{ UnicodePropertyValueExpression }",
    [
    ]
  ],
  "sec-compiletocharset|ClassContents" : [
    2387,
    "[CompileToCharSet] ClassContents :",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportFromClause|*|as|ModuleExportName" : [
    1989,
    "[ExportedNames] ExportFromClause : * as ModuleExportName",
    [
    ]
  ],
  "sec-get-regexp.prototype.global" : [
    2451,
    "get RegExp.prototype.global",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-get-p-receiver" : [
    1098,
    "[[Get]]",
    [
    ]
  ],
  "sec-host-cleanup-finalization-registry" : [
    1077,
    "HostEnqueueFinalizationRegistryCleanupJob",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|BindingIdentifier|await" : [
    881,
    "[BindingInitialization] BindingIdentifier : await",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|SpreadElement" : [
    1250,
    "[ArrayAccumulation] ElementList : SpreadElement",
    [
    ]
  ],
  "sec-agentcansuspend" : [
    1076,
    "AgentCanSuspend",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Script" : [
    487,
    "[VarScopedDeclarations] Script :",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|FormalParameterList|FormalParameter" : [
    1604,
    "[ExpectedArgumentCount] FormalParameterList : FormalParameter",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|TryStatement|try|Block|Catch" : [
    1818,
    "[HasCallInTailPosition] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-date.prototype.setseconds" : [
    2214,
    "Date.prototype.setSeconds",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ConciseBody|ExpressionBody" : [
    339,
    "[LexicallyScopedDeclarations] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    1987,
    "[ExportedNames] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-static-semantics-specialmethod|MethodDefinition|GeneratorMethod" : [
    1634,
    "[SpecialMethod] MethodDefinition : GeneratorMethod",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|FunctionStatementList" : [
    411,
    "[VarDeclaredNames] FunctionStatementList :",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ClassStaticBlockStatementList" : [
    634,
    "[ContainsUndefinedBreakTarget] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetCharacter|\\|CharacterEscape" : [
    2426,
    "[CompileToCharSet] ClassSetCharacter : \\ CharacterEscape",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ObjectBindingPattern|{|BindingPropertyList|,|BindingRestProperty|}" : [
    220,
    "[BoundNames] ObjectBindingPattern : { BindingPropertyList , BindingRestProperty }",
    [
    ]
  ],
  "sec-GetImportedModule" : [
    1948,
    "GetImportedModule",
    [
    ]
  ],
  "sec-global-environment-records-withbaseobject" : [
    1041,
    "WithBaseObject",
    [
    ]
  ],
  "sec-boolean.prototype.valueof" : [
    2090,
    "Boolean.prototype.valueOf",
    [
    ]
  ],
  "sec-updateempty" : [
    90,
    "UpdateEmpty",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|BindingRestElement|]" : [
    223,
    "[BoundNames] ArrayBindingPattern : [ BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|BitwiseANDExpression|BitwiseANDExpression|&|EqualityExpression" : [
    974,
    "[AssignmentTargetType] BitwiseANDExpression : BitwiseANDExpression & EqualityExpression",
    [
    ]
  ],
  "sec-date.prototype.gethours" : [
    2193,
    "Date.prototype.getHours",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    441,
    "[VarScopedDeclarations] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-add-value-to-keyed-group" : [
    192,
    "AddValueToKeyedGroup",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    380,
    "[VarDeclaredNames] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-string.prototype.tolowercase" : [
    2267,
    "String.prototype.toLowerCase",
    [
    ]
  ],
  "sec-createmapiterator" : [
    2601,
    "CreateMapIterator",
    [
      2600
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|SuperProperty" : [
    729,
    "[IsFunctionDefinition] MemberExpression : SuperProperty",
    [
    ]
  ],
  "sec-parseint-string-radix" : [
    2035,
    "parseInt",
    [
    ]
  ],
  "sec-compilecharacterclass|CharacterClass|[|ClassContents|]" : [
    2385,
    "[CompileCharacterClass] CharacterClass : [ ClassContents ]",
    [
    ]
  ],
  "sec-get-arraybuffer.prototype.resizable" : [
    2649,
    "get ArrayBuffer.prototype.resizable",
    [
    ]
  ],
  "sec-typedarraybytelength" : [
    1170,
    "TypedArrayByteLength",
    [
    ]
  ],
  "sec-compilesubpattern|Disjunction|Alternative|||Disjunction" : [
    2345,
    "[CompileSubpattern] Disjunction : Alternative | Disjunction",
    [
    ]
  ],
  "sec-serializejsonproperty" : [
    2729,
    "SerializeJSONProperty",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    434,
    "[VarScopedDeclarations] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-get-regexp.prototype.hasIndices" : [
    2452,
    "get RegExp.prototype.hasIndices",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|ObjectLiteral" : [
    723,
    "[IsFunctionDefinition] PrimaryExpression : ObjectLiteral",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|default|HoistableDeclaration" : [
    350,
    "[LexicallyScopedDeclarations] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-object.issealed" : [
    2064,
    "Object.isSealed",
    [
    ]
  ],
  "sec-object.prototype.__defineSetter__" : [
    2079,
    "Object.prototype.__defineSetter__",
    [
    ]
  ],
  "sec-samevaluenonnumber" : [
    156,
    "SameValueNonNumber",
    [
    ]
  ],
  "sec-createiterresultobject" : [
    203,
    "CreateIterResultObject",
    [
    ]
  ],
  "sec-dataview.prototype.setuint32" : [
    2691,
    "DataView.prototype.setUint32",
    [
    ]
  ],
  "sec-array.prototype.indexof" : [
    2500,
    "Array.prototype.indexOf",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingElisionElement|BindingElement" : [
    231,
    "[BoundNames] BindingElisionElement : BindingElement",
    [
    ]
  ],
  "sec-date.prototype.getminutes" : [
    2195,
    "Date.prototype.getMinutes",
    [
    ]
  ],
  "sec-property-accessors-runtime-semantics-evaluation|CallExpression|CallExpression|[|Expression|]" : [
    1303,
    "[Evaluation] CallExpression : CallExpression [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-nonconstructorelements|ClassElementList|ClassElement" : [
    1677,
    "[NonConstructorElements] ClassElementList : ClassElement",
    [
    ]
  ],
  "sec-static-semantics-contains|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    827,
    "[Contains] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseBlock|{|}" : [
    465,
    "[VarScopedDeclarations] CaseBlock : { }",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|NewExpression|new|NewExpression" : [
    733,
    "[IsFunctionDefinition] NewExpression : new NewExpression",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ObjectAssignmentPattern|{|AssignmentPropertyList|,|}" : [
    1393,
    "[DestructuringAssignmentEvaluation] ObjectAssignmentPattern : { AssignmentPropertyList , }",
    [
    ]
  ],
  "sec-static-semantics-hasname|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    708,
    "[HasName] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-class-definitions-runtime-semantics-evaluation|ClassElementName|PrivateIdentifier" : [
    1748,
    "[Evaluation] ClassElementName : PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|AsyncFunctionExpression" : [
    801,
    "[IsIdentifierRef] PrimaryExpression : AsyncFunctionExpression",
    [
    ]
  ],
  "sec-object-value" : [
    2043,
    "Object",
    [
    ]
  ],
  "sec-numeric-types-bigint-bitwiseNOT" : [
    71,
    "BigInt::bitwiseNOT",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|FormalParameters|FormalParameterList|,|FunctionRestParameter" : [
    1589,
    "[IsSimpleParameterList] FormalParameters : FormalParameterList , FunctionRestParameter",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|IfStatement" : [
    1541,
    "[LabelledEvaluation] Statement : IfStatement",
    [
    ]
  ],
  "sec-numeric-types-number-multiply" : [
    54,
    "Number::multiply",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseClauses|CaseClauses|CaseClause" : [
    688,
    "[ContainsUndefinedContinueTarget] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ImportsList|ImportsList|,|ImportSpecifier" : [
    259,
    "[BoundNames] ImportsList : ImportsList , ImportSpecifier",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|IdentifierName|IdentifierStart" : [
    1227,
    "[StringValue] IdentifierName : IdentifierStart",
    [
    ]
  ],
  "sec-array.of" : [
    2480,
    "Array.of",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|Declaration" : [
    2007,
    "[ExportEntries] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-addwaiter" : [
    2699,
    "AddWaiter",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|LogicalANDExpression|LogicalANDExpression|&&|BitwiseORExpression" : [
    1890,
    "[HasCallInTailPosition] LogicalANDExpression : LogicalANDExpression && BitwiseORExpression",
    [
    ]
  ],
  "sec-binaryxor" : [
    83,
    "BinaryXor",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    841,
    "[Contains] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportDeclaration|export|default|HoistableDeclaration" : [
    1993,
    "[ExportedNames] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-function.prototype-@@hasinstance" : [
    2087,
    "Function.prototype[@@hasInstance]",
    [
    ]
  ],
  "sec-static-semantics-contains|PropertyDefinition|MethodDefinition" : [
    850,
    "[Contains] PropertyDefinition : MethodDefinition",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|Declaration" : [
    2025,
    "[Evaluation] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-getviewvalue" : [
    2666,
    "GetViewValue",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|LabelledItem|FunctionDeclaration" : [
    1777,
    "[HasCallInTailPosition] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|Declaration" : [
    264,
    "[BoundNames] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-%typedarray%.from" : [
    2531,
    "TypedArray.from",
    [
    ]
  ],
  "sec-array.prototype.flat" : [
    2495,
    "Array.prototype.flat",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|CallExpression|.|IdentifierName" : [
    1866,
    "[HasCallInTailPosition] CallExpression : CallExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    1697,
    "[PrivateBoundIdentifiers] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ModuleItemList|ModuleItemList|ModuleItem" : [
    1969,
    "[ExportedBindings] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassEscape|b" : [
    2291,
    "[CharacterValue] ClassEscape : b",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    605,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|;|;|)|Statement" : [
    588,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-numeric-types-number-bitwiseXOR" : [
    68,
    "Number::bitwiseXOR",
    [
    ]
  ],
  "sec-resolve-private-identifier" : [
    1061,
    "ResolvePrivateIdentifier",
    [
    ]
  ],
  "sec-isregexp" : [
    152,
    "IsRegExp",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-get-p-receiver" : [
    1184,
    "[[Get]]",
    [
    ]
  ],
  "sec-global-environment-records-hassuperbinding" : [
    1040,
    "HasSuperBinding",
    [
    ]
  ],
  "sec-numeric-types-number-remainder" : [
    56,
    "Number::remainder",
    [
    ]
  ],
  "sec-settypedarrayfromtypedarray" : [
    2559,
    "SetTypedArrayFromTypedArray",
    [
    ]
  ],
  "sec-numeric-types-number-sameValue" : [
    64,
    "Number::sameValue",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    1800,
    "[HasCallInTailPosition] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|!|UnaryExpression" : [
    954,
    "[AssignmentTargetType] UnaryExpression : ! UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassUnion|ClassSetOperand|ClassUnion" : [
    2323,
    "[MayContainStrings] ClassUnion : ClassSetOperand ClassUnion",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncFunctionExpression|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1718,
    "[ContainsArguments] AsyncFunctionExpression : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-regular-expression-literals-runtime-semantics-evaluation|PrimaryExpression|RegularExpressionLiteral" : [
    1279,
    "[Evaluation] PrimaryExpression : RegularExpressionLiteral",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|AwaitExpression" : [
    955,
    "[AssignmentTargetType] UnaryExpression : AwaitExpression",
    [
    ]
  ],
  "sec-object.freeze" : [
    2050,
    "Object.freeze",
    [
    ]
  ],
  "sec-static-semantics-hasname|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    705,
    "[HasName] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-functionbodycontainsusestrict|FunctionBody|FunctionStatementList" : [
    1610,
    "[FunctionBodyContainsUseStrict] FunctionBody : FunctionStatementList",
    [
    ]
  ],
  "sec-class-definitions-runtime-semantics-evaluation|ClassExpression|class|BindingIdentifier|ClassTail" : [
    1747,
    "[Evaluation] ClassExpression : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    378,
    "[VarDeclaredNames] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ModuleItemList|ModuleItemList|ModuleItem" : [
    701,
    "[ContainsUndefinedContinueTarget] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-runtime-semantics-propertydefinitionevaluation|PropertyDefinition|MethodDefinition" : [
    1277,
    "[PropertyDefinitionEvaluation] PropertyDefinition : MethodDefinition",
    [
    ]
  ],
  "sec-static-semantics-toplevelvardeclarednames|LabelledItem|Statement" : [
    503,
    "[TopLevelVarDeclaredNames] LabelledItem : Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UpdateExpression|++|UnaryExpression" : [
    946,
    "[AssignmentTargetType] UpdateExpression : ++ UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncFunctionExpression|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    842,
    "[Contains] AsyncFunctionExpression : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-%typedarray%.prototype.findlast" : [
    2545,
    "TypedArray.prototype.findLast",
    [
    ]
  ],
  "sec-toprimitive" : [
    109,
    "ToPrimitive",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|delete|UnaryExpression" : [
    740,
    "[IsFunctionDefinition] UnaryExpression : delete UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|delete|UnaryExpression" : [
    1855,
    "[HasCallInTailPosition] UnaryExpression : delete UnaryExpression",
    [
    ]
  ],
  "sec-isstrictlyequal" : [
    159,
    "IsStrictlyEqual",
    [
    ]
  ],
  "sec-runtime-semantics-caseblockevaluation|CaseBlock|{|CaseClauses|}" : [
    1520,
    "[CaseBlockEvaluation] CaseBlock : { CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    436,
    "[VarScopedDeclarations] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-typedarray" : [
    2579,
    "_TypedArray_",
    [
    ]
  ],
  "sec-ordinaryhasinstance" : [
    180,
    "OrdinaryHasInstance",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassIntersection|ClassIntersection|&&|ClassSetOperand" : [
    2325,
    "[MayContainStrings] ClassIntersection : ClassIntersection && ClassSetOperand",
    [
    ]
  ],
  "sec-isconcatspreadable" : [
    2484,
    "IsConcatSpreadable",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseClause|case|Expression|:" : [
    623,
    "[ContainsUndefinedBreakTarget] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-allcharacters" : [
    2432,
    "AllCharacters",
    [
    ]
  ],
  "sec-array.prototype.slice" : [
    2511,
    "Array.prototype.slice",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|await|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    459,
    "[VarScopedDeclarations] ForInOfStatement : for await ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hasname|GeneratorExpression|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    714,
    "[HasName] GeneratorExpression : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-regexp.prototype-@@replace" : [
    2457,
    "RegExp.prototype[@@replace]",
    [
    ]
  ],
  "sec-math.trunc" : [
    2158,
    "Math.trunc",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|default|ClassDeclaration" : [
    1928,
    "[ModuleRequests] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|BreakableStatement|SwitchStatement" : [
    1534,
    "[LabelledEvaluation] BreakableStatement : SwitchStatement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatearrowfunctionexpression|ArrowFunction|ArrowParameters|=>|ConciseBody" : [
    1624,
    "[InstantiateArrowFunctionExpression] ArrowFunction : ArrowParameters => ConciseBody",
    [
    ]
  ],
  "sec-static-semantics-specialmethod|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    1638,
    "[SpecialMethod] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-setvalueinbuffer" : [
    2641,
    "SetValueInBuffer",
    [
    ]
  ],
  "sec-initializeinstanceelements" : [
    191,
    "InitializeInstanceElements",
    [
    ]
  ],
  "sec-array.prototype.entries" : [
    2486,
    "Array.prototype.entries",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|IfStatement|if|(|Expression|)|Statement" : [
    1783,
    "[HasCallInTailPosition] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|EqualityExpression|EqualityExpression|!==|RelationalExpression" : [
    1836,
    "[HasCallInTailPosition] EqualityExpression : EqualityExpression !== RelationalExpression",
    [
    ]
  ],
  "sec-isunclampedintegerelementtype" : [
    2634,
    "IsUnclampedIntegerElementType",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    1784,
    "[HasCallInTailPosition] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-array.prototype.tospliced" : [
    2522,
    "Array.prototype.toSpliced",
    [
    ]
  ],
  "sec-enumerate-object-properties" : [
    1509,
    "EnumerateObjectProperties",
    [
    ]
  ],
  "sec-variable-statement-runtime-semantics-evaluation|VariableDeclaration|BindingIdentifier|Initializer" : [
    1440,
    "[Evaluation] VariableDeclaration : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    686,
    "[ContainsUndefinedContinueTarget] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-ecmascript-function-objects-call-thisargument-argumentslist" : [
    1111,
    "[[Call]]",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|ContinueStatement" : [
    514,
    "[ContainsDuplicateLabels] Statement : ContinueStatement",
    [
    ]
  ],
  "sec-atomics.or" : [
    2719,
    "Atomics.or",
    [
    ]
  ],
  "sec-newpromisereactionjob" : [
    2758,
    "NewPromiseReactionJob",
    [
      2757
    ]
  ],
  "sec-iteratorcomplete" : [
    197,
    "IteratorComplete",
    [
    ]
  ],
  "sec-array.prototype.push" : [
    2506,
    "Array.prototype.push",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    544,
    "[ContainsDuplicateLabels] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    607,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-array.prototype.at" : [
    2482,
    "Array.prototype.at",
    [
    ]
  ],
  "sec-thisbooleanvalue" : [
    2091,
    "ThisBooleanValue",
    [
    ]
  ],
  "sec-static-semantics-classelementevaluation|ClassElement|;" : [
    1734,
    "[ClassElementEvaluation] ClassElement : ;",
    [
    ]
  ],
  "sec-hostmakejobcallback" : [
    1072,
    "HostMakeJobCallback",
    [
    ]
  ],
  "sec-%typedarray%.prototype.tosorted" : [
    2568,
    "TypedArray.prototype.toSorted",
    [
      2567
    ]
  ],
  "sec-static-semantics-hascallintailposition|MultiplicativeExpression|MultiplicativeExpression|MultiplicativeOperator|ExponentiationExpression" : [
    1849,
    "[HasCallInTailPosition] MultiplicativeExpression : MultiplicativeExpression MultiplicativeOperator ExponentiationExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    447,
    "[VarScopedDeclarations] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|DefaultClause|default|:" : [
    473,
    "[VarScopedDeclarations] DefaultClause : default :",
    [
    ]
  ],
  "sec-static-semantics-nonconstructorelements|ClassElementList|ClassElementList|ClassElement" : [
    1678,
    "[NonConstructorElements] ClassElementList : ClassElementList ClassElement",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|LeftHandSideExpression|OptionalExpression" : [
    1489,
    "[IsDestructuring] LeftHandSideExpression : OptionalExpression",
    [
    ]
  ],
  "sec-object.prototype.hasownproperty" : [
    2070,
    "Object.prototype.hasOwnProperty",
    [
    ]
  ],
  "sec-runtime-semantics-keyeddestructuringassignmentevaluation|AssignmentElement|DestructuringAssignmentTarget" : [
    1419,
    "[KeyedDestructuringAssignmentEvaluation] AssignmentElement : DestructuringAssignmentTarget",
    [
    ]
  ],
  "sec-property-accessors-runtime-semantics-evaluation|MemberExpression|MemberExpression|[|Expression|]" : [
    1300,
    "[Evaluation] MemberExpression : MemberExpression [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ModuleItemList|ModuleItemList|ModuleItem" : [
    315,
    "[LexicallyDeclaredNames] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-date.prototype.getmilliseconds" : [
    2194,
    "Date.prototype.getMilliseconds",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|await|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    610,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for await ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ShiftExpression|ShiftExpression|>>|AdditiveExpression" : [
    1845,
    "[HasCallInTailPosition] ShiftExpression : ShiftExpression >> AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ClassStaticBlockStatementList|StatementList" : [
    338,
    "[LexicallyScopedDeclarations] ClassStaticBlockStatementList : StatementList",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassContents|NonemptyClassRanges" : [
    2317,
    "[MayContainStrings] ClassContents : NonemptyClassRanges",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    451,
    "[VarScopedDeclarations] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-numericvalue|NumericLiteral|DecimalLiteral" : [
    1217,
    "[NumericValue] NumericLiteral : DecimalLiteral",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|new|MemberExpression|Arguments" : [
    1873,
    "[HasCallInTailPosition] MemberExpression : new MemberExpression Arguments",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|ElementList|,|Elision|AssignmentExpression" : [
    1253,
    "[ArrayAccumulation] ElementList : ElementList , Elision AssignmentExpression",
    [
    ]
  ],
  "sec-module-environment-records-getthisbinding" : [
    1052,
    "GetThisBinding",
    [
    ]
  ],
  "sec-reflect.defineproperty" : [
    2839,
    "Reflect.defineProperty",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|Expression|;|;|)|Statement" : [
    1790,
    "[HasCallInTailPosition] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-identifiercodepoints|IdentifierName|IdentifierName|IdentifierPart" : [
    1212,
    "[IdentifierCodePoints] IdentifierName : IdentifierName IdentifierPart",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|;|Expression|;|)|Statement" : [
    1463,
    "[ForLoopEvaluation] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-math.log1p" : [
    2145,
    "Math.log1p",
    [
    ]
  ],
  "sec-string.prototype.replaceall" : [
    2261,
    "String.prototype.replaceAll",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|LeftHandSideExpression|&&=|AssignmentExpression" : [
    1827,
    "[HasCallInTailPosition] AssignmentExpression : LeftHandSideExpression &&= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-importentries|ModuleItem|StatementListItem" : [
    1958,
    "[ImportEntries] ModuleItem : StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    591,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-isextensible-o" : [
    149,
    "IsExtensible",
    [
    ]
  ],
  "sec-array-initializer-runtime-semantics-evaluation|ArrayLiteral|[|ElementList|,|Elision|]" : [
    1261,
    "[Evaluation] ArrayLiteral : [ ElementList , Elision ]",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|ClassElement|ClassStaticBlock" : [
    1692,
    "[PrivateBoundIdentifiers] ClassElement : ClassStaticBlock",
    [
    ]
  ],
  "sec-atomics.xor" : [
    2725,
    "Atomics.xor",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ContinueStatement|continue|LabelIdentifier|;" : [
    680,
    "[ContainsUndefinedContinueTarget] ContinueStatement : continue LabelIdentifier ;",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|AsyncGeneratorBody|FunctionBody" : [
    1117,
    "[EvaluateBody] AsyncGeneratorBody : FunctionBody",
    [
    ]
  ],
  "sec-let-and-const-declarations-runtime-semantics-evaluation|BindingList|BindingList|,|LexicalBinding" : [
    1433,
    "[Evaluation] BindingList : BindingList , LexicalBinding",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|RegExpUnicodeEscapeSequence|u{|CodePoint|}" : [
    2299,
    "[CharacterValue] RegExpUnicodeEscapeSequence : u{ CodePoint }",
    [
    ]
  ],
  "sec-compileassertion|Assertion|(?=|Disjunction|)" : [
    2359,
    "[CompileAssertion] Assertion : (?= Disjunction )",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|NewExpression|new|NewExpression" : [
    813,
    "[IsIdentifierRef] NewExpression : new NewExpression",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseClauses|CaseClauses|CaseClause" : [
    400,
    "[VarDeclaredNames] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-numericvalue|NumericLiteral|NonDecimalIntegerLiteral|BigIntLiteralSuffix" : [
    1220,
    "[NumericValue] NumericLiteral : NonDecimalIntegerLiteral BigIntLiteralSuffix",
    [
    ]
  ],
  "sec-systemtimezoneidentifier" : [
    2178,
    "SystemTimeZoneIdentifier",
    [
    ]
  ],
  "sec-property-accessors-runtime-semantics-evaluation|CallExpression|CallExpression|.|PrivateIdentifier" : [
    1305,
    "[Evaluation] CallExpression : CallExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|AsyncArrowBindingIdentifier|BindingIdentifier" : [
    1609,
    "[ExpectedArgumentCount] AsyncArrowBindingIdentifier : BindingIdentifier",
    [
    ]
  ],
  "sec-compileatom|Atom|(?:|Disjunction|)" : [
    2377,
    "[CompileAtom] Atom : (?: Disjunction )",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ClassStaticBlockStatementList|StatementList" : [
    414,
    "[VarDeclaredNames] ClassStaticBlockStatementList : StatementList",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    1972,
    "[ExportedBindings] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-object.fromentries" : [
    2052,
    "Object.fromEntries",
    [
      2051
    ]
  ],
  "sec-generator-function-definitions-runtime-semantics-evaluation|YieldExpression|yield|AssignmentExpression" : [
    1654,
    "[Evaluation] YieldExpression : yield AssignmentExpression",
    [
    ]
  ],
  "sec-optional-chaining-evaluation|OptionalExpression|OptionalExpression|OptionalChain" : [
    1329,
    "[Evaluation] OptionalExpression : OptionalExpression OptionalChain",
    [
    ]
  ],
  "sec-static-semantics-hasname|ClassExpression|class|BindingIdentifier|ClassTail" : [
    717,
    "[HasName] ClassExpression : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Catch|catch|(|CatchParameter|)|Block" : [
    410,
    "[VarDeclaredNames] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|ContinueStatement" : [
    424,
    "[VarScopedDeclarations] Statement : ContinueStatement",
    [
    ]
  ],
  "sec-map.prototype.set" : [
    2597,
    "Map.prototype.set",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|-|UnaryExpression" : [
    952,
    "[AssignmentTargetType] UnaryExpression : - UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseClause|case|Expression|:|StatementList" : [
    329,
    "[LexicallyScopedDeclarations] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-compiletocharset|ClassAtom|-" : [
    2392,
    "[CompileToCharSet] ClassAtom : -",
    [
    ]
  ],
  "sec-makedataviewwithbufferwitnessrecord" : [
    2663,
    "MakeDataViewWithBufferWitnessRecord",
    [
    ]
  ],
  "sec-arrayspeciescreate" : [
    1143,
    "ArraySpeciesCreate",
    [
    ]
  ],
  "sec-math.cos" : [
    2136,
    "Math.cos",
    [
    ]
  ],
  "sec-function-environment-records-hassuperbinding" : [
    1029,
    "HasSuperBinding",
    [
    ]
  ],
  "sec-serializejsonobject" : [
    2732,
    "SerializeJSONObject",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-getownproperty-p" : [
    1181,
    "[[GetOwnProperty]]",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|StatementList|StatementList|StatementListItem" : [
    291,
    "[LexicallyDeclaredNames] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-runtime-semantics-whileloopevaluation|WhileStatement|while|(|Expression|)|Statement" : [
    1460,
    "[WhileLoopEvaluation] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-arraysetlength" : [
    1144,
    "ArraySetLength",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|TryStatement|try|Block|Catch" : [
    629,
    "[ContainsUndefinedBreakTarget] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|default|HoistableDeclaration" : [
    2008,
    "[ExportEntries] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-newmoduleenvironment" : [
    1059,
    "NewModuleEnvironment",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|BindingElement|BindingPattern" : [
    901,
    "[IteratorBindingInitialization] BindingElement : BindingPattern",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|BitwiseORExpression|BitwiseORExpression|||BitwiseXORExpression" : [
    976,
    "[AssignmentTargetType] BitwiseORExpression : BitwiseORExpression | BitwiseXORExpression",
    [
    ]
  ],
  "sec-add-entries-from-iterable" : [
    2587,
    "AddEntriesFromIterable",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|FunctionExpression" : [
    798,
    "[IsIdentifierRef] PrimaryExpression : FunctionExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UpdateExpression|--|UnaryExpression" : [
    739,
    "[IsFunctionDefinition] UpdateExpression : -- UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|DefaultClause|default|:" : [
    1816,
    "[HasCallInTailPosition] DefaultClause : default :",
    [
    ]
  ],
  "sec-global-environment-records-getthisbinding" : [
    1042,
    "GetThisBinding",
    [
    ]
  ],
  "sec-dataview.prototype.setbiguint64" : [
    2683,
    "DataView.prototype.setBigUint64",
    [
    ]
  ],
  "sec-compilepattern|Pattern|Disjunction" : [
    2344,
    "[CompilePattern] Pattern : Disjunction",
    [
    ]
  ],
  "sec-numeric-types-bigint-bitwiseAND" : [
    85,
    "BigInt::bitwiseAND",
    [
    ]
  ],
  "sec-date.prototype.getutchours" : [
    2203,
    "Date.prototype.getUTCHours",
    [
    ]
  ],
  "sec-asynciteratorclose" : [
    202,
    "AsyncIteratorClose",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|await|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    392,
    "[VarDeclaredNames] ForInOfStatement : for await ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|EqualityExpression|EqualityExpression|===|RelationalExpression" : [
    1835,
    "[HasCallInTailPosition] EqualityExpression : EqualityExpression === RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|EmptyStatement" : [
    575,
    "[ContainsUndefinedBreakTarget] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-makematchindicesindexpairarray" : [
    2473,
    "MakeMatchIndicesIndexPairArray",
    [
    ]
  ],
  "sec-date.prototype.setutcmilliseconds" : [
    2219,
    "Date.prototype.setUTCMilliseconds",
    [
    ]
  ],
  "sec-promise.allsettled-reject-element-functions" : [
    2769,
    "yet:`Promise.allSettled`RejectElementFunction",
    [
    ]
  ],
  "sec-%typedarray%.prototype.findlastindex" : [
    2546,
    "TypedArray.prototype.findLastIndex",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    871,
    "[InstantiateFunctionObject] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-date.prototype.todatestring" : [
    2223,
    "Date.prototype.toDateString",
    [
    ]
  ],
  "sec-get-regexp.prototype.multiline" : [
    2456,
    "get RegExp.prototype.multiline",
    [
    ]
  ],
  "sec-labelled-statements-runtime-semantics-evaluation|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    1532,
    "[Evaluation] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-typedarraygetelement" : [
    1174,
    "TypedArrayGetElement",
    [
    ]
  ],
  "sec-templatestring" : [
    1286,
    "TemplateString",
    [
    ]
  ],
  "sec-equality-operators-runtime-semantics-evaluation|EqualityExpression|EqualityExpression|==|RelationalExpression" : [
    1373,
    "[Evaluation] EqualityExpression : EqualityExpression == RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    445,
    "[VarScopedDeclarations] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|TryStatement|try|Block|Finally" : [
    566,
    "[ContainsDuplicateLabels] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|DecimalDigits|.|ExponentPart" : [
    123,
    "[StringNumericValue] StrUnsignedDecimalLiteral : DecimalDigits . ExponentPart",
    [
    ]
  ],
  "sec-%typedarray%.prototype.reverse" : [
    2557,
    "TypedArray.prototype.reverse",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    662,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-makeday" : [
    2182,
    "MakeDay",
    [
    ]
  ],
  "sec-array.prototype.unshift" : [
    2524,
    "Array.prototype.unshift",
    [
    ]
  ],
  "sec-date.prototype.setutcminutes" : [
    2220,
    "Date.prototype.setUTCMinutes",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|GeneratorMethod|*|ClassElementName|(|UniqueFormalParameters|)|{|GeneratorBody|}" : [
    1698,
    "[PrivateBoundIdentifiers] GeneratorMethod : * ClassElementName ( UniqueFormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-sharedarraybuffer.prototype.slice" : [
    2662,
    "SharedArrayBuffer.prototype.slice",
    [
    ]
  ],
  "sec-ordinarycallevaluatebody" : [
    1122,
    "OrdinaryCallEvaluateBody",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|default|ClassDeclaration" : [
    2009,
    "[ExportEntries] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-bytelistequal" : [
    2712,
    "ByteListEqual",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|OptionalChain|.|IdentifierName" : [
    1903,
    "[HasCallInTailPosition] OptionalChain : OptionalChain . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|BitwiseXORExpression|BitwiseXORExpression|^|BitwiseANDExpression" : [
    975,
    "[AssignmentTargetType] BitwiseXORExpression : BitwiseXORExpression ^ BitwiseANDExpression",
    [
    ]
  ],
  "sec-object.assign" : [
    2044,
    "Object.assign",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    603,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-parsepattern" : [
    2444,
    "ParsePattern",
    [
    ]
  ],
  "sec-static-semantics-boundnames|AsyncFunctionDeclaration|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    251,
    "[BoundNames] AsyncFunctionDeclaration : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    555,
    "[ContainsDuplicateLabels] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|void|UnaryExpression" : [
    741,
    "[IsFunctionDefinition] UnaryExpression : void UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|TryStatement|try|Block|Catch|Finally" : [
    479,
    "[VarScopedDeclarations] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-static-semantics-boundnames|VariableDeclaration|BindingIdentifier|Initializer" : [
    217,
    "[BoundNames] VariableDeclaration : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|EqualityExpression|EqualityExpression|==|RelationalExpression" : [
    762,
    "[IsFunctionDefinition] EqualityExpression : EqualityExpression == RelationalExpression",
    [
    ]
  ],
  "sec-typedarrayelementsize" : [
    2576,
    "TypedArrayElementSize",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|Expression|;|;|)|Statement" : [
    530,
    "[ContainsDuplicateLabels] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-declarative-environment-records-initializebinding-n-v" : [
    1011,
    "InitializeBinding",
    [
    ]
  ],
  "sec-enumerableownproperties" : [
    182,
    "EnumerableOwnProperties",
    [
    ]
  ],
  "sec-numeric-types-bigint-signedRightShift" : [
    77,
    "BigInt::signedRightShift",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|BreakableStatement|IterationStatement" : [
    648,
    "[ContainsUndefinedContinueTarget] BreakableStatement : IterationStatement",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportSpecifier|ModuleExportName" : [
    1981,
    "[ExportedBindings] ExportSpecifier : ModuleExportName",
    [
    ]
  ],
  "sec-%typedarray%.prototype.keys" : [
    2551,
    "TypedArray.prototype.keys",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|FormalParameterList|FormalParameterList|,|FormalParameter" : [
    1605,
    "[ExpectedArgumentCount] FormalParameterList : FormalParameterList , FormalParameter",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|AssignmentExpression" : [
    1248,
    "[ArrayAccumulation] ElementList : AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-asyncconcisebodycontainsusestrict|AsyncConciseBody|ExpressionBody" : [
    1758,
    "[AsyncConciseBodyContainsUseStrict] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-static-semantics-hasname|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    706,
    "[HasName] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-boundnames|NamedImports|{|}" : [
    258,
    "[BoundNames] NamedImports : { }",
    [
    ]
  ],
  "sec-math.acosh" : [
    2127,
    "Math.acosh",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingIdentifier|await" : [
    209,
    "[BoundNames] BindingIdentifier : await",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    861,
    "[ComputedPropertyContains] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-literals-runtime-semantics-evaluation|Literal|StringLiteral" : [
    1245,
    "[Evaluation] Literal : StringLiteral",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-set-p-v-receiver" : [
    1185,
    "[[Set]]",
    [
    ]
  ],
  "sec-array.prototype.shift" : [
    2510,
    "Array.prototype.shift",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|ShiftExpression|ShiftExpression|<<|AdditiveExpression" : [
    960,
    "[AssignmentTargetType] ShiftExpression : ShiftExpression << AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|Declaration" : [
    349,
    "[LexicallyScopedDeclarations] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-createimportbinding" : [
    1053,
    "CreateImportBinding",
    [
    ]
  ],
  "sec-stringpaddingbuiltinsimpl" : [
    2255,
    "StringPaddingBuiltinsImpl",
    [
    ]
  ],
  "sec-string.prototype.charat" : [
    2240,
    "String.prototype.charAt",
    [
    ]
  ],
  "sec-object.getownpropertydescriptors" : [
    2054,
    "Object.getOwnPropertyDescriptors",
    [
    ]
  ],
  "sec-map.prototype.foreach" : [
    2593,
    "Map.prototype.forEach",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    1496,
    "[ForInOfLoopEvaluation] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-typedarray-delete" : [
    1166,
    "[[Delete]]",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|AsyncArrowFunction" : [
    983,
    "[AssignmentTargetType] AssignmentExpression : AsyncArrowFunction",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ModuleItemList|ModuleItemList|ModuleItem" : [
    635,
    "[ContainsUndefinedBreakTarget] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-promise.allsettled" : [
    2766,
    "Promise.allSettled",
    [
    ]
  ],
  "sec-asyncgenerator-prototype-throw" : [
    2808,
    "AsyncGeneratorFunction.prototype.prototype.throw",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ClassDeclaration|class|BindingIdentifier|ClassTail" : [
    249,
    "[BoundNames] ClassDeclaration : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-get-arraybuffer.prototype.bytelength" : [
    2646,
    "get ArrayBuffer.prototype.byteLength",
    [
    ]
  ],
  "sec-asyncgeneratorunwrapyieldresumption" : [
    2817,
    "AsyncGeneratorUnwrapYieldResumption",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ModuleItemList|ModuleItemList|ModuleItem" : [
    490,
    "[VarScopedDeclarations] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-isdatadescriptor" : [
    101,
    "IsDataDescriptor",
    [
    ]
  ],
  "sec-math.log10" : [
    2146,
    "Math.log10",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|FieldDefinition|ClassElementName" : [
    1688,
    "[PrivateBoundIdentifiers] FieldDefinition : ClassElementName",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    657,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-bodytext|RegularExpressionLiteral|/|RegularExpressionBody|/|RegularExpressionFlags" : [
    1225,
    "[BodyText] RegularExpressionLiteral : / RegularExpressionBody / RegularExpressionFlags",
    [
    ]
  ],
  "sec-static-semantics-boundnames|SingleNameBinding|BindingIdentifier|Initializer" : [
    235,
    "[BoundNames] SingleNameBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|ThrowStatement" : [
    1773,
    "[HasCallInTailPosition] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-allocatesharedarraybuffer" : [
    2654,
    "AllocateSharedArrayBuffer",
    [
    ]
  ],
  "sec-getmatchstring" : [
    2471,
    "GetMatchString",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Expression|AssignmentExpression" : [
    1887,
    "[HasCallInTailPosition] Expression : AssignmentExpression",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|TemplateLiteral|NoSubstitutionTemplate" : [
    1324,
    "[ArgumentListEvaluation] TemplateLiteral : NoSubstitutionTemplate",
    [
    ]
  ],
  "sec-object-environment-records-createmutablebinding-n-d" : [
    1019,
    "CreateMutableBinding",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|AsyncArrowFunction" : [
    1824,
    "[HasCallInTailPosition] AssignmentExpression : AsyncArrowFunction",
    [
    ]
  ],
  "sec-getwaiterlist" : [
    2696,
    "GetWaiterList",
    [
    ]
  ],
  "sec-logical-not-operator-runtime-semantics-evaluation|UnaryExpression|!|UnaryExpression" : [
    1357,
    "[Evaluation] UnaryExpression : ! UnaryExpression",
    [
    ]
  ],
  "sec-enqueueresolveinagentjob" : [
    2705,
    "EnqueueResolveInAgentJob",
    [
      2704
    ]
  ],
  "sec-touint8clamp" : [
    138,
    "ToUint8Clamp",
    [
    ]
  ],
  "sec-isnan-number" : [
    2033,
    "isNaN",
    [
    ]
  ],
  "sec-regexpexec" : [
    2467,
    "RegExpExec",
    [
    ]
  ],
  "sec-compiletocharset|ClassStringDisjunctionContents|ClassString" : [
    2423,
    "[CompileToCharSet] ClassStringDisjunctionContents : ClassString",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrowParameters|BindingIdentifier" : [
    1580,
    "[ContainsExpression] ArrowParameters : BindingIdentifier",
    [
    ]
  ],
  "sec-global-environment-records-createmutablebinding-n-d" : [
    1033,
    "CreateMutableBinding",
    [
    ]
  ],
  "sec-math.acos" : [
    2126,
    "Math.acos",
    [
    ]
  ],
  "sec-%typedarray%.prototype.map" : [
    2554,
    "TypedArray.prototype.map",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|FormalParameterList|FormalParameterList|,|FormalParameter" : [
    907,
    "[IteratorBindingInitialization] FormalParameterList : FormalParameterList , FormalParameter",
    [
    ]
  ],
  "sec-date.prototype.setutcmonth" : [
    2221,
    "Date.prototype.setUTCMonth",
    [
    ]
  ],
  "sec-setfunctionlength" : [
    1132,
    "SetFunctionLength",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|;|Expression|;|)|Statement" : [
    656,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-atomics.store" : [
    2720,
    "Atomics.store",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|LeftHandSideExpression|??=|AssignmentExpression" : [
    1829,
    "[HasCallInTailPosition] AssignmentExpression : LeftHandSideExpression ??= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|Expression|;|;|)|Statement" : [
    658,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|ElementList|,|Elision|SpreadElement" : [
    1255,
    "[ArrayAccumulation] ElementList : ElementList , Elision SpreadElement",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingElement|BindingPattern|Initializer" : [
    237,
    "[BoundNames] BindingElement : BindingPattern Initializer",
    [
    ]
  ],
  "sec-getviewbytelength" : [
    2664,
    "GetViewByteLength",
    [
    ]
  ],
  "sec-weakset.prototype.has" : [
    2624,
    "WeakSet.prototype.has",
    [
    ]
  ],
  "sec-runtime-semantics-classdefinitionevaluation" : [
    1735,
    "ClassTail[0,0].ClassDefinitionEvaluation:clo0",
    [
      1737,
      1739,
      1741
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|BindingElement|BindingPattern|Initializer" : [
    1584,
    "[IsSimpleParameterList] BindingElement : BindingPattern Initializer",
    [
    ]
  ],
  "sec-promise.race" : [
    2773,
    "Promise.race",
    [
    ]
  ],
  "sec-static-semantics-declarationpart|HoistableDeclaration|AsyncFunctionDeclaration" : [
    270,
    "[DeclarationPart] HoistableDeclaration : AsyncFunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|CallExpression|Arguments" : [
    1894,
    "[HasCallInTailPosition] CallExpression : CallExpression Arguments",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    599,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-%typedarray%.prototype.copywithin" : [
    2538,
    "TypedArray.prototype.copyWithin",
    [
    ]
  ],
  "sec-runtime-semantics-repeatmatcher-abstract-operation" : [
    2351,
    "RepeatMatcher",
    [
    ]
  ],
  "sec-thisstringvalue" : [
    2275,
    "ThisStringValue",
    [
    ]
  ],
  "sec-newpromisecapability" : [
    2753,
    "NewPromiseCapability",
    [
      2752
    ]
  ],
  "sec-global-environment-records-deletebinding-n" : [
    1038,
    "DeleteBinding",
    [
    ]
  ],
  "sec-proxy.revocable" : [
    2852,
    "Proxy.revocable",
    [
      2851
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|DecimalDigits|.|DecimalDigits" : [
    124,
    "[StringNumericValue] StrUnsignedDecimalLiteral : DecimalDigits . DecimalDigits",
    [
    ]
  ],
  "sec-evaluatecall" : [
    1313,
    "EvaluateCall",
    [
    ]
  ],
  "sec-comparetypedarrayelements" : [
    2578,
    "CompareTypedArrayElements",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|CoverCallExpressionAndAsyncArrowHead" : [
    1893,
    "[HasCallInTailPosition] CallExpression : CoverCallExpressionAndAsyncArrowHead",
    [
    ]
  ],
  "sec-groupby" : [
    193,
    "GroupBy",
    [
    ]
  ],
  "sec-serializejsonarray" : [
    2733,
    "SerializeJSONArray",
    [
    ]
  ],
  "sec-static-semantics-toplevelvarscopeddeclarations|StatementListItem|Statement" : [
    506,
    "[TopLevelVarScopedDeclarations] StatementListItem : Statement",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v" : [
    1192,
    "[[SetPrototypeOf]]",
    [
    ]
  ],
  "sec-static-semantics-isstatic|ClassElement|;" : [
    1676,
    "[IsStatic] ClassElement : ;",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|ClassBody|ClassElementList" : [
    1686,
    "[AllPrivateIdentifiersValid] ClassBody : ClassElementList",
    [
    ]
  ],
  "sec-object.hasown" : [
    2060,
    "Object.hasOwn",
    [
    ]
  ],
  "sec-static-semantics-specialmethod|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    1633,
    "[SpecialMethod] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|await|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    549,
    "[ContainsDuplicateLabels] ForInOfStatement : for await ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-lengthofarraylike" : [
    177,
    "LengthOfArrayLike",
    [
    ]
  ],
  "sec-LoadRequestedModules" : [
    1930,
    "LoadRequestedModules",
    [
    ]
  ],
  "sec-get-object.prototype.__proto__" : [
    2076,
    "get Object.prototype.__proto__",
    [
    ]
  ],
  "sec-createdynamicfunction" : [
    2083,
    "CreateDynamicFunction",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ObjectBindingPattern|{|}" : [
    1556,
    "[ContainsExpression] ObjectBindingPattern : { }",
    [
    ]
  ],
  "sec-async-arrow-function-definitions-runtime-semantics-evaluation|AsyncArrowFunction|async|AsyncArrowBindingIdentifier|=>|AsyncConciseBody" : [
    1763,
    "[Evaluation] AsyncArrowFunction : async AsyncArrowBindingIdentifier => AsyncConciseBody",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateordinaryfunctionobject|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    1613,
    "[InstantiateOrdinaryFunctionObject] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-atomics.wait" : [
    2722,
    "Atomics.wait",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|Elision|Elision|," : [
    1247,
    "[ArrayAccumulation] Elision : Elision ,",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|NewTarget|new|.|target" : [
    941,
    "[AssignmentTargetType] NewTarget : new . target",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncGeneratorExpression|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1714,
    "[ContainsArguments] AsyncGeneratorExpression : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-isnotearconfiguration" : [
    2636,
    "IsNoTearConfiguration",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MemberExpression|MemberExpression|.|IdentifierName" : [
    918,
    "[AssignmentTargetType] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|DefaultClause|default|:|StatementList" : [
    404,
    "[VarDeclaredNames] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|NamedExports|;" : [
    262,
    "[BoundNames] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-postfix-increment-operator-runtime-semantics-evaluation|UpdateExpression|LeftHandSideExpression|++" : [
    1347,
    "[Evaluation] UpdateExpression : LeftHandSideExpression ++",
    [
    ]
  ],
  "sec-static-semantics-hasname|AsyncFunctionExpression|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    716,
    "[HasName] AsyncFunctionExpression : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|ClassStaticBlockBody|ClassStaticBlockStatementList" : [
    1121,
    "[EvaluateBody] ClassStaticBlockBody : ClassStaticBlockStatementList",
    [
    ]
  ],
  "sec-promise.resolve" : [
    2776,
    "Promise.resolve",
    [
    ]
  ],
  "sec-static-semantics-templatestrings|TemplateSpans|TemplateTail" : [
    1282,
    "[TemplateStrings] TemplateSpans : TemplateTail",
    [
    ]
  ],
  "sec-declarative-environment-records-withbaseobject" : [
    1017,
    "WithBaseObject",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportSpecifier|ModuleExportName|as|ModuleExportName" : [
    1999,
    "[ExportedNames] ExportSpecifier : ModuleExportName as ModuleExportName",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ModuleItem|StatementListItem" : [
    1986,
    "[ExportedNames] ModuleItem : StatementListItem",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|FormalParameters" : [
    905,
    "[IteratorBindingInitialization] FormalParameters :",
    [
    ]
  ],
  "sec-typedarray-defineownproperty" : [
    1163,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|AsyncConciseBody|ExpressionBody" : [
    486,
    "[VarScopedDeclarations] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-initializehostdefinedrealm" : [
    1074,
    "InitializeHostDefinedRealm",
    [
    ]
  ],
  "sec-try-statement-runtime-semantics-evaluation|TryStatement|try|Block|Catch" : [
    1552,
    "[Evaluation] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-template-literals-runtime-semantics-evaluation|TemplateSpans|TemplateTail" : [
    1294,
    "[Evaluation] TemplateSpans : TemplateTail",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassEscape|-" : [
    2292,
    "[CharacterValue] ClassEscape : -",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|AsyncArrowBindingIdentifier|BindingIdentifier" : [
    1582,
    "[ContainsExpression] AsyncArrowBindingIdentifier : BindingIdentifier",
    [
    ]
  ],
  "sec-typedarraycreatefromconstructor" : [
    2573,
    "TypedArrayCreateFromConstructor",
    [
    ]
  ],
  "sec-regexp.prototype.test" : [
    2463,
    "RegExp.prototype.test",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentElementList|AssignmentElisionElement" : [
    1410,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentElementList : AssignmentElisionElement",
    [
    ]
  ],
  "sec-variable-statement-runtime-semantics-evaluation|VariableStatement|var|VariableDeclarationList|;" : [
    1437,
    "[Evaluation] VariableStatement : var VariableDeclarationList ;",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|StatementList|StatementList|StatementListItem" : [
    649,
    "[ContainsUndefinedContinueTarget] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-try-statement-runtime-semantics-evaluation|TryStatement|try|Block|Finally" : [
    1553,
    "[Evaluation] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|SuperCall" : [
    934,
    "[AssignmentTargetType] CallExpression : SuperCall",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|FormalParameter|BindingElement" : [
    1591,
    "[IsSimpleParameterList] FormalParameter : BindingElement",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    298,
    "[LexicallyDeclaredNames] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-setdefaultglobalbindings" : [
    1065,
    "SetDefaultGlobalBindings",
    [
    ]
  ],
  "sec-generatorresume" : [
    2798,
    "GeneratorResume",
    [
      2797
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    718,
    "[IsFunctionDefinition] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-asyncgeneratorvalidate" : [
    2812,
    "AsyncGeneratorValidate",
    [
    ]
  ],
  "sec-typedarrayelementtype" : [
    2577,
    "TypedArrayElementType",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ModuleItemList|ModuleItem" : [
    1918,
    "[ModuleRequests] ModuleItemList : ModuleItem",
    [
    ]
  ],
  "sec-binary-logical-operators-runtime-semantics-evaluation|LogicalANDExpression|LogicalANDExpression|&&|BitwiseORExpression" : [
    1380,
    "[Evaluation] LogicalANDExpression : LogicalANDExpression && BitwiseORExpression",
    [
    ]
  ],
  "sec-array.prototype.values" : [
    2525,
    "Array.prototype.values",
    [
    ]
  ],
  "sec-dataview.prototype.setfloat32" : [
    2684,
    "DataView.prototype.setFloat32",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|Expression|;|;|)|Statement" : [
    442,
    "[VarScopedDeclarations] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-propertydestructuringassignmentevaluation|AssignmentPropertyList|AssignmentPropertyList|,|AssignmentProperty" : [
    1405,
    "[PropertyDestructuringAssignmentEvaluation] AssignmentPropertyList : AssignmentPropertyList , AssignmentProperty",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncFunctionDeclaration|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    840,
    "[Contains] AsyncFunctionDeclaration : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-timestring" : [
    2227,
    "TimeString",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|LeftHandSideExpression|AssignmentOperator|AssignmentExpression" : [
    775,
    "[IsFunctionDefinition] AssignmentExpression : LeftHandSideExpression AssignmentOperator AssignmentExpression",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|default|HoistableDeclaration" : [
    2026,
    "[Evaluation] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    1719,
    "[ContainsArguments] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-constructormethod|ClassElementList|ClassElementList|ClassElement" : [
    1670,
    "[ConstructorMethod] ClassElementList : ClassElementList ClassElement",
    [
    ]
  ],
  "sec-symbol.prototype-@@toprimitive" : [
    2100,
    "Symbol.prototype[@@toPrimitive]",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|ShiftExpression|ShiftExpression|>>|AdditiveExpression" : [
    961,
    "[AssignmentTargetType] ShiftExpression : ShiftExpression >> AdditiveExpression",
    [
    ]
  ],
  "sec-string.prototype.replace" : [
    2259,
    "String.prototype.replace",
    [
    ]
  ],
  "sec-declarative-environment-records-deletebinding-n" : [
    1014,
    "DeleteBinding",
    [
    ]
  ],
  "sec-codepointstostring" : [
    1207,
    "CodePointsToString",
    [
    ]
  ],
  "sec-runtime-semantics-propertydefinitionevaluation|PropertyDefinition|...|AssignmentExpression" : [
    1274,
    "[PropertyDefinitionEvaluation] PropertyDefinition : ... AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|FunctionStatementList" : [
    1766,
    "[HasCallInTailPosition] FunctionStatementList :",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|TemplateLiteral" : [
    932,
    "[AssignmentTargetType] PrimaryExpression : TemplateLiteral",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|Declaration" : [
    1975,
    "[ExportedBindings] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingList|BindingList|,|LexicalBinding" : [
    211,
    "[BoundNames] BindingList : BindingList , LexicalBinding",
    [
    ]
  ],
  "sec-compiletocharset|NonemptyClassRanges|ClassAtom|NonemptyClassRangesNoDash" : [
    2388,
    "[CompileToCharSet] NonemptyClassRanges : ClassAtom NonemptyClassRangesNoDash",
    [
    ]
  ],
  "sec-newpromiseresolvethenablejob" : [
    2760,
    "NewPromiseResolveThenableJob",
    [
      2759
    ]
  ],
  "sec-switch-statement-runtime-semantics-evaluation|DefaultClause|default|:|StatementList" : [
    1530,
    "[Evaluation] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-promise.prototype.catch" : [
    2780,
    "Promise.prototype.catch",
    [
    ]
  ],
  "sec-function.prototype.call" : [
    2086,
    "Function.prototype.call",
    [
    ]
  ],
  "sec-assignment-operators-runtime-semantics-evaluation|AssignmentExpression|LeftHandSideExpression|??=|AssignmentExpression" : [
    1388,
    "[Evaluation] AssignmentExpression : LeftHandSideExpression ??= AssignmentExpression",
    [
    ]
  ],
  "sec-promise.prototype.finally" : [
    2785,
    "Promise.prototype.finally",
    [
      2782,
      2783,
      2784,
      2781
    ]
  ],
  "sec-atomics.notify" : [
    2724,
    "Atomics.notify",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassString|NonEmptyClassString" : [
    2330,
    "[MayContainStrings] ClassString : NonEmptyClassString",
    [
    ]
  ],
  "sec-regexpcreate" : [
    2441,
    "RegExpCreate",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|LabelledItem|FunctionDeclaration" : [
    564,
    "[ContainsDuplicateLabels] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-compileassertion|Assertion|(?<!|Disjunction|)" : [
    2362,
    "[CompileAssertion] Assertion : (?<! Disjunction )",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ModuleItem|ExportDeclaration" : [
    637,
    "[ContainsUndefinedBreakTarget] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|;|;|Expression|)|Statement" : [
    589,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|WithStatement" : [
    1545,
    "[LabelledEvaluation] Statement : WithStatement",
    [
    ]
  ],
  "sec-typedarray-create-same-type" : [
    2574,
    "TypedArrayCreateSameType",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    538,
    "[ContainsDuplicateLabels] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    1794,
    "[HasCallInTailPosition] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-getsuperbase" : [
    1031,
    "GetSuperBase",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrowParameters|CoverParenthesizedExpressionAndArrowParameterList" : [
    909,
    "[IteratorBindingInitialization] ArrowParameters : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|default|AssignmentExpression|;" : [
    1929,
    "[ModuleRequests] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|Elision|]" : [
    891,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ Elision ]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    675,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    782,
    "[IsFunctionDefinition] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassAtom|-" : [
    2289,
    "[CharacterValue] ClassAtom : -",
    [
    ]
  ],
  "sec-getprototypefromconstructor" : [
    1109,
    "GetPrototypeFromConstructor",
    [
    ]
  ],
  "sec-proxycreate" : [
    1205,
    "ProxyCreate",
    [
    ]
  ],
  "sec-finalization-registry-cleanup-callback" : [
    2737,
    "FinalizationRegistry",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ForDeclaration|LetOrConst|ForBinding" : [
    238,
    "[BoundNames] ForDeclaration : LetOrConst ForBinding",
    [
    ]
  ],
  "sec-date.prototype-@@toprimitive" : [
    2234,
    "Date.prototype[@@toPrimitive]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ModuleItem|ExportDeclaration" : [
    703,
    "[ContainsUndefinedContinueTarget] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    1802,
    "[HasCallInTailPosition] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    586,
    "[ContainsUndefinedBreakTarget] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-map.prototype.get" : [
    2594,
    "Map.prototype.get",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|ArrowParameters|CoverParenthesizedExpressionAndArrowParameterList" : [
    1607,
    "[ExpectedArgumentCount] ArrowParameters : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|BindingIdentifier|await" : [
    1233,
    "[StringValue] BindingIdentifier : await",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|UnicodePropertyValueExpression|UnicodePropertyName|=|UnicodePropertyValue" : [
    2314,
    "[MayContainStrings] UnicodePropertyValueExpression : UnicodePropertyName = UnicodePropertyValue",
    [
    ]
  ],
  "sec-optional-chaining-evaluation|OptionalExpression|MemberExpression|OptionalChain" : [
    1327,
    "[Evaluation] OptionalExpression : MemberExpression OptionalChain",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseClause|case|Expression|:|StatementList" : [
    560,
    "[ContainsDuplicateLabels] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|BindingElementList|,|]" : [
    225,
    "[BoundNames] ArrayBindingPattern : [ BindingElementList , ]",
    [
    ]
  ],
  "sec-%typedarray%.prototype.every" : [
    2540,
    "TypedArray.prototype.every",
    [
    ]
  ],
  "sec-numeric-types-number-lessThan" : [
    62,
    "Number::lessThan",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|EqualityExpression|EqualityExpression|===|RelationalExpression" : [
    972,
    "[AssignmentTargetType] EqualityExpression : EqualityExpression === RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    461,
    "[VarScopedDeclarations] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|ParenthesizedExpression|(|Expression|)" : [
    817,
    "[NamedEvaluation] ParenthesizedExpression : ( Expression )",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|default|AssignmentExpression|;" : [
    267,
    "[BoundNames] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-static-semantics-boundnames|AsyncFunctionDeclaration|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    252,
    "[BoundNames] AsyncFunctionDeclaration : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-date.prototype.gettime" : [
    2198,
    "Date.prototype.getTime",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|ForDeclaration|LetOrConst|ForBinding" : [
    1490,
    "[IsDestructuring] ForDeclaration : LetOrConst ForBinding",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    371,
    "[VarDeclaredNames] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-numeric-types-number-unsignedRightShift" : [
    61,
    "Number::unsignedRightShift",
    [
    ]
  ],
  "sec-symbol.for" : [
    2093,
    "Symbol.for",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|AsyncConciseBody|ExpressionBody" : [
    312,
    "[LexicallyDeclaredNames] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|NewExpression|new|NewExpression" : [
    1487,
    "[IsDestructuring] NewExpression : new NewExpression",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|LiteralPropertyName|IdentifierName" : [
    1269,
    "[Evaluation] LiteralPropertyName : IdentifierName",
    [
    ]
  ],
  "sec-definemethodproperty" : [
    1130,
    "DefineMethodProperty",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|BitwiseORExpression|BitwiseORExpression|||BitwiseXORExpression" : [
    768,
    "[IsFunctionDefinition] BitwiseORExpression : BitwiseORExpression | BitwiseXORExpression",
    [
    ]
  ],
  "sec-static-semantics-asyncconcisebodycontainsusestrict|AsyncConciseBody|{|AsyncFunctionBody|}" : [
    1759,
    "[AsyncConciseBodyContainsUseStrict] AsyncConciseBody : { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-%setiteratorprototype%.next" : [
    2615,
    "SetIteratorPrototype.next",
    [
    ]
  ],
  "typedarray-species-create" : [
    2572,
    "TypedArraySpeciesCreate",
    [
    ]
  ],
  "sec-hourfromtime" : [
    2170,
    "HourFromTime",
    [
    ]
  ],
  "sec-static-semantics-boundnames|SingleNameBinding|BindingIdentifier" : [
    234,
    "[BoundNames] SingleNameBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-declarationpart|HoistableDeclaration|FunctionDeclaration" : [
    268,
    "[DeclarationPart] HoistableDeclaration : FunctionDeclaration",
    [
    ]
  ],
  "sec-generator-function-definitions-runtime-semantics-evaluation|YieldExpression|yield" : [
    1653,
    "[Evaluation] YieldExpression : yield",
    [
    ]
  ],
  "sec-getrawbytesfromsharedblock" : [
    2638,
    "GetRawBytesFromSharedBlock",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    324,
    "[LexicallyScopedDeclarations] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-contains|ClassTail|{|ClassBody|}" : [
    843,
    "[Contains] ClassTail : { ClassBody }",
    [
    ]
  ],
  "sec-runtime-semantics-instantiategeneratorfunctionexpression|GeneratorExpression|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    1650,
    "[InstantiateGeneratorFunctionExpression] GeneratorExpression : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ModuleItem|ImportDeclaration" : [
    316,
    "[LexicallyDeclaredNames] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-string.prototype.valueof" : [
    2274,
    "String.prototype.valueOf",
    [
    ]
  ],
  "sec-date.prototype.getmonth" : [
    2196,
    "Date.prototype.getMonth",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalExpression|OptionalExpression|OptionalChain" : [
    1898,
    "[HasCallInTailPosition] OptionalExpression : OptionalExpression OptionalChain",
    [
    ]
  ],
  "sec-reflect.getownpropertydescriptor" : [
    2842,
    "Reflect.getOwnPropertyDescriptor",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseClauses|CaseClauses|CaseClause" : [
    1813,
    "[HasCallInTailPosition] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-date.prototype.getutcday" : [
    2201,
    "Date.prototype.getUTCDay",
    [
    ]
  ],
  "sec-getmodulenamespace" : [
    1950,
    "GetModuleNamespace",
    [
    ]
  ],
  "sec-instanceofoperator" : [
    1372,
    "InstanceofOperator",
    [
    ]
  ],
  "sec-if-statement-runtime-semantics-evaluation|IfStatement|if|(|Expression|)|Statement" : [
    1453,
    "[Evaluation] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-template-literals-runtime-semantics-evaluation|TemplateMiddleList|TemplateMiddle|Expression" : [
    1296,
    "[Evaluation] TemplateMiddleList : TemplateMiddle Expression",
    [
    ]
  ],
  "sec-void-operator-runtime-semantics-evaluation|UnaryExpression|void|UnaryExpression" : [
    1352,
    "[Evaluation] UnaryExpression : void UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|ThrowStatement" : [
    517,
    "[ContainsDuplicateLabels] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|Elision|BindingRestElement|]" : [
    893,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ Elision BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|RelationalExpression|>=|ShiftExpression" : [
    1840,
    "[HasCallInTailPosition] RelationalExpression : RelationalExpression >= ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|PrimaryExpression" : [
    1479,
    "[IsDestructuring] MemberExpression : PrimaryExpression",
    [
    ]
  ],
  "sec-static-semantics-hasdirectsuper|AsyncMethod|async|ClassElementName|(|UniqueFormalParameters|)|{|AsyncFunctionBody|}" : [
    1632,
    "[HasDirectSuper] AsyncMethod : async ClassElementName ( UniqueFormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|StatementListItem|Declaration" : [
    1767,
    "[HasCallInTailPosition] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|ArgumentList|ArgumentList|,|AssignmentExpression" : [
    1322,
    "[ArgumentListEvaluation] ArgumentList : ArgumentList , AssignmentExpression",
    [
    ]
  ],
  "sec-array.prototype.some" : [
    2512,
    "Array.prototype.some",
    [
    ]
  ],
  "sec-dataview.prototype.setint16" : [
    2687,
    "DataView.prototype.setInt16",
    [
    ]
  ],
  "sec-set.prototype.delete" : [
    2607,
    "Set.prototype.delete",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseBlock|{|DefaultClause|}" : [
    618,
    "[ContainsUndefinedBreakTarget] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseBlock|{|DefaultClause|}" : [
    1809,
    "[HasCallInTailPosition] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|AsyncFunctionBody|FunctionBody" : [
    1118,
    "[EvaluateBody] AsyncFunctionBody : FunctionBody",
    [
    ]
  ],
  "sec-block-runtime-semantics-evaluation|StatementList|StatementList|StatementListItem" : [
    1430,
    "[Evaluation] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-throw-statement-runtime-semantics-evaluation|ThrowStatement|throw|Expression|;" : [
    1549,
    "[Evaluation] ThrowStatement : throw Expression ;",
    [
    ]
  ],
  "sec-runtime-semantics-propertydestructuringassignmentevaluation|AssignmentProperty|PropertyName|:|AssignmentElement" : [
    1408,
    "[PropertyDestructuringAssignmentEvaluation] AssignmentProperty : PropertyName : AssignmentElement",
    [
    ]
  ],
  "sec-dataview.prototype.setint32" : [
    2688,
    "DataView.prototype.setInt32",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|Literal" : [
    923,
    "[AssignmentTargetType] PrimaryExpression : Literal",
    [
    ]
  ],
  "sec-stringindexof" : [
    50,
    "StringIndexOf",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    468,
    "[VarScopedDeclarations] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|CallExpression|.|IdentifierName" : [
    915,
    "[AssignmentTargetType] CallExpression : CallExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|MetaProperty" : [
    730,
    "[IsFunctionDefinition] MemberExpression : MetaProperty",
    [
    ]
  ],
  "sec-object.prototype.isprototypeof" : [
    2071,
    "Object.prototype.isPrototypeOf",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|CallExpression|TemplateLiteral" : [
    937,
    "[AssignmentTargetType] CallExpression : CallExpression TemplateLiteral",
    [
    ]
  ],
  "sec-performpromisethen" : [
    2787,
    "PerformPromiseThen",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetOperand|ClassStringDisjunction" : [
    2417,
    "[CompileToCharSet] ClassSetOperand : ClassStringDisjunction",
    [
    ]
  ],
  "sec-postfix-decrement-operator-runtime-semantics-evaluation|UpdateExpression|LeftHandSideExpression|--" : [
    1348,
    "[Evaluation] UpdateExpression : LeftHandSideExpression --",
    [
    ]
  ],
  "sec-dataview.prototype.setfloat64" : [
    2685,
    "DataView.prototype.setFloat64",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentElement|DestructuringAssignmentTarget|Initializer" : [
    1417,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentElement : DestructuringAssignmentTarget Initializer",
    [
    ]
  ],
  "sec-global-environment-records-setmutablebinding-n-v-s" : [
    1036,
    "SetMutableBinding",
    [
    ]
  ],
  "sec-ordinarygetprototypeof" : [
    1083,
    "OrdinaryGetPrototypeOf",
    [
    ]
  ],
  "sec-regexpinitialize" : [
    2443,
    "RegExpInitialize",
    [
    ]
  ],
  "sec-datestring" : [
    2228,
    "DateString",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UpdateExpression|LeftHandSideExpression|++" : [
    1851,
    "[HasCallInTailPosition] UpdateExpression : LeftHandSideExpression ++",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|]" : [
    1396,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ ]",
    [
    ]
  ],
  "sec-static-semantics-classelementevaluation|ClassElement|ClassStaticBlock" : [
    1733,
    "[ClassElementEvaluation] ClassElement : ClassStaticBlock",
    [
    ]
  ],
  "sec-function-definitions-runtime-semantics-evaluation|FunctionStatementList" : [
    1620,
    "[Evaluation] FunctionStatementList :",
    [
    ]
  ],
  "sec-notifywaiter" : [
    2703,
    "NotifyWaiter",
    [
    ]
  ],
  "sec-initializetypedarrayfromarraybuffer" : [
    2582,
    "InitializeTypedArrayFromArrayBuffer",
    [
    ]
  ],
  "sec-performeval" : [
    2030,
    "PerformEval",
    [
    ]
  ],
  "sec-groupspecifiersthatmatch" : [
    2333,
    "GroupSpecifiersThatMatch",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-setprototypeof-v" : [
    1084,
    "[[SetPrototypeOf]]",
    [
    ]
  ],
  "sec-date.prototype.getutcmonth" : [
    2206,
    "Date.prototype.getUTCMonth",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|RelationalExpression|<|ShiftExpression" : [
    1365,
    "[Evaluation] RelationalExpression : RelationalExpression < ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-contains|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    828,
    "[Contains] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-math.asin" : [
    2128,
    "Math.asin",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseBlock|{|}" : [
    395,
    "[VarDeclaredNames] CaseBlock : { }",
    [
    ]
  ],
  "sec-math.clz32" : [
    2135,
    "Math.clz32",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|Elision|]" : [
    1397,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ Elision ]",
    [
    ]
  ],
  "sec-identifiercodepoint|IdentifierPart|IdentifierPartChar" : [
    1214,
    "[IdentifierCodePoint] IdentifierPart : IdentifierPartChar",
    [
    ]
  ],
  "sec-encodeuricomponent-uricomponent" : [
    2039,
    "encodeURIComponent",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AdditiveExpression|AdditiveExpression|-|MultiplicativeExpression" : [
    751,
    "[IsFunctionDefinition] AdditiveExpression : AdditiveExpression - MultiplicativeExpression",
    [
    ]
  ],
  "sec-string.prototype-@@iterator" : [
    2277,
    "String.prototype[@@iterator]",
    [
      2276
    ]
  ],
  "sec-date.prototype.tostring" : [
    2226,
    "Date.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    536,
    "[ContainsDuplicateLabels] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-symbol.keyfor" : [
    2094,
    "Symbol.keyFor",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    597,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    390,
    "[VarDeclaredNames] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseClauses|CaseClauses|CaseClause" : [
    327,
    "[LexicallyScopedDeclarations] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-numeric-types-bigint-subtract" : [
    76,
    "BigInt::subtract",
    [
    ]
  ],
  "sec-compiletocharset|NonemptyClassRangesNoDash|ClassAtomNoDash|NonemptyClassRangesNoDash" : [
    2390,
    "[CompileToCharSet] NonemptyClassRangesNoDash : ClassAtomNoDash NonemptyClassRangesNoDash",
    [
    ]
  ],
  "sec-class-definitions-runtime-semantics-evaluation|ClassStaticBlockStatementList" : [
    1749,
    "[Evaluation] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-allocatetypedarraybuffer" : [
    2585,
    "AllocateTypedArrayBuffer",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|?.|Arguments" : [
    1905,
    "[HasCallInTailPosition] OptionalChain : ?. Arguments",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|AsyncGeneratorDeclaration|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    282,
    "[IsConstantDeclaration] AsyncGeneratorDeclaration : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-math.tanh" : [
    2157,
    "Math.tanh",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|GeneratorDeclaration|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    874,
    "[InstantiateFunctionObject] GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    693,
    "[ContainsUndefinedContinueTarget] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    1498,
    "[ForInOfLoopEvaluation] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    1472,
    "[ForLoopEvaluation] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-propname|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    997,
    "[PropName] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    659,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-hosteventset" : [
    2855,
    "HostEventSet",
    [
    ]
  ],
  "sec-object.getownpropertysymbols" : [
    2056,
    "Object.getOwnPropertySymbols",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Block|{|}" : [
    645,
    "[ContainsUndefinedContinueTarget] Block : { }",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|PropertyName|LiteralPropertyName" : [
    858,
    "[ComputedPropertyContains] PropertyName : LiteralPropertyName",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ObjectAssignmentPattern|{|AssignmentRestProperty|}" : [
    1394,
    "[DestructuringAssignmentEvaluation] ObjectAssignmentPattern : { AssignmentRestProperty }",
    [
    ]
  ],
  "sec-array.prototype.tosorted" : [
    2521,
    "Array.prototype.toSorted",
    [
      2520
    ]
  ],
  "sec-%arrayiteratorprototype%.next" : [
    2529,
    "ArrayIteratorPrototype.next",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|;|;|)|Statement" : [
    526,
    "[ContainsDuplicateLabels] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|Expression|;|;|)|Statement" : [
    592,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( Expression ; ; ) Statement",
    [
    ]
  ],
  "sec-declarative-environment-records-createimmutablebinding-n-s" : [
    1010,
    "CreateImmutableBinding",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UpdateExpression|LeftHandSideExpression|--" : [
    1852,
    "[HasCallInTailPosition] UpdateExpression : LeftHandSideExpression --",
    [
    ]
  ],
  "sec-asyncgenerator-definitions-evaluation|AsyncGeneratorExpression|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1662,
    "[Evaluation] AsyncGeneratorExpression : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ModuleItem|ImportDeclaration" : [
    2002,
    "[ExportEntries] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    1908,
    "[HasCallInTailPosition] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-numeric-types-bigint-divide" : [
    73,
    "BigInt::divide",
    [
    ]
  ],
  "sec-statement-semantics-runtime-semantics-evaluation|HoistableDeclaration|AsyncGeneratorDeclaration" : [
    1424,
    "[Evaluation] HoistableDeclaration : AsyncGeneratorDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-charactersetmatcher-abstract-operation" : [
    2382,
    "CharacterSetMatcher",
    [
    ]
  ],
  "sec-dowait" : [
    2706,
    "DoWait",
    [
    ]
  ],
  "sec-signed-right-shift-operator-runtime-semantics-evaluation|ShiftExpression|ShiftExpression|>>|AdditiveExpression" : [
    1363,
    "[Evaluation] ShiftExpression : ShiftExpression >> AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncGeneratorMethod|async|*|ClassElementName|(|UniqueFormalParameters|)|{|AsyncGeneratorBody|}" : [
    1723,
    "[ContainsArguments] AsyncGeneratorMethod : async * ClassElementName ( UniqueFormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    627,
    "[ContainsUndefinedBreakTarget] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseBlock|{|DefaultClause|}" : [
    554,
    "[ContainsDuplicateLabels] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-map.groupby" : [
    2588,
    "Map.groupBy",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|NewExpression|new|NewExpression" : [
    1868,
    "[HasCallInTailPosition] NewExpression : new NewExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|DefaultClause|default|:|StatementList" : [
    626,
    "[ContainsUndefinedBreakTarget] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    533,
    "[ContainsDuplicateLabels] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-patterns-static-semantics-capturing-group-number|DecimalEscape|NonZeroDigit|DecimalDigits" : [
    2282,
    "[CapturingGroupNumber] DecimalEscape : NonZeroDigit DecimalDigits",
    [
    ]
  ],
  "sec-isarray" : [
    146,
    "IsArray",
    [
    ]
  ],
  "sec-static-semantics-importentries|ModuleItemList|ModuleItemList|ModuleItem" : [
    1956,
    "[ImportEntries] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|Module" : [
    343,
    "[LexicallyScopedDeclarations] Module :",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|AssignmentElementList|,|Elision|]" : [
    1403,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ AssignmentElementList , Elision ]",
    [
    ]
  ],
  "sec-reflect.preventextensions" : [
    2847,
    "Reflect.preventExtensions",
    [
    ]
  ],
  "sec-identifiers-runtime-semantics-evaluation|IdentifierReference|yield" : [
    1239,
    "[Evaluation] IdentifierReference : yield",
    [
    ]
  ],
  "sec-date.prototype.getutcdate" : [
    2200,
    "Date.prototype.getUTCDate",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ModuleItem|ImportDeclaration" : [
    1970,
    "[ExportedBindings] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|SpreadElement|...|AssignmentExpression" : [
    1256,
    "[ArrayAccumulation] SpreadElement : ... AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|GeneratorDeclaration|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    1707,
    "[ContainsArguments] GeneratorDeclaration : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-ordinaryset" : [
    1101,
    "OrdinarySet",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|PropertySetParameterList|FormalParameter" : [
    1608,
    "[ExpectedArgumentCount] PropertySetParameterList : FormalParameter",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    668,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-toplevellexicallydeclarednames|StatementListItem|Statement" : [
    494,
    "[TopLevelLexicallyDeclaredNames] StatementListItem : Statement",
    [
    ]
  ],
  "sec-runtime-semantics-classdefinitionevaluation|ClassTail|{|ClassBody|}" : [
    1738,
    "[ClassDefinitionEvaluation] ClassTail : { ClassBody }",
    [
    ]
  ],
  "sec-static-semantics-contains|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    829,
    "[Contains] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|BindingPattern|ObjectBindingPattern" : [
    882,
    "[BindingInitialization] BindingPattern : ObjectBindingPattern",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|LeftHandSideExpression|CallExpression" : [
    814,
    "[IsIdentifierRef] LeftHandSideExpression : CallExpression",
    [
    ]
  ],
  "sec-static-semantics-contains|GeneratorExpression|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    834,
    "[Contains] GeneratorExpression : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-%typedarray%.prototype.filter" : [
    2542,
    "TypedArray.prototype.filter",
    [
    ]
  ],
  "sec-static-semantics-boundnames|CoverCallExpressionAndAsyncArrowHead|MemberExpression|Arguments" : [
    253,
    "[BoundNames] CoverCallExpressionAndAsyncArrowHead : MemberExpression Arguments",
    [
    ]
  ],
  "sec-empty-statement-runtime-semantics-evaluation|EmptyStatement|;" : [
    1450,
    "[Evaluation] EmptyStatement : ;",
    [
    ]
  ],
  "sec-symbol.prototype.description" : [
    2095,
    "get Symbol.prototype.description",
    [
    ]
  ],
  "sec-numeric-types-number-signedRightShift" : [
    60,
    "Number::signedRightShift",
    [
    ]
  ],
  "sec-createregexpstringiterator" : [
    2475,
    "CreateRegExpStringIterator",
    [
      2474
    ]
  ],
  "sec-%typedarray%.prototype.entries" : [
    2539,
    "TypedArray.prototype.entries",
    [
    ]
  ],
  "sec-triggerpromisereactions" : [
    2756,
    "TriggerPromiseReactions",
    [
    ]
  ],
  "sec-reflect.construct" : [
    2838,
    "Reflect.construct",
    [
    ]
  ],
  "sec-compiletocharset|NonemptyClassRangesNoDash|ClassAtomNoDash|-|ClassAtom|ClassContents" : [
    2391,
    "[CompileToCharSet] NonemptyClassRangesNoDash : ClassAtomNoDash - ClassAtom ClassContents",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ShiftExpression|ShiftExpression|<<|AdditiveExpression" : [
    1844,
    "[HasCallInTailPosition] ShiftExpression : ShiftExpression << AdditiveExpression",
    [
    ]
  ],
  "sec-bigintbitwiseop" : [
    84,
    "BigIntBitwiseOp",
    [
    ]
  ],
  "sec-date.prototype.setdate" : [
    2208,
    "Date.prototype.setDate",
    [
    ]
  ],
  "sec-isanonymousfunctiondefinition" : [
    792,
    "IsAnonymousFunctionDefinition",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|default|HoistableDeclaration" : [
    1976,
    "[ExportedBindings] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|LabelledItem|Statement" : [
    333,
    "[LexicallyScopedDeclarations] LabelledItem : Statement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|LeftHandSideExpression|=|AssignmentExpression" : [
    774,
    "[IsFunctionDefinition] AssignmentExpression : LeftHandSideExpression = AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|Literal" : [
    721,
    "[IsFunctionDefinition] PrimaryExpression : Literal",
    [
    ]
  ],
  "sec-block-runtime-semantics-evaluation|Block|{|}" : [
    1428,
    "[Evaluation] Block : { }",
    [
    ]
  ],
  "sec-%throwtypeerror%" : [
    1126,
    "ThrowTypeError",
    [
    ]
  ],
  "sec-date.prototype.setfullyear" : [
    2209,
    "Date.prototype.setFullYear",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|ContinueStatement" : [
    1542,
    "[LabelledEvaluation] Statement : ContinueStatement",
    [
    ]
  ],
  "sec-createresolvingfunctions" : [
    2748,
    "CreateResolvingFunctions",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|DebuggerStatement" : [
    518,
    "[ContainsDuplicateLabels] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-static-semantics-hasname|AsyncArrowFunction|async|AsyncArrowBindingIdentifier|=>|AsyncConciseBody" : [
    710,
    "[HasName] AsyncArrowFunction : async AsyncArrowBindingIdentifier => AsyncConciseBody",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|TemplateLiteral" : [
    804,
    "[IsIdentifierRef] PrimaryExpression : TemplateLiteral",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    1475,
    "[ForLoopEvaluation] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-classelementkind|ClassElement|static|FieldDefinition|;" : [
    1666,
    "[ClassElementKind] ClassElement : static FieldDefinition ;",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|this" : [
    922,
    "[AssignmentTargetType] PrimaryExpression : this",
    [
    ]
  ],
  "sec-parsefloat-string" : [
    2034,
    "parseFloat",
    [
    ]
  ],
  "sec-compiletocharset|NestedClass|\\|CharacterClassEscape" : [
    2421,
    "[CompileToCharSet] NestedClass : \\ CharacterClassEscape",
    [
    ]
  ],
  "sec-unicodeescape" : [
    2731,
    "UnicodeEscape",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|FormalParameters" : [
    1587,
    "[IsSimpleParameterList] FormalParameters :",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|WhileStatement|while|(|Expression|)|Statement" : [
    367,
    "[VarDeclaredNames] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    542,
    "[ContainsDuplicateLabels] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-isintailposition" : [
    22,
    "IsInTailPosition",
    [
    ]
  ],
  "sec-bigint.prototype.tostring" : [
    2122,
    "BigInt.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|default|AssignmentExpression|;" : [
    1978,
    "[ExportedBindings] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-runtime-semantics-fordeclarationbindinginitialization|ForDeclaration|LetOrConst|ForBinding" : [
    1493,
    "[ForDeclarationBindingInitialization] ForDeclaration : LetOrConst ForBinding",
    [
    ]
  ],
  "sec-if-statement-runtime-semantics-evaluation|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    1452,
    "[Evaluation] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-weak-ref-target" : [
    2734,
    "WeakRef",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    399,
    "[VarDeclaredNames] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassUnion|ClassSetRange|ClassUnion" : [
    2321,
    "[MayContainStrings] ClassUnion : ClassSetRange ClassUnion",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalExpression|MemberExpression|OptionalChain" : [
    1896,
    "[HasCallInTailPosition] OptionalExpression : MemberExpression OptionalChain",
    [
    ]
  ],
  "sec-math.exp" : [
    2138,
    "Math.exp",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|RelationalExpression|<|ShiftExpression" : [
    1837,
    "[HasCallInTailPosition] RelationalExpression : RelationalExpression < ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UpdateExpression|++|UnaryExpression" : [
    738,
    "[IsFunctionDefinition] UpdateExpression : ++ UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|BitwiseORExpression|BitwiseORExpression|||BitwiseXORExpression" : [
    1832,
    "[HasCallInTailPosition] BitwiseORExpression : BitwiseORExpression | BitwiseXORExpression",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Statement|ExpressionStatement" : [
    354,
    "[VarDeclaredNames] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-break-statement-runtime-semantics-evaluation|BreakStatement|break|LabelIdentifier|;" : [
    1515,
    "[Evaluation] BreakStatement : break LabelIdentifier ;",
    [
    ]
  ],
  "sec-candeclareglobalvar" : [
    1046,
    "CanDeclareGlobalVar",
    [
    ]
  ],
  "sec-numeric-types-bigint-unaryMinus" : [
    70,
    "BigInt::unaryMinus",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|;|Expression|;|)|Statement" : [
    1788,
    "[HasCallInTailPosition] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-expression-statement-runtime-semantics-evaluation|ExpressionStatement|Expression|;" : [
    1451,
    "[Evaluation] ExpressionStatement : Expression ;",
    [
    ]
  ],
  "sec-runtime-semantics-loopevaluation|IterationStatement|DoWhileStatement" : [
    1455,
    "[LoopEvaluation] IterationStatement : DoWhileStatement",
    [
    ]
  ],
  "sec-regexpidentifiercodepoints|RegExpIdentifierName|RegExpIdentifierName|RegExpIdentifierPart" : [
    2336,
    "[RegExpIdentifierCodePoints] RegExpIdentifierName : RegExpIdentifierName RegExpIdentifierPart",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|FunctionStatementList|StatementList" : [
    412,
    "[VarDeclaredNames] FunctionStatementList : StatementList",
    [
    ]
  ],
  "sec-canonicalnumericindexstring" : [
    144,
    "CanonicalNumericIndexString",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|;|;|)|Statement" : [
    654,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-meta-properties-runtime-semantics-evaluation|ImportMeta|import|.|meta" : [
    1346,
    "[Evaluation] ImportMeta : import . meta",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    534,
    "[ContainsDuplicateLabels] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|Literal" : [
    795,
    "[IsIdentifierRef] PrimaryExpression : Literal",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    394,
    "[VarDeclaredNames] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-runtime-semantics-substitutionevaluation|TemplateSpans|TemplateTail" : [
    1288,
    "[SubstitutionEvaluation] TemplateSpans : TemplateTail",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|LabelIdentifier|yield" : [
    1231,
    "[StringValue] LabelIdentifier : yield",
    [
    ]
  ],
  "sec-validatetypedarray" : [
    2575,
    "ValidateTypedArray",
    [
    ]
  ],
  "sec-super-keyword-runtime-semantics-evaluation|SuperProperty|super|[|Expression|]" : [
    1314,
    "[Evaluation] SuperProperty : super [ Expression ]",
    [
    ]
  ],
  "sec-declarative-environment-records-hassuperbinding" : [
    1016,
    "HasSuperBinding",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    546,
    "[ContainsDuplicateLabels] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-timewithinday" : [
    2160,
    "TimeWithinDay",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|FormalParameterList|FormalParameterList|,|FormalParameter" : [
    1590,
    "[IsSimpleParameterList] FormalParameterList : FormalParameterList , FormalParameter",
    [
    ]
  ],
  "sec-runtime-semantics-caseblockevaluation|CaseBlock|{|DefaultClause|}" : [
    1521,
    "[CaseBlockEvaluation] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    1796,
    "[HasCallInTailPosition] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ScriptBody|StatementList" : [
    418,
    "[VarDeclaredNames] ScriptBody : StatementList",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|ExpressionStatement" : [
    423,
    "[VarScopedDeclarations] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|VariableStatement" : [
    348,
    "[LexicallyScopedDeclarations] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-string-exotic-objects-defineownproperty-p-desc" : [
    1146,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-makeargsetter" : [
    1160,
    "MakeArgSetter",
    [
      1159
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    556,
    "[ContainsDuplicateLabels] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseClause|case|Expression|:|StatementList" : [
    301,
    "[LexicallyDeclaredNames] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-definepropertyorthrow" : [
    167,
    "DefinePropertyOrThrow",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|EqualityExpression|EqualityExpression|!==|RelationalExpression" : [
    973,
    "[AssignmentTargetType] EqualityExpression : EqualityExpression !== RelationalExpression",
    [
    ]
  ],
  "sec-evaluatenew" : [
    1310,
    "EvaluateNew",
    [
    ]
  ],
  "sec-asyncgeneratorresume" : [
    2816,
    "AsyncGeneratorResume",
    [
      2815
    ]
  ],
  "sec-regexp.prototype.tostring" : [
    2464,
    "RegExp.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|LogicalORExpression|LogicalORExpression||||LogicalANDExpression" : [
    978,
    "[AssignmentTargetType] LogicalORExpression : LogicalORExpression || LogicalANDExpression",
    [
    ]
  ],
  "sec-numericvalue|DecimalBigIntegerLiteral|NonZeroDigit|NumericLiteralSeparator|DecimalDigits|BigIntLiteralSuffix" : [
    1224,
    "[NumericValue] DecimalBigIntegerLiteral : NonZeroDigit NumericLiteralSeparator DecimalDigits BigIntLiteralSuffix",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StringNumericLiteral|StrWhiteSpace|StrNumericLiteral" : [
    117,
    "[StringNumericValue] StringNumericLiteral : StrWhiteSpace StrNumericLiteral",
    [
    ]
  ],
  "sec-sharedarraybuffer-length" : [
    2656,
    "SharedArrayBuffer",
    [
    ]
  ],
  "sec-numeric-types-number-leftShift" : [
    59,
    "Number::leftShift",
    [
    ]
  ],
  "sec-left-shift-operator-runtime-semantics-evaluation|ShiftExpression|ShiftExpression|<<|AdditiveExpression" : [
    1362,
    "[Evaluation] ShiftExpression : ShiftExpression << AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    608,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-get-sharedarraybuffer.prototype.maxbytelength" : [
    2661,
    "get SharedArrayBuffer.prototype.maxByteLength",
    [
    ]
  ],
  "sec-inleapyear" : [
    2166,
    "InLeapYear",
    [
    ]
  ],
  "sec-createbuiltinfunction" : [
    1137,
    "CreateBuiltinFunction",
    [
    ]
  ],
  "sec-built-in-function-objects-call-thisargument-argumentslist" : [
    1134,
    "[[Call]]",
    [
    ]
  ],
  "sec-static-semantics-boundnames|LexicalBinding|BindingPattern|Initializer" : [
    214,
    "[BoundNames] LexicalBinding : BindingPattern Initializer",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|AwaitExpression" : [
    747,
    "[IsFunctionDefinition] UnaryExpression : AwaitExpression",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|s" : [
    2309,
    "[MayContainStrings] CharacterClassEscape : s",
    [
    ]
  ],
  "sec-toindex" : [
    145,
    "ToIndex",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StringNumericLiteral|StrWhiteSpace|StrNumericLiteral|StrWhiteSpace" : [
    118,
    "[StringNumericValue] StringNumericLiteral : StrWhiteSpace StrNumericLiteral StrWhiteSpace",
    [
    ]
  ],
  "sec-string.prototype.at" : [
    2239,
    "String.prototype.at",
    [
    ]
  ],
  "sec-string.prototype.search" : [
    2262,
    "String.prototype.search",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    673,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-preventextensions" : [
    1180,
    "[[PreventExtensions]]",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|RelationalExpression|>|ShiftExpression" : [
    964,
    "[AssignmentTargetType] RelationalExpression : RelationalExpression > ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|w" : [
    2311,
    "[MayContainStrings] CharacterClassEscape : w",
    [
    ]
  ],
  "sec-resolvebinding" : [
    1067,
    "ResolveBinding",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|IfStatement|if|(|Expression|)|Statement" : [
    365,
    "[VarDeclaredNames] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-set-iterable" : [
    2603,
    "Set",
    [
    ]
  ],
  "sec-declarative-environment-records-createmutablebinding-n-d" : [
    1009,
    "CreateMutableBinding",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ScriptBody|StatementList" : [
    342,
    "[LexicallyScopedDeclarations] ScriptBody : StatementList",
    [
    ]
  ],
  "sec-object.prototype.propertyisenumerable" : [
    2072,
    "Object.prototype.propertyIsEnumerable",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Module" : [
    489,
    "[VarScopedDeclarations] Module :",
    [
    ]
  ],
  "sec-array.prototype.lastindexof" : [
    2503,
    "Array.prototype.lastIndexOf",
    [
    ]
  ],
  "sec-allocatearraybuffer" : [
    2625,
    "AllocateArrayBuffer",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|d" : [
    2307,
    "[MayContainStrings] CharacterClassEscape : d",
    [
    ]
  ],
  "sec-array.prototype.find" : [
    2490,
    "Array.prototype.find",
    [
    ]
  ],
  "sec-compiletocharset|ClassUnion|ClassSetRange" : [
    2407,
    "[CompileToCharSet] ClassUnion : ClassSetRange",
    [
    ]
  ],
  "sec-compilequantifierprefix|QuantifierPrefix|?" : [
    2368,
    "[CompileQuantifierPrefix] QuantifierPrefix : ?",
    [
    ]
  ],
  "sec-flattenintoarray" : [
    2496,
    "FlattenIntoArray",
    [
    ]
  ],
  "sec-compilequantifierprefix|QuantifierPrefix|+" : [
    2367,
    "[CompileQuantifierPrefix] QuantifierPrefix : +",
    [
    ]
  ],
  "sec-array.prototype.fill" : [
    2488,
    "Array.prototype.fill",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    1808,
    "[HasCallInTailPosition] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|S" : [
    2310,
    "[MayContainStrings] CharacterClassEscape : S",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|await|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    389,
    "[VarDeclaredNames] ForInOfStatement : for await ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|?.|IdentifierName" : [
    1900,
    "[HasCallInTailPosition] OptionalChain : ?. IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1717,
    "[ContainsArguments] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-dataview.prototype.getuint8" : [
    2679,
    "DataView.prototype.getUint8",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    602,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|W" : [
    2312,
    "[MayContainStrings] CharacterClassEscape : W",
    [
    ]
  ],
  "sec-normalcompletion" : [
    88,
    "NormalCompletion",
    [
    ]
  ],
  "sec-isaccessordescriptor" : [
    100,
    "IsAccessorDescriptor",
    [
    ]
  ],
  "sec-compilequantifierprefix|QuantifierPrefix|*" : [
    2366,
    "[CompileQuantifierPrefix] QuantifierPrefix : *",
    [
    ]
  ],
  "sec-tobigint64" : [
    139,
    "ToBigInt64",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|FunctionExpression" : [
    1880,
    "[HasCallInTailPosition] PrimaryExpression : FunctionExpression",
    [
    ]
  ],
  "sec-switch-statement-runtime-semantics-evaluation|CaseClause|case|Expression|:|StatementList" : [
    1528,
    "[Evaluation] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-meta-properties-runtime-semantics-evaluation|NewTarget|new|.|target" : [
    1345,
    "[Evaluation] NewTarget : new . target",
    [
    ]
  ],
  "sec-compiletocharset|ClassIntersection|ClassIntersection|&&|ClassSetOperand" : [
    2412,
    "[CompileToCharSet] ClassIntersection : ClassIntersection && ClassSetOperand",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|DecimalDigits|." : [
    122,
    "[StringNumericValue] StrUnsignedDecimalLiteral : DecimalDigits .",
    [
    ]
  ],
  "sec-minfromtime" : [
    2171,
    "MinFromTime",
    [
    ]
  ],
  "sec-multiplicative-operators-runtime-semantics-evaluation|MultiplicativeExpression|MultiplicativeExpression|MultiplicativeOperator|ExponentiationExpression" : [
    1359,
    "[Evaluation] MultiplicativeExpression : MultiplicativeExpression MultiplicativeOperator ExponentiationExpression",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|D" : [
    2308,
    "[MayContainStrings] CharacterClassEscape : D",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|ExpressionStatement" : [
    513,
    "[ContainsDuplicateLabels] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    1811,
    "[HasCallInTailPosition] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-array.prototype.sort" : [
    2514,
    "Array.prototype.sort",
    [
      2513
    ]
  ],
  "sec-generatorstart" : [
    2795,
    "GeneratorStart",
    [
      2794,
      2793
    ]
  ],
  "sec-static-semantics-hasinitializer|BindingElement|BindingPattern|Initializer" : [
    1597,
    "[HasInitializer] BindingElement : BindingPattern Initializer",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|ObjectLiteral" : [
    1879,
    "[HasCallInTailPosition] PrimaryExpression : ObjectLiteral",
    [
    ]
  ],
  "sec-createglobalfunctionbinding" : [
    1049,
    "CreateGlobalFunctionBinding",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    364,
    "[VarDeclaredNames] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-runtime-semantics-evaluateasyncgeneratorbody|AsyncGeneratorBody|FunctionBody" : [
    1656,
    "[EvaluateAsyncGeneratorBody] AsyncGeneratorBody : FunctionBody",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    1806,
    "[HasCallInTailPosition] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-runtime-semantics-bindingclassdeclarationevaluation|ClassDeclaration|class|ClassTail" : [
    1744,
    "[BindingClassDeclarationEvaluation] ClassDeclaration : class ClassTail",
    [
    ]
  ],
  "sec-decode" : [
    2041,
    "Decode",
    [
    ]
  ],
  "sec-compileatom|AtomEscape|DecimalEscape" : [
    2378,
    "[CompileAtom] AtomEscape : DecimalEscape",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncfunctionexpression|AsyncFunctionExpression|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1753,
    "[InstantiateAsyncFunctionExpression] AsyncFunctionExpression : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-map.prototype.entries" : [
    2592,
    "Map.prototype.entries",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|DefaultClause|default|:|StatementList" : [
    331,
    "[LexicallyScopedDeclarations] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    786,
    "[IsFunctionDefinition] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-dataview.prototype.getfloat32" : [
    2674,
    "DataView.prototype.getFloat32",
    [
    ]
  ],
  "sec-switch-statement-runtime-semantics-evaluation|DefaultClause|default|:" : [
    1529,
    "[Evaluation] DefaultClause : default :",
    [
    ]
  ],
  "sec-%typedarray%.prototype.slice" : [
    2561,
    "TypedArray.prototype.slice",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|LogicalORExpression|LogicalORExpression||||LogicalANDExpression" : [
    770,
    "[IsFunctionDefinition] LogicalORExpression : LogicalORExpression || LogicalANDExpression",
    [
    ]
  ],
  "sec-countleftcapturingparensbefore" : [
    2280,
    "CountLeftCapturingParensBefore",
    [
    ]
  ],
  "sec-static-semantics-hasname|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    707,
    "[HasName] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-array.prototype.tostring" : [
    2523,
    "Array.prototype.toString",
    [
    ]
  ],
  "sec-patterns-static-semantics-is-character-class|ClassEscape|b" : [
    2285,
    "[IsCharacterClass] ClassEscape : b",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|IdentifierName|IdentifierName|IdentifierPart" : [
    1228,
    "[StringValue] IdentifierName : IdentifierName IdentifierPart",
    [
    ]
  ],
  "sec-%typedarray%.prototype.lastindexof" : [
    2552,
    "TypedArray.prototype.lastIndexOf",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|LogicalANDExpression|LogicalANDExpression|&&|BitwiseORExpression" : [
    977,
    "[AssignmentTargetType] LogicalANDExpression : LogicalANDExpression && BitwiseORExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalExpression|CallExpression|OptionalChain" : [
    1897,
    "[HasCallInTailPosition] OptionalExpression : CallExpression OptionalChain",
    [
    ]
  ],
  "sec-static-semantics-exportentries|Module" : [
    2000,
    "[ExportEntries] Module :",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    1473,
    "[ForLoopEvaluation] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|this" : [
    1875,
    "[HasCallInTailPosition] PrimaryExpression : this",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|ThrowStatement" : [
    579,
    "[ContainsUndefinedBreakTarget] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-math.atan2" : [
    2132,
    "Math.atan2",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|FunctionStatementList" : [
    569,
    "[ContainsDuplicateLabels] FunctionStatementList :",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|Elision|AssignmentExpression" : [
    1249,
    "[ArrayAccumulation] ElementList : Elision AssignmentExpression",
    [
    ]
  ],
  "sec-todatestring" : [
    2230,
    "ToDateString",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|Expression|Expression|,|AssignmentExpression" : [
    779,
    "[IsFunctionDefinition] Expression : Expression , AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseBlock|{|DefaultClause|}" : [
    396,
    "[VarDeclaredNames] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-get-o-p" : [
    161,
    "Get",
    [
    ]
  ],
  "sec-static-semantics-classelementevaluation|ClassElement|static|FieldDefinition|;" : [
    1730,
    "[ClassElementEvaluation] ClassElement : static FieldDefinition ;",
    [
    ]
  ],
  "sec-stringtonumber" : [
    28,
    "StringToNumber",
    [
    ]
  ],
  "sec-string.fromcharcode" : [
    2236,
    "String.fromCharCode",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-setprototypeof-v" : [
    1178,
    "[[SetPrototypeOf]]",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|RelationalExpression|in|ShiftExpression" : [
    760,
    "[IsFunctionDefinition] RelationalExpression : RelationalExpression in ShiftExpression",
    [
    ]
  ],
  "sec-switch-statement-runtime-semantics-evaluation|CaseClause|case|Expression|:" : [
    1527,
    "[Evaluation] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|MemberExpression|[|Expression|]" : [
    806,
    "[IsIdentifierRef] MemberExpression : MemberExpression [ Expression ]",
    [
    ]
  ],
  "sec-cleanup-finalization-registry" : [
    1080,
    "CleanupFinalizationRegistry",
    [
    ]
  ],
  "sec-timeclip" : [
    2185,
    "TimeClip",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ModuleItem|StatementListItem" : [
    1920,
    "[ModuleRequests] ModuleItem : StatementListItem",
    [
    ]
  ],
  "sec-asyncgenerator-prototype-return" : [
    2807,
    "AsyncGeneratorFunction.prototype.prototype.return",
    [
    ]
  ],
  "sec-super-keyword-runtime-semantics-evaluation|SuperCall|super|Arguments" : [
    1316,
    "[Evaluation] SuperCall : super Arguments",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    384,
    "[VarDeclaredNames] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|PrivateIdentifier|in|ShiftExpression" : [
    1371,
    "[Evaluation] RelationalExpression : PrivateIdentifier in ShiftExpression",
    [
    ]
  ],
  "sec-reflect.getprototypeof" : [
    2843,
    "Reflect.getPrototypeOf",
    [
    ]
  ],
  "sec-newprivateenvironment" : [
    1060,
    "NewPrivateEnvironment",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingElement|BindingPattern|Initializer" : [
    1572,
    "[ContainsExpression] BindingElement : BindingPattern Initializer",
    [
    ]
  ],
  "sec-static-semantics-toplevelvardeclarednames|StatementListItem|Declaration" : [
    500,
    "[TopLevelVarDeclaredNames] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-static-semantics-templatestrings|TemplateLiteral|NoSubstitutionTemplate" : [
    1280,
    "[TemplateStrings] TemplateLiteral : NoSubstitutionTemplate",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|RelationalExpression|>=|ShiftExpression" : [
    758,
    "[IsFunctionDefinition] RelationalExpression : RelationalExpression >= ShiftExpression",
    [
    ]
  ],
  "sec-numeric-types-bigint-equal" : [
    80,
    "BigInt::equal",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|StatementList|StatementList|StatementListItem" : [
    583,
    "[ContainsUndefinedBreakTarget] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|await|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    550,
    "[ContainsDuplicateLabels] ForInOfStatement : for await ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p" : [
    1195,
    "[[GetOwnProperty]]",
    [
    ]
  ],
  "sec-patterns-static-semantics-is-character-class|ClassEscape|-" : [
    2286,
    "[IsCharacterClass] ClassEscape : -",
    [
    ]
  ],
  "sec-string.prototype.iswellformed" : [
    2247,
    "String.prototype.isWellFormed",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|TryStatement" : [
    1547,
    "[LabelledEvaluation] Statement : TryStatement",
    [
    ]
  ],
  "sec-identifiercodepoints|IdentifierName|IdentifierStart" : [
    1211,
    "[IdentifierCodePoints] IdentifierName : IdentifierStart",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    457,
    "[VarScopedDeclarations] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrowParameters|CoverParenthesizedExpressionAndArrowParameterList" : [
    1581,
    "[ContainsExpression] ArrowParameters : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ModuleItem|ExportDeclaration" : [
    1984,
    "[ExportedNames] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-decodeuri-encodeduri" : [
    2036,
    "decodeURI",
    [
    ]
  ],
  "sec-math.atanh" : [
    2131,
    "Math.atanh",
    [
    ]
  ],
  "sec-definefield" : [
    190,
    "DefineField",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|RelationalExpression|>|ShiftExpression" : [
    756,
    "[IsFunctionDefinition] RelationalExpression : RelationalExpression > ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    287,
    "[IsConstantDeclaration] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|AsyncGeneratorMethod|async|*|ClassElementName|(|UniqueFormalParameters|)|{|AsyncGeneratorBody|}" : [
    1700,
    "[PrivateBoundIdentifiers] AsyncGeneratorMethod : async * ClassElementName ( UniqueFormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ObjectAssignmentPattern|{|AssignmentPropertyList|}" : [
    1392,
    "[DestructuringAssignmentEvaluation] ObjectAssignmentPattern : { AssignmentPropertyList }",
    [
    ]
  ],
  "sec-runtime-semantics-dowhileloopevaluation|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    1459,
    "[DoWhileLoopEvaluation] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|OptionalChain|.|PrivateIdentifier" : [
    1337,
    "[ChainEvaluation] OptionalChain : OptionalChain . PrivateIdentifier",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|ObjectBindingPattern|{|BindingPropertyList|}" : [
    885,
    "[BindingInitialization] ObjectBindingPattern : { BindingPropertyList }",
    [
    ]
  ],
  "sec-numeric-types-bigint-add" : [
    75,
    "BigInt::add",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|]" : [
    890,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ ]",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|Elision|Elision|," : [
    1415,
    "[IteratorDestructuringAssignmentEvaluation] Elision : Elision ,",
    [
    ]
  ],
  "sec-arraybuffer.isview" : [
    2644,
    "ArrayBuffer.isView",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    450,
    "[VarScopedDeclarations] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-ordinaryget" : [
    1099,
    "OrdinaryGet",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|ClassExpression|class|ClassTail" : [
    825,
    "[NamedEvaluation] ClassExpression : class ClassTail",
    [
    ]
  ],
  "sec-object-environment-records-hasthisbinding" : [
    1024,
    "HasThisBinding",
    [
    ]
  ],
  "sec-string.prototype.match" : [
    2250,
    "String.prototype.match",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|TryStatement|try|Block|Catch|Finally" : [
    567,
    "[ContainsDuplicateLabels] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-bound-function-exotic-objects-construct-argumentslist-newtarget" : [
    1139,
    "[[Construct]]",
    [
    ]
  ],
  "sec-object.setprototypeof" : [
    2068,
    "Object.setPrototypeOf",
    [
    ]
  ],
  "sec-putvalue" : [
    96,
    "PutValue",
    [
    ]
  ],
  "sec-array.prototype.findindex" : [
    2491,
    "Array.prototype.findIndex",
    [
    ]
  ],
  "sec-static-semantics-isstatic|ClassElement|static|FieldDefinition|;" : [
    1674,
    "[IsStatic] ClassElement : static FieldDefinition ;",
    [
    ]
  ],
  "sec-static-semantics-hasinitializer|SingleNameBinding|BindingIdentifier" : [
    1598,
    "[HasInitializer] SingleNameBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-declarationpart|Declaration|ClassDeclaration" : [
    272,
    "[DeclarationPart] Declaration : ClassDeclaration",
    [
    ]
  ],
  "sec-static-semantics-toplevelvarscopeddeclarations|StatementListItem|Declaration" : [
    507,
    "[TopLevelVarScopedDeclarations] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ModuleItem|ImportDeclaration" : [
    702,
    "[ContainsUndefinedContinueTarget] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ConditionalExpression|ShortCircuitExpression|?|AssignmentExpression|:|AssignmentExpression" : [
    1889,
    "[HasCallInTailPosition] ConditionalExpression : ShortCircuitExpression ? AssignmentExpression : AssignmentExpression",
    [
    ]
  ],
  "sec-numeric-types-bigint-bitwiseOR" : [
    87,
    "BigInt::bitwiseOR",
    [
    ]
  ],
  "sec-with-statement-runtime-semantics-evaluation|WithStatement|with|(|Expression|)|Statement" : [
    1518,
    "[Evaluation] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ModuleItemList|ModuleItemList|ModuleItem" : [
    419,
    "[VarDeclaredNames] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-reflect.set" : [
    2848,
    "Reflect.set",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    1497,
    "[ForInOfLoopEvaluation] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Block|{|}" : [
    360,
    "[VarDeclaredNames] Block : { }",
    [
    ]
  ],
  "sec-object.create" : [
    2045,
    "Object.create",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    405,
    "[VarDeclaredNames] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-get-map-@@species" : [
    2589,
    "get Map[@@species]",
    [
    ]
  ],
  "sec-get-%typedarray%.prototype.buffer" : [
    2535,
    "get TypedArray.prototype.buffer",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|OptionalChain|Arguments" : [
    1334,
    "[ChainEvaluation] OptionalChain : OptionalChain Arguments",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|LeftHandSideExpression|AssignmentOperator|AssignmentExpression" : [
    1826,
    "[HasCallInTailPosition] AssignmentExpression : LeftHandSideExpression AssignmentOperator AssignmentExpression",
    [
    ]
  ],
  "sec-runtime-semantics-keyedbindinginitialization|SingleNameBinding|BindingIdentifier" : [
    1448,
    "[KeyedBindingInitialization] SingleNameBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-iteratortolist" : [
    206,
    "IteratorToList",
    [
    ]
  ],
  "sec-thisbigintvalue" : [
    2124,
    "ThisBigIntValue",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseClause|case|Expression|:|StatementList" : [
    624,
    "[ContainsUndefinedBreakTarget] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-maketypedarraywithbufferwitnessrecord" : [
    1168,
    "MakeTypedArrayWithBufferWitnessRecord",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|DefaultClause|default|:|StatementList" : [
    692,
    "[ContainsUndefinedContinueTarget] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-static-semantics-isstatic|ClassElement|MethodDefinition" : [
    1671,
    "[IsStatic] ClassElement : MethodDefinition",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|FunctionExpression|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    1706,
    "[ContainsArguments] FunctionExpression : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CoalesceExpression|CoalesceExpressionHead|??|BitwiseORExpression" : [
    1892,
    "[HasCallInTailPosition] CoalesceExpression : CoalesceExpressionHead ?? BitwiseORExpression",
    [
    ]
  ],
  "sec-typedarraycreate" : [
    1169,
    "TypedArrayCreate",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|AsyncMethod|async|ClassElementName|(|UniqueFormalParameters|)|{|AsyncFunctionBody|}" : [
    1699,
    "[PrivateBoundIdentifiers] AsyncMethod : async ClassElementName ( UniqueFormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AsyncGeneratorExpression|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    787,
    "[IsFunctionDefinition] AsyncGeneratorExpression : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    667,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseClause|case|Expression|:|StatementList" : [
    1815,
    "[HasCallInTailPosition] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ModuleItem|ExportDeclaration" : [
    317,
    "[LexicallyDeclaredNames] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-delete-p" : [
    1186,
    "[[Delete]]",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseClause|case|Expression|:|StatementList" : [
    402,
    "[VarDeclaredNames] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|BreakStatement|break|;" : [
    613,
    "[ContainsUndefinedBreakTarget] BreakStatement : break ;",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|GeneratorExpression" : [
    1882,
    "[HasCallInTailPosition] PrimaryExpression : GeneratorExpression",
    [
    ]
  ],
  "sec-atomics.exchange" : [
    2716,
    "Atomics.exchange",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|WithStatement|with|(|Expression|)|Statement" : [
    551,
    "[ContainsDuplicateLabels] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-object.prototype.__defineGetter__" : [
    2078,
    "Object.prototype.__defineGetter__",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|RelationalExpression|<=|ShiftExpression" : [
    1839,
    "[HasCallInTailPosition] RelationalExpression : RelationalExpression <= ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    453,
    "[VarScopedDeclarations] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-isbigintelementtype" : [
    2635,
    "IsBigIntElementType",
    [
    ]
  ],
  "sec-statement-semantics-runtime-semantics-evaluation|HoistableDeclaration|AsyncFunctionDeclaration" : [
    1423,
    "[Evaluation] HoistableDeclaration : AsyncFunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isstatic|ClassElement|static|MethodDefinition" : [
    1672,
    "[IsStatic] ClassElement : static MethodDefinition",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseClauses|CaseClauses|CaseClause" : [
    622,
    "[ContainsUndefinedBreakTarget] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-static-semantics-contains|ClassTail|ClassHeritage|{|ClassBody|}" : [
    844,
    "[Contains] ClassTail : ClassHeritage { ClassBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|DefaultClause|default|:|StatementList" : [
    1817,
    "[HasCallInTailPosition] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|StatementListItem|Declaration" : [
    362,
    "[VarDeclaredNames] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|HexNonSurrogate|Hex4Digits" : [
    2302,
    "[CharacterValue] HexNonSurrogate : Hex4Digits",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|EmptyStatement" : [
    1539,
    "[LabelledEvaluation] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist" : [
    1202,
    "[[Call]]",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|SingleNameBinding|BindingIdentifier|Initializer" : [
    900,
    "[IteratorBindingInitialization] SingleNameBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    469,
    "[VarScopedDeclarations] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-detacharraybuffer" : [
    2629,
    "DetachArrayBuffer",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|default|ClassDeclaration" : [
    1977,
    "[ExportedBindings] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Statement|ContinueStatement" : [
    355,
    "[VarDeclaredNames] Statement : ContinueStatement",
    [
    ]
  ],
  "sec-islooselyequal" : [
    158,
    "IsLooselyEqual",
    [
    ]
  ],
  "sec-getmatchindexpair" : [
    2472,
    "GetMatchIndexPair",
    [
    ]
  ],
  "sec-utf16encodecodepoint" : [
    1206,
    "UTF16EncodeCodePoint",
    [
    ]
  ],
  "sec-regexp-pattern-flags" : [
    2445,
    "RegExp",
    [
    ]
  ],
  "sec-parsetimezoneoffsetstring" : [
    2187,
    "ParseTimeZoneOffsetString",
    [
    ]
  ],
  "sec-regexpidentifiercodepoint|RegExpIdentifierPart|\\|RegExpUnicodeEscapeSequence" : [
    2340,
    "[RegExpIdentifierCodePoint] RegExpIdentifierPart : \\ RegExpUnicodeEscapeSequence",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AsyncFunctionExpression|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    789,
    "[IsFunctionDefinition] AsyncFunctionExpression : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|AssignmentRestElement|]" : [
    1398,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ AssignmentRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    1803,
    "[HasCallInTailPosition] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    381,
    "[VarDeclaredNames] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-templatestrings|SubstitutionTemplate|TemplateHead|Expression|TemplateSpans" : [
    1281,
    "[TemplateStrings] SubstitutionTemplate : TemplateHead Expression TemplateSpans",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|EmptyStatement" : [
    1769,
    "[HasCallInTailPosition] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ModuleItem|ImportDeclaration" : [
    636,
    "[ContainsUndefinedBreakTarget] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    1789,
    "[HasCallInTailPosition] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-isgenericdescriptor" : [
    102,
    "IsGenericDescriptor",
    [
    ]
  ],
  "sec-initializetypedarrayfromlist" : [
    2583,
    "InitializeTypedArrayFromList",
    [
    ]
  ],
  "sec-static-semantics-classelementkind|ClassElement|FieldDefinition|;" : [
    1665,
    "[ClassElementKind] ClassElement : FieldDefinition ;",
    [
    ]
  ],
  "sec-runtime-semantics-substitutionevaluation|TemplateSpans|TemplateMiddleList|TemplateTail" : [
    1289,
    "[SubstitutionEvaluation] TemplateSpans : TemplateMiddleList TemplateTail",
    [
    ]
  ],
  "sec-isfinite-number" : [
    2032,
    "isFinite",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassSetCharacter|\\|ClassSetReservedPunctuator" : [
    2305,
    "[CharacterValue] ClassSetCharacter : \\ ClassSetReservedPunctuator",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AdditiveExpression|AdditiveExpression|+|MultiplicativeExpression" : [
    958,
    "[AssignmentTargetType] AdditiveExpression : AdditiveExpression + MultiplicativeExpression",
    [
    ]
  ],
  "sec-bigint-constructor-number-value" : [
    2118,
    "BigInt",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|CallExpression|.|PrivateIdentifier" : [
    1867,
    "[HasCallInTailPosition] CallExpression : CallExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    397,
    "[VarDeclaredNames] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|void|UnaryExpression" : [
    949,
    "[AssignmentTargetType] UnaryExpression : void UnaryExpression",
    [
    ]
  ],
  "sec-array.prototype.map" : [
    2504,
    "Array.prototype.map",
    [
    ]
  ],
  "sec-compilesubpattern|Term|Atom" : [
    2349,
    "[CompileSubpattern] Term : Atom",
    [
    ]
  ],
  "sec-composewriteeventbytes" : [
    2856,
    "ComposeWriteEventBytes",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    1874,
    "[HasCallInTailPosition] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|DecimalDigits|.|DecimalDigits|ExponentPart" : [
    125,
    "[StringNumericValue] StrUnsignedDecimalLiteral : DecimalDigits . DecimalDigits ExponentPart",
    [
    ]
  ],
  "sec-new-operator-runtime-semantics-evaluation|NewExpression|new|NewExpression" : [
    1308,
    "[Evaluation] NewExpression : new NewExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|DefaultClause|default|:" : [
    330,
    "[LexicallyScopedDeclarations] DefaultClause : default :",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|ObjectBindingPattern|{|}" : [
    884,
    "[BindingInitialization] ObjectBindingPattern : { }",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|SingleNameBinding|BindingIdentifier|Initializer" : [
    1574,
    "[ContainsExpression] SingleNameBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-runtime-semantics-unicodematchpropertyvalue-p-v" : [
    2436,
    "UnicodeMatchPropertyValue",
    [
    ]
  ],
  "sec-static-semantics-hasname|FunctionExpression|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    713,
    "[HasName] FunctionExpression : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|StatementListItem|Statement" : [
    320,
    "[LexicallyScopedDeclarations] StatementListItem : Statement",
    [
    ]
  ],
  "sec-createrealm" : [
    1062,
    "CreateRealm",
    [
    ]
  ],
  "sec-runtime-semantics-evaluateasyncconcisebody|AsyncConciseBody|ExpressionBody" : [
    1760,
    "[EvaluateAsyncConciseBody] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|IdentifierReference|yield" : [
    1229,
    "[StringValue] IdentifierReference : yield",
    [
    ]
  ],
  "sec-eval-x" : [
    2029,
    "eval",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingElisionElement|Elision|BindingElement" : [
    232,
    "[BoundNames] BindingElisionElement : Elision BindingElement",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|DefaultClause|default|:|StatementList" : [
    474,
    "[VarScopedDeclarations] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ObjectBindingPattern|{|BindingRestProperty|}" : [
    1557,
    "[ContainsExpression] ObjectBindingPattern : { BindingRestProperty }",
    [
    ]
  ],
  "sec-static-semantics-propname|AsyncMethod|async|ClassElementName|(|UniqueFormalParameters|)|{|AsyncFunctionBody|}" : [
    1004,
    "[PropName] AsyncMethod : async ClassElementName ( UniqueFormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    446,
    "[VarScopedDeclarations] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|WhileStatement|while|(|Expression|)|Statement" : [
    1785,
    "[HasCallInTailPosition] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-referencedbindings|ExportSpecifier|ModuleExportName|as|ModuleExportName" : [
    2019,
    "[ReferencedBindings] ExportSpecifier : ModuleExportName as ModuleExportName",
    [
    ]
  ],
  "sec-compiletocharset|UnicodePropertyValueExpression|UnicodePropertyName|=|UnicodePropertyValue" : [
    2405,
    "[CompileToCharSet] UnicodePropertyValueExpression : UnicodePropertyName = UnicodePropertyValue",
    [
    ]
  ],
  "sec-static-semantics-contains|OptionalChain|?.|IdentifierName" : [
    855,
    "[Contains] OptionalChain : ?. IdentifierName",
    [
    ]
  ],
  "sec-dataview.prototype.getint8" : [
    2676,
    "DataView.prototype.getInt8",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|MetaProperty" : [
    1484,
    "[IsDestructuring] MemberExpression : MetaProperty",
    [
    ]
  ],
  "sec-validateatomicaccessonintegertypedarray" : [
    2694,
    "ValidateAtomicAccessOnIntegerTypedArray",
    [
    ]
  ],
  "sec-dataview.prototype.getbigint64" : [
    2672,
    "DataView.prototype.getBigInt64",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc" : [
    1196,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-static-semantics-classelementkind|ClassElement|static|MethodDefinition" : [
    1664,
    "[ClassElementKind] ClassElement : static MethodDefinition",
    [
    ]
  ],
  "sec-reflect.apply" : [
    2837,
    "Reflect.apply",
    [
    ]
  ],
  "sec-ordinarydelete" : [
    1104,
    "OrdinaryDelete",
    [
    ]
  ],
  "sec-unary-minus-operator-runtime-semantics-evaluation|UnaryExpression|-|UnaryExpression" : [
    1355,
    "[Evaluation] UnaryExpression : - UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|IdentifierReference" : [
    720,
    "[IsFunctionDefinition] PrimaryExpression : IdentifierReference",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|ToDo" : [
    1681,
    "AllPrivateIdentifiersValid",
    [
    ]
  ],
  "sec-compilequantifierprefix|QuantifierPrefix|{|DecimalDigits|,|DecimalDigits|}" : [
    2371,
    "[CompileQuantifierPrefix] QuantifierPrefix : { DecimalDigits , DecimalDigits }",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    455,
    "[VarScopedDeclarations] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|FormalParameters|FormalParameterList|,|FunctionRestParameter" : [
    906,
    "[IteratorBindingInitialization] FormalParameters : FormalParameterList , FunctionRestParameter",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|EmptyStatement" : [
    512,
    "[ContainsDuplicateLabels] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-defineownproperty-p-desc" : [
    1092,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-bigint.asintn" : [
    2120,
    "BigInt.asIntN",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    620,
    "[ContainsUndefinedBreakTarget] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportFromClause|NamedExports" : [
    1990,
    "[ExportedNames] ExportFromClause : NamedExports",
    [
    ]
  ],
  "sec-asyncgeneratorcompletestep" : [
    2814,
    "AsyncGeneratorCompleteStep",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingElementList|BindingElementList|,|BindingElisionElement" : [
    1568,
    "[ContainsExpression] BindingElementList : BindingElementList , BindingElisionElement",
    [
    ]
  ],
  "sec-getiteratorfrommethod" : [
    194,
    "GetIteratorFromMethod",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|StatementListItem|Declaration" : [
    431,
    "[VarScopedDeclarations] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StringNumericLiteral|StrNumericLiteral" : [
    115,
    "[StringNumericValue] StringNumericLiteral : StrNumericLiteral",
    [
    ]
  ],
  "sec-issuperreference" : [
    93,
    "IsSuperReference",
    [
    ]
  ],
  "sec-string.prototype.towellformed" : [
    2269,
    "String.prototype.toWellFormed",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|RegExpUnicodeEscapeSequence|u|HexLeadSurrogate|\\u|HexTrailSurrogate" : [
    2297,
    "[CharacterValue] RegExpUnicodeEscapeSequence : u HexLeadSurrogate \\u HexTrailSurrogate",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|VariableStatement" : [
    1925,
    "[ModuleRequests] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|TryStatement|try|Block|Catch|Finally" : [
    1820,
    "[HasCallInTailPosition] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-ordinarysetwithowndescriptor" : [
    1102,
    "OrdinarySetWithOwnDescriptor",
    [
    ]
  ],
  "sec-date.prototype.valueof" : [
    2233,
    "Date.prototype.valueOf",
    [
    ]
  ],
  "sec-compiletocharset|ClassAtomNoDash|SourceCharacter" : [
    2393,
    "[CompileToCharSet] ClassAtomNoDash : SourceCharacter",
    [
    ]
  ],
  "sec-ordinaryisextensible" : [
    1087,
    "OrdinaryIsExtensible",
    [
    ]
  ],
  "sec-ordinaryownpropertykeys" : [
    1106,
    "OrdinaryOwnPropertyKeys",
    [
    ]
  ],
  "sec-math.log2" : [
    2147,
    "Math.log2",
    [
    ]
  ],
  "sec-compileassertion|Assertion|(?<=|Disjunction|)" : [
    2361,
    "[CompileAssertion] Assertion : (?<= Disjunction )",
    [
    ]
  ],
  "sec-static-semantics-toplevelvardeclarednames|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    502,
    "[TopLevelVarDeclaredNames] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ModuleItem|StatementListItem" : [
    1971,
    "[ExportedBindings] ModuleItem : StatementListItem",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|BindingIdentifier|Identifier" : [
    879,
    "[BindingInitialization] BindingIdentifier : Identifier",
    [
    ]
  ],
  "sec-static-semantics-toplevellexicallyscopeddeclarations|StatementListItem|Statement" : [
    497,
    "[TopLevelLexicallyScopedDeclarations] StatementListItem : Statement",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|BindingElementList|,|]" : [
    1563,
    "[ContainsExpression] ArrayBindingPattern : [ BindingElementList , ]",
    [
    ]
  ],
  "sec-bigint.prototype.valueof" : [
    2123,
    "BigInt.prototype.valueOf",
    [
    ]
  ],
  "sec-ordinarydefineownproperty" : [
    1093,
    "OrdinaryDefineOwnProperty",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-getprototypeof" : [
    1177,
    "[[GetPrototypeOf]]",
    [
    ]
  ],
  "sec-compiletocharset|NonemptyClassRanges|ClassAtom|-|ClassAtom|ClassContents" : [
    2389,
    "[CompileToCharSet] NonemptyClassRanges : ClassAtom - ClassAtom ClassContents",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|FunctionStatementList" : [
    307,
    "[LexicallyDeclaredNames] FunctionStatementList :",
    [
    ]
  ],
  "sec-%asyncfromsynciteratorprototype%.throw" : [
    2745,
    "AsyncFromSyncIteratorPrototype.throw",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|Script" : [
    313,
    "[LexicallyDeclaredNames] Script :",
    [
    ]
  ],
  "sec-compilepattern" : [
    2343,
    "Pattern[0,0].CompilePattern:clo0",
    [
    ]
  ],
  "sec-numeric-types-bigint-multiply" : [
    72,
    "BigInt::multiply",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|WithStatement|with|(|Expression|)|Statement" : [
    393,
    "[VarDeclaredNames] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-getpromiseresolve" : [
    2763,
    "GetPromiseResolve",
    [
    ]
  ],
  "sec-weakmap.prototype.set" : [
    2620,
    "WeakMap.prototype.set",
    [
    ]
  ],
  "sec-compiletocharset|ClassEscape|CharacterEscape" : [
    2396,
    "[CompileToCharSet] ClassEscape : CharacterEscape",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|MemberExpression|.|IdentifierName" : [
    1870,
    "[HasCallInTailPosition] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|WhileStatement|while|(|Expression|)|Statement" : [
    525,
    "[ContainsDuplicateLabels] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-patterns-static-semantics-is-character-class|ClassAtom|-" : [
    2283,
    "[IsCharacterClass] ClassAtom : -",
    [
    ]
  ],
  "sec-createperiterationenvironment" : [
    1478,
    "CreatePerIterationEnvironment",
    [
    ]
  ],
  "sec-numeric-types-bigint-exponentiate" : [
    0,
    "BigInt::exponentiate",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|LetOrConst|let" : [
    275,
    "[IsConstantDeclaration] LetOrConst : let",
    [
    ]
  ],
  "sec-runtime-semantics-forinofheadevaluation" : [
    1504,
    "ForIn/OfHeadEvaluation",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|IdentifierReference|yield" : [
    912,
    "[AssignmentTargetType] IdentifierReference : yield",
    [
    ]
  ],
  "sec-static-semantics-boundnames|FormalParameters|FormalParameterList|,|FunctionRestParameter" : [
    242,
    "[BoundNames] FormalParameters : FormalParameterList , FunctionRestParameter",
    [
    ]
  ],
  "sec-dataview.prototype.getbiguint64" : [
    2673,
    "DataView.prototype.getBigUint64",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|LeftHandSideExpression|OptionalExpression" : [
    735,
    "[IsFunctionDefinition] LeftHandSideExpression : OptionalExpression",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|CallExpression|[|Expression|]" : [
    914,
    "[AssignmentTargetType] CallExpression : CallExpression [ Expression ]",
    [
    ]
  ],
  "sec-numeric-types-bigint-unsignedRightShift" : [
    78,
    "BigInt::unsignedRightShift",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    563,
    "[ContainsDuplicateLabels] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-iteratorvalue" : [
    198,
    "IteratorValue",
    [
    ]
  ],
  "sec-addition-operator-plus-runtime-semantics-evaluation|AdditiveExpression|AdditiveExpression|+|MultiplicativeExpression" : [
    1360,
    "[Evaluation] AdditiveExpression : AdditiveExpression + MultiplicativeExpression",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Catch|catch|(|CatchParameter|)|Block" : [
    568,
    "[ContainsDuplicateLabels] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-importedlocalnames" : [
    1916,
    "ImportedLocalNames",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ObjectAssignmentPattern|{|AssignmentPropertyList|,|AssignmentRestProperty|}" : [
    1395,
    "[DestructuringAssignmentEvaluation] ObjectAssignmentPattern : { AssignmentPropertyList , AssignmentRestProperty }",
    [
    ]
  ],
  "sec-static-semantics-importentries|ModuleItem|ExportDeclaration" : [
    1957,
    "[ImportEntries] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-symboldescriptivestring" : [
    2097,
    "SymbolDescriptiveString",
    [
    ]
  ],
  "sec-createmappedargumentsobject" : [
    1156,
    "CreateMappedArgumentsObject",
    [
    ]
  ],
  "sec-static-semantics-contains|GeneratorDeclaration|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    832,
    "[Contains] GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-dataview.prototype.getfloat64" : [
    2675,
    "DataView.prototype.getFloat64",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-preventextensions" : [
    1194,
    "[[PreventExtensions]]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    669,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-object.prototype.tostring" : [
    2074,
    "Object.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|FormalParameterList|FormalParameterList|,|FormalParameter" : [
    1579,
    "[ContainsExpression] FormalParameterList : FormalParameterList , FormalParameter",
    [
    ]
  ],
  "sec-createintrinsics" : [
    1063,
    "CreateIntrinsics",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver" : [
    1198,
    "[[Get]]",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    278,
    "[IsConstantDeclaration] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-date.prototype.toisostring" : [
    2224,
    "Date.prototype.toISOString",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|RelationalExpression|>|ShiftExpression" : [
    1366,
    "[Evaluation] RelationalExpression : RelationalExpression > ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-classelementevaluation|ClassElement|static|MethodDefinition" : [
    1732,
    "[ClassElementEvaluation] ClassElement : static MethodDefinition",
    [
    ]
  ],
  "sec-optional-chaining-evaluation|OptionalExpression|CallExpression|OptionalChain" : [
    1328,
    "[Evaluation] OptionalExpression : CallExpression OptionalChain",
    [
    ]
  ],
  "sec-math.sin" : [
    2153,
    "Math.sin",
    [
    ]
  ],
  "sec-object.isfrozen" : [
    2063,
    "Object.isFrozen",
    [
    ]
  ],
  "sec-date.prototype.setutcseconds" : [
    2222,
    "Date.prototype.setUTCSeconds",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ModuleItemList|ModuleItemList|ModuleItem" : [
    571,
    "[ContainsDuplicateLabels] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-regexpidentifiercodepoint|RegExpIdentifierStart|\\|RegExpUnicodeEscapeSequence" : [
    2339,
    "[RegExpIdentifierCodePoint] RegExpIdentifierStart : \\ RegExpUnicodeEscapeSequence",
    [
    ]
  ],
  "sec-addtokeptobjects" : [
    1079,
    "AddToKeptObjects",
    [
    ]
  ],
  "sec-copydataproperties" : [
    184,
    "CopyDataProperties",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    277,
    "[IsConstantDeclaration] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ModuleItem|ImportDeclaration" : [
    345,
    "[LexicallyScopedDeclarations] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    449,
    "[VarScopedDeclarations] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-statement-semantics-runtime-semantics-evaluation|HoistableDeclaration|GeneratorDeclaration" : [
    1422,
    "[Evaluation] HoistableDeclaration : GeneratorDeclaration",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncFunctionDeclaration|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    839,
    "[Contains] AsyncFunctionDeclaration : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    1923,
    "[ModuleRequests] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-getnamedtimezoneepochnanoseconds" : [
    2175,
    "GetNamedTimeZoneEpochNanoseconds",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|AsyncMethod|async|ClassElementName|(|UniqueFormalParameters|)|{|AsyncFunctionBody|}" : [
    868,
    "[ComputedPropertyContains] AsyncMethod : async ClassElementName ( UniqueFormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-daysinyear" : [
    2161,
    "DaysInYear",
    [
    ]
  ],
  "sec-switch-statement-runtime-semantics-evaluation|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    1526,
    "[Evaluation] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|GeneratorExpression" : [
    800,
    "[IsIdentifierRef] PrimaryExpression : GeneratorExpression",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|PrivateIdentifier|in|ShiftExpression" : [
    969,
    "[AssignmentTargetType] RelationalExpression : PrivateIdentifier in ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    375,
    "[VarDeclaredNames] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseBlock|{|}" : [
    617,
    "[ContainsUndefinedBreakTarget] CaseBlock : { }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|await|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    676,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for await ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|YieldExpression" : [
    981,
    "[AssignmentTargetType] AssignmentExpression : YieldExpression",
    [
    ]
  ],
  "sec-makeconstructor" : [
    1127,
    "MakeConstructor",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ModuleItemList|ModuleItemList|ModuleItem" : [
    1983,
    "[ExportedNames] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|Elision|BindingRestElement|]" : [
    224,
    "[BoundNames] ArrayBindingPattern : [ Elision BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|ExportDeclaration|export|default|AssignmentExpression|;" : [
    289,
    "[IsConstantDeclaration] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|Elision|AssignmentRestElement|]" : [
    1399,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ Elision AssignmentRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|ClassElement|;" : [
    1693,
    "[PrivateBoundIdentifiers] ClassElement : ;",
    [
    ]
  ],
  "sec-compileatom|AtomEscape|CharacterClassEscape" : [
    2380,
    "[CompileAtom] AtomEscape : CharacterClassEscape",
    [
    ]
  ],
  "sec-regexp.prototype.exec" : [
    2447,
    "RegExp.prototype.exec",
    [
    ]
  ],
  "sec-regexpalloc" : [
    2442,
    "RegExpAlloc",
    [
    ]
  ],
  "sec-atomicreadmodifywrite" : [
    2710,
    "AtomicReadModifyWrite",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentElisionElement|AssignmentElement" : [
    1412,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentElisionElement : AssignmentElement",
    [
    ]
  ],
  "sec-compilesubpattern|Alternative" : [
    2346,
    "[CompileSubpattern] Alternative :",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|FunctionExpression|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    783,
    "[IsFunctionDefinition] FunctionExpression : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|AsyncGeneratorMethod|async|*|ClassElementName|(|UniqueFormalParameters|)|{|AsyncGeneratorBody|}" : [
    864,
    "[ComputedPropertyContains] AsyncGeneratorMethod : async * ClassElementName ( UniqueFormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-runtime-semantics-loopevaluation|IterationStatement|ForInOfStatement" : [
    1458,
    "[LoopEvaluation] IterationStatement : ForInOfStatement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|~|UnaryExpression" : [
    745,
    "[IsFunctionDefinition] UnaryExpression : ~ UnaryExpression",
    [
    ]
  ],
  "sec-let-and-const-declarations-runtime-semantics-evaluation|LexicalBinding|BindingIdentifier|Initializer" : [
    1435,
    "[Evaluation] LexicalBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|BindingElement|BindingPattern|Initializer" : [
    902,
    "[IteratorBindingInitialization] BindingElement : BindingPattern Initializer",
    [
    ]
  ],
  "sec-allocatetypedarray" : [
    2580,
    "AllocateTypedArray",
    [
    ]
  ],
  "sec-date.prototype.getutcminutes" : [
    2205,
    "Date.prototype.getUTCMinutes",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|PrivateIdentifier|#|IdentifierName" : [
    1236,
    "[StringValue] PrivateIdentifier : # IdentifierName",
    [
    ]
  ],
  "sec-class-definitions-runtime-semantics-evaluation|ClassExpression|class|ClassTail" : [
    1746,
    "[Evaluation] ClassExpression : class ClassTail",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Catch|catch|(|CatchParameter|)|Block" : [
    1821,
    "[HasCallInTailPosition] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-binary-bitwise-operators-runtime-semantics-evaluation|BitwiseORExpression|BitwiseORExpression|||BitwiseXORExpression" : [
    1379,
    "[Evaluation] BitwiseORExpression : BitwiseORExpression | BitwiseXORExpression",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|StatementList|StatementList|StatementListItem" : [
    521,
    "[ContainsDuplicateLabels] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|OptionalChain|.|PrivateIdentifier" : [
    1904,
    "[HasCallInTailPosition] OptionalChain : OptionalChain . PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportDeclaration|export|VariableStatement" : [
    1991,
    "[ExportedNames] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-FinishLoadingImportedModule" : [
    1949,
    "FinishLoadingImportedModule",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseBlock|{|}" : [
    294,
    "[LexicallyDeclaredNames] CaseBlock : { }",
    [
    ]
  ],
  "sec-static-semantics-iscomputedpropertykey|PropertyName|LiteralPropertyName" : [
    1262,
    "[IsComputedPropertyKey] PropertyName : LiteralPropertyName",
    [
    ]
  ],
  "sec-static-semantics-importentries|Module" : [
    1955,
    "[ImportEntries] Module :",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|ObjectBindingPattern|{|BindingPropertyList|,|BindingRestProperty|}" : [
    888,
    "[BindingInitialization] ObjectBindingPattern : { BindingPropertyList , BindingRestProperty }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|AsyncGeneratorExpression" : [
    1884,
    "[HasCallInTailPosition] PrimaryExpression : AsyncGeneratorExpression",
    [
    ]
  ],
  "sec-number.isfinite" : [
    2108,
    "Number.isFinite",
    [
    ]
  ],
  "sec-createlistiteratorRecord" : [
    205,
    "CreateListIteratorRecord",
    [
      204
    ]
  ],
  "sec-static-semantics-hascallintailposition|ExponentiationExpression|UpdateExpression|**|ExponentiationExpression" : [
    1850,
    "[HasCallInTailPosition] ExponentiationExpression : UpdateExpression ** ExponentiationExpression",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    373,
    "[VarDeclaredNames] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|LeftHandSideExpression|||=|AssignmentExpression" : [
    1828,
    "[HasCallInTailPosition] AssignmentExpression : LeftHandSideExpression ||= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    665,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Statement|DebuggerStatement" : [
    359,
    "[VarDeclaredNames] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-finalization-registry.prototype.unregister" : [
    2739,
    "FinalizationRegistry.prototype.unregister",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|CallExpression|.|PrivateIdentifier" : [
    916,
    "[AssignmentTargetType] CallExpression : CallExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-delete-p" : [
    1200,
    "[[Delete]]",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    1795,
    "[HasCallInTailPosition] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|Elision|BindingRestElement|]" : [
    1562,
    "[ContainsExpression] ArrayBindingPattern : [ Elision BindingRestElement ]",
    [
    ]
  ],
  "sec-regexp.prototype-@@search" : [
    2458,
    "RegExp.prototype[@@search]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    663,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-array.prototype.every" : [
    2487,
    "Array.prototype.every",
    [
    ]
  ],
  "sec-iteratorclose" : [
    201,
    "IteratorClose",
    [
    ]
  ],
  "sec-immutable-prototype-exotic-objects-setprototypeof-v" : [
    1189,
    "[[SetPrototypeOf]]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ClassStaticBlockStatementList" : [
    700,
    "[ContainsUndefinedContinueTarget] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|VariableStatement" : [
    1538,
    "[LabelledEvaluation] Statement : VariableStatement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AdditiveExpression|AdditiveExpression|-|MultiplicativeExpression" : [
    959,
    "[AssignmentTargetType] AdditiveExpression : AdditiveExpression - MultiplicativeExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|PrivateIdentifier|in|ShiftExpression" : [
    761,
    "[IsFunctionDefinition] RelationalExpression : PrivateIdentifier in ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|ExpressionStatement" : [
    1770,
    "[HasCallInTailPosition] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-getarraybuffermaxbytelengthoption" : [
    2631,
    "GetArrayBufferMaxByteLengthOption",
    [
    ]
  ],
  "sec-static-semantics-referencedbindings|NamedExports|{|}" : [
    2017,
    "[ReferencedBindings] NamedExports : { }",
    [
    ]
  ],
  "sec-asyncgenerator-prototype-next" : [
    2806,
    "AsyncGeneratorFunction.prototype.prototype.next",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|typeof|UnaryExpression" : [
    950,
    "[AssignmentTargetType] UnaryExpression : typeof UnaryExpression",
    [
    ]
  ],
  "sec-super-keyword-runtime-semantics-evaluation|SuperProperty|super|.|IdentifierName" : [
    1315,
    "[Evaluation] SuperProperty : super . IdentifierName",
    [
    ]
  ],
  "sec-rawbytestonumeric" : [
    2637,
    "RawBytesToNumeric",
    [
    ]
  ],
  "sec-numericvalue|NumericLiteral|LegacyOctalIntegerLiteral" : [
    1219,
    "[NumericValue] NumericLiteral : LegacyOctalIntegerLiteral",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|BitwiseANDExpression|BitwiseANDExpression|&|EqualityExpression" : [
    1830,
    "[HasCallInTailPosition] BitwiseANDExpression : BitwiseANDExpression & EqualityExpression",
    [
    ]
  ],
  "sec-regexphasflag" : [
    2450,
    "RegExpHasFlag",
    [
    ]
  ],
  "sec-getthisenvironment" : [
    1068,
    "GetThisEnvironment",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|FormalParameters" : [
    1577,
    "[ContainsExpression] FormalParameters :",
    [
    ]
  ],
  "sec-atomics.and" : [
    2714,
    "Atomics.and",
    [
    ]
  ],
  "sec-new-operator-runtime-semantics-evaluation|MemberExpression|new|MemberExpression|Arguments" : [
    1309,
    "[Evaluation] MemberExpression : new MemberExpression Arguments",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentRestElement|...|DestructuringAssignmentTarget" : [
    1418,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentRestElement : ... DestructuringAssignmentTarget",
    [
    ]
  ],
  "sec-numeric-types-number-subtract" : [
    58,
    "Number::subtract",
    [
    ]
  ],
  "sec-static-semantics-contains|MemberExpression|MemberExpression|.|IdentifierName" : [
    852,
    "[Contains] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-exportentriesformodule|ExportFromClause|*|as|ModuleExportName" : [
    2012,
    "[ExportEntriesForModule] ExportFromClause : * as ModuleExportName",
    [
    ]
  ],
  "sec-%typedarray%.prototype.some" : [
    2562,
    "TypedArray.prototype.some",
    [
    ]
  ],
  "sec-encode" : [
    2040,
    "Encode",
    [
    ]
  ],
  "sec-stringtocodepoints" : [
    27,
    "StringToCodePoints",
    [
    ]
  ],
  "sec-async-arrow-function-definitions-runtime-semantics-evaluation|AsyncArrowFunction|CoverCallExpressionAndAsyncArrowHead|=>|AsyncConciseBody" : [
    1764,
    "[Evaluation] AsyncArrowFunction : CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ParenthesizedExpression|(|Expression|)" : [
    1909,
    "[HasCallInTailPosition] ParenthesizedExpression : ( Expression )",
    [
    ]
  ],
  "sec-runtime-semantics-instantiategeneratorfunctionobject|GeneratorDeclaration|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    1647,
    "[InstantiateGeneratorFunctionObject] GeneratorDeclaration : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UpdateExpression|--|UnaryExpression" : [
    947,
    "[AssignmentTargetType] UpdateExpression : -- UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|default|HoistableDeclaration" : [
    265,
    "[BoundNames] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingIdentifier|yield" : [
    208,
    "[BoundNames] BindingIdentifier : yield",
    [
    ]
  ],
  "sec-isunsignedelementtype" : [
    2633,
    "IsUnsignedElementType",
    [
    ]
  ],
  "sec-string.prototype.normalize" : [
    2252,
    "String.prototype.normalize",
    [
    ]
  ],
  "sec-quotejsonstring" : [
    2730,
    "QuoteJSONString",
    [
    ]
  ],
  "sec-runtime-semantics-evaluateconcisebody|ConciseBody|ExpressionBody" : [
    1623,
    "[EvaluateConciseBody] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-runtime-semantics-fordeclarationbindinginstantiation|ForDeclaration|LetOrConst|ForBinding" : [
    1494,
    "[ForDeclarationBindingInstantiation] ForDeclaration : LetOrConst ForBinding",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrNumericLiteral|NonDecimalIntegerLiteral" : [
    119,
    "[StringNumericValue] StrNumericLiteral : NonDecimalIntegerLiteral",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|NameSpaceImport|*|as|ImportedBinding" : [
    1964,
    "[ImportEntriesForModule] NameSpaceImport : * as ImportedBinding",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|CharacterEscape|ControlEscape" : [
    2293,
    "[CharacterValue] CharacterEscape : ControlEscape",
    [
    ]
  ],
  "sec-codepointat" : [
    1209,
    "CodePointAt",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|NewExpression|new|NewExpression" : [
    938,
    "[AssignmentTargetType] NewExpression : new NewExpression",
    [
    ]
  ],
  "sec-get-set-@@species" : [
    2604,
    "get Set[@@species]",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|AsyncFunctionExpression" : [
    929,
    "[AssignmentTargetType] PrimaryExpression : AsyncFunctionExpression",
    [
    ]
  ],
  "sec-weekday" : [
    2169,
    "WeekDay",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassContents" : [
    2316,
    "[MayContainStrings] ClassContents :",
    [
    ]
  ],
  "sec-finalization-registry.prototype.register" : [
    2738,
    "FinalizationRegistry.prototype.register",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|ClassElementName|PropertyName" : [
    1691,
    "[PrivateBoundIdentifiers] ClassElementName : PropertyName",
    [
    ]
  ],
  "sec-static-semantics-propname|LiteralPropertyName|IdentifierName" : [
    993,
    "[PropName] LiteralPropertyName : IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    529,
    "[ContainsDuplicateLabels] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-resolvethisbinding" : [
    1069,
    "ResolveThisBinding",
    [
    ]
  ],
  "sec-string.prototype.trimstart" : [
    2273,
    "String.prototype.trimStart",
    [
    ]
  ],
  "sec-source-text-module-record-initialize-environment" : [
    1946,
    "InitializeEnvironment",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|ArgumentList|AssignmentExpression" : [
    1320,
    "[ArgumentListEvaluation] ArgumentList : AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ContinueStatement|continue|;" : [
    679,
    "[ContainsUndefinedContinueTarget] ContinueStatement : continue ;",
    [
    ]
  ],
  "sec-static-semantics-toplevelvarscopeddeclarations|StatementList|StatementList|StatementListItem" : [
    505,
    "[TopLevelVarScopedDeclarations] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|FunctionStatementList" : [
    335,
    "[LexicallyScopedDeclarations] FunctionStatementList :",
    [
    ]
  ],
  "sec-module-semantics-runtime-semantics-evaluation|Module" : [
    1951,
    "[Evaluation] Module :",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ModuleItem|ImportDeclaration" : [
    1985,
    "[ExportedNames] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    296,
    "[LexicallyDeclaredNames] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-binary-logical-operators-runtime-semantics-evaluation|LogicalORExpression|LogicalORExpression||||LogicalANDExpression" : [
    1381,
    "[Evaluation] LogicalORExpression : LogicalORExpression || LogicalANDExpression",
    [
    ]
  ],
  "sec-date.prototype.setmonth" : [
    2213,
    "Date.prototype.setMonth",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|AsyncArrowFunction|async|AsyncArrowBindingIdentifier|=>|AsyncConciseBody" : [
    823,
    "[NamedEvaluation] AsyncArrowFunction : async AsyncArrowBindingIdentifier => AsyncConciseBody",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseClauses|CaseClauses|CaseClause" : [
    558,
    "[ContainsDuplicateLabels] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-%typedarray%.prototype.set" : [
    2558,
    "TypedArray.prototype.set",
    [
    ]
  ],
  "sec-map-iterable" : [
    2586,
    "Map",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    464,
    "[VarScopedDeclarations] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-statement-semantics-runtime-semantics-evaluation|HoistableDeclaration|FunctionDeclaration" : [
    1425,
    "[Evaluation] HoistableDeclaration : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-hasdirectsuper|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    1629,
    "[HasDirectSuper] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|WithStatement|with|(|Expression|)|Statement" : [
    615,
    "[ContainsUndefinedBreakTarget] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|AsyncFunctionDeclaration|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    284,
    "[IsConstantDeclaration] AsyncFunctionDeclaration : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-specialmethod|MethodDefinition|AsyncMethod" : [
    1635,
    "[SpecialMethod] MethodDefinition : AsyncMethod",
    [
    ]
  ],
  "sec-binaryand" : [
    81,
    "BinaryAnd",
    [
    ]
  ],
  "sec-static-semantics-boundnames|AsyncGeneratorDeclaration|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    247,
    "[BoundNames] AsyncGeneratorDeclaration : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-object.prototype.tolocalestring" : [
    2073,
    "Object.prototype.toLocaleString",
    [
    ]
  ],
  "sec-object.entries" : [
    2049,
    "Object.entries",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|CharacterEscape|HexEscapeSequence" : [
    2296,
    "[CharacterValue] CharacterEscape : HexEscapeSequence",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|new|MemberExpression|Arguments" : [
    731,
    "[IsFunctionDefinition] MemberExpression : new MemberExpression Arguments",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|RegularExpressionLiteral" : [
    1885,
    "[HasCallInTailPosition] PrimaryExpression : RegularExpressionLiteral",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|AsyncFunctionExpression" : [
    1883,
    "[HasCallInTailPosition] PrimaryExpression : AsyncFunctionExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    671,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-tolength" : [
    143,
    "ToLength",
    [
    ]
  ],
  "sec-initializetypedarrayfromtypedarray" : [
    2581,
    "InitializeTypedArrayFromTypedArray",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ImportDeclaration|import|ImportClause|FromClause|;" : [
    1921,
    "[ModuleRequests] ImportDeclaration : import ImportClause FromClause ;",
    [
    ]
  ],
  "sec-%stringiteratorprototype%.next" : [
    2278,
    "StringIteratorPrototype.next",
    [
    ]
  ],
  "sec-frompropertydescriptor" : [
    103,
    "FromPropertyDescriptor",
    [
    ]
  ],
  "sec-date.prototype.getseconds" : [
    2197,
    "Date.prototype.getSeconds",
    [
    ]
  ],
  "sec-newobjectenvironment" : [
    1056,
    "NewObjectEnvironment",
    [
    ]
  ],
  "sec-runtime-semantics-propertydestructuringassignmentevaluation|AssignmentProperty|IdentifierReference|Initializer" : [
    1407,
    "[PropertyDestructuringAssignmentEvaluation] AssignmentProperty : IdentifierReference Initializer",
    [
    ]
  ],
  "sec-invoke" : [
    179,
    "Invoke",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    261,
    "[BoundNames] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-createunmappedargumentsobject" : [
    1155,
    "CreateUnmappedArgumentsObject",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    1468,
    "[ForLoopEvaluation] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-compileatom|AtomEscape|k|GroupName" : [
    2381,
    "[CompileAtom] AtomEscape : k GroupName",
    [
    ]
  ],
  "sec-setrealmglobalobject" : [
    1064,
    "SetRealmGlobalObject",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|BitwiseANDExpression|BitwiseANDExpression|&|EqualityExpression" : [
    766,
    "[IsFunctionDefinition] BitwiseANDExpression : BitwiseANDExpression & EqualityExpression",
    [
    ]
  ],
  "sec-object-environment-records-getbindingvalue-n-s" : [
    1022,
    "GetBindingValue",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncarrowfunctionexpression|AsyncArrowFunction|CoverCallExpressionAndAsyncArrowHead|=>|AsyncConciseBody" : [
    1762,
    "[InstantiateAsyncArrowFunctionExpression] AsyncArrowFunction : CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody",
    [
    ]
  ],
  "sec-generator.prototype.throw" : [
    2792,
    "GeneratorFunction.prototype.prototype.throw",
    [
    ]
  ],
  "sec-static-semantics-exportentriesformodule|ExportSpecifier|ModuleExportName|as|ModuleExportName" : [
    2016,
    "[ExportEntriesForModule] ExportSpecifier : ModuleExportName as ModuleExportName",
    [
    ]
  ],
  "sec-string.prototype.includes" : [
    2245,
    "String.prototype.includes",
    [
    ]
  ],
  "sec-decodeuricomponent-encodeduricomponent" : [
    2037,
    "decodeURIComponent",
    [
    ]
  ],
  "sec-throwcompletion" : [
    89,
    "ThrowCompletion",
    [
    ]
  ],
  "sec-sortindexedproperties" : [
    2515,
    "SortIndexedProperties",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-hasproperty-p" : [
    1183,
    "[[HasProperty]]",
    [
    ]
  ],
  "sec-static-semantics-templatestrings|TemplateMiddleList|TemplateMiddleList|TemplateMiddle|Expression" : [
    1285,
    "[TemplateStrings] TemplateMiddleList : TemplateMiddleList TemplateMiddle Expression",
    [
    ]
  ],
  "sec-string.prototype.concat" : [
    2243,
    "String.prototype.concat",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|ImportMeta|import|.|meta" : [
    942,
    "[AssignmentTargetType] ImportMeta : import . meta",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncfunctionobject|AsyncFunctionDeclaration|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1750,
    "[InstantiateAsyncFunctionObject] AsyncFunctionDeclaration : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-typedarray-hasproperty" : [
    1162,
    "[[HasProperty]]",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|PropertyName|ComputedPropertyName" : [
    859,
    "[ComputedPropertyContains] PropertyName : ComputedPropertyName",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|MetaProperty" : [
    810,
    "[IsIdentifierRef] MemberExpression : MetaProperty",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|;|;|Expression|)|Statement" : [
    369,
    "[VarDeclaredNames] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-number.isinteger" : [
    2109,
    "Number.isInteger",
    [
    ]
  ],
  "sec-tagged-templates-runtime-semantics-evaluation|CallExpression|CallExpression|TemplateLiteral" : [
    1344,
    "[Evaluation] CallExpression : CallExpression TemplateLiteral",
    [
    ]
  ],
  "sec-utf16decodesurrogatepair" : [
    1208,
    "UTF16SurrogatePairToCodePoint",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ModuleSpecifier|StringLiteral" : [
    1922,
    "[ModuleRequests] ModuleSpecifier : StringLiteral",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|MemberExpression|[|Expression|]" : [
    726,
    "[IsFunctionDefinition] MemberExpression : MemberExpression [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    660,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-json.stringify" : [
    2728,
    "JSON.stringify",
    [
    ]
  ],
  "sec-date.prototype.setutchours" : [
    2218,
    "Date.prototype.setUTCHours",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|Expression|Expression|,|AssignmentExpression" : [
    989,
    "[AssignmentTargetType] Expression : Expression , AssignmentExpression",
    [
    ]
  ],
  "sec-array.prototype.findlastindex" : [
    2493,
    "Array.prototype.findLastIndex",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StringNumericLiteral|StrNumericLiteral|StrWhiteSpace" : [
    116,
    "[StringNumericValue] StringNumericLiteral : StrNumericLiteral StrWhiteSpace",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseBlock|{|DefaultClause|}" : [
    295,
    "[LexicallyDeclaredNames] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-istimezoneoffsetstring" : [
    2186,
    "IsTimeZoneOffsetString",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    687,
    "[ContainsUndefinedContinueTarget] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassIntersection|ClassSetOperand|&&|ClassSetOperand" : [
    2324,
    "[MayContainStrings] ClassIntersection : ClassSetOperand && ClassSetOperand",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    820,
    "[NamedEvaluation] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|OptionalChain|Arguments" : [
    1906,
    "[HasCallInTailPosition] OptionalChain : OptionalChain Arguments",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|SingleNameBinding|BindingIdentifier" : [
    1585,
    "[IsSimpleParameterList] SingleNameBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-agentsignifier" : [
    1075,
    "AgentSignifier",
    [
    ]
  ],
  "sec-map.prototype.keys" : [
    2596,
    "Map.prototype.keys",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|DecimalDigits|ExponentPart" : [
    129,
    "[StringNumericValue] StrUnsignedDecimalLiteral : DecimalDigits ExponentPart",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseBlock|{|}" : [
    1781,
    "[HasCallInTailPosition] CaseBlock : { }",
    [
    ]
  ],
  "sec-runtime-semantics-methoddefinitionevaluation|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    1642,
    "[MethodDefinitionEvaluation] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|WhileStatement|while|(|Expression|)|Statement" : [
    587,
    "[ContainsUndefinedBreakTarget] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-suspendthisagent" : [
    2702,
    "SuspendThisAgent",
    [
    ]
  ],
  "sec-property-accessors-runtime-semantics-evaluation|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    1302,
    "[Evaluation] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    821,
    "[NamedEvaluation] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-%asyncfromsynciteratorprototype%.next" : [
    2743,
    "AsyncFromSyncIteratorPrototype.next",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|DefaultClause|default|:" : [
    302,
    "[LexicallyDeclaredNames] DefaultClause : default :",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    598,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-reflect.setprototypeof" : [
    2849,
    "Reflect.setPrototypeOf",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    1695,
    "[PrivateBoundIdentifiers] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-module-semantics-runtime-semantics-evaluation|ModuleItem|ImportDeclaration" : [
    1954,
    "[Evaluation] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|Arguments|(|)" : [
    1319,
    "[ArgumentListEvaluation] Arguments : ( )",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|TemplateLiteral|SubstitutionTemplate" : [
    1325,
    "[ArgumentListEvaluation] TemplateLiteral : SubstitutionTemplate",
    [
    ]
  ],
  "sec-settypedarrayfromarraylike" : [
    2560,
    "SetTypedArrayFromArrayLike",
    [
    ]
  ],
  "sec-number.prototype.toprecision" : [
    2114,
    "Number.prototype.toPrecision",
    [
    ]
  ],
  "sec-ordinarycreatefromconstructor" : [
    1108,
    "OrdinaryCreateFromConstructor",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|Elision|]" : [
    1560,
    "[ContainsExpression] ArrayBindingPattern : [ Elision ]",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|UnicodePropertyValueExpression|LoneUnicodePropertyNameOrValue" : [
    2319,
    "[MayContainStrings] UnicodePropertyValueExpression : LoneUnicodePropertyNameOrValue",
    [
    ]
  ],
  "sec-static-semantics-isstatic|ClassElement|ClassStaticBlock" : [
    1675,
    "[IsStatic] ClassElement : ClassStaticBlock",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    862,
    "[ComputedPropertyContains] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-get-arraybuffer.prototype.maxbytelength" : [
    2648,
    "get ArrayBuffer.prototype.maxByteLength",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetRange|ClassSetCharacter|-|ClassSetCharacter" : [
    2415,
    "[CompileToCharSet] ClassSetRange : ClassSetCharacter - ClassSetCharacter",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-set-p-v-receiver" : [
    1100,
    "[[Set]]",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof" : [
    1191,
    "[[GetPrototypeOf]]",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|FunctionBody|FunctionStatementList" : [
    1114,
    "[EvaluateBody] FunctionBody : FunctionStatementList",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|await|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    1501,
    "[ForInOfLoopEvaluation] ForInOfStatement : for await ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-asynciteratorprototype-asynciterator" : [
    2741,
    "AsyncIteratorPrototype[@@asyncIterator]",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ShiftExpression|ShiftExpression|>>|AdditiveExpression" : [
    753,
    "[IsFunctionDefinition] ShiftExpression : ShiftExpression >> AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    1782,
    "[HasCallInTailPosition] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    732,
    "[IsFunctionDefinition] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-json.parse" : [
    2726,
    "JSON.parse",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|RelationalExpression|>=|ShiftExpression" : [
    1368,
    "[Evaluation] RelationalExpression : RelationalExpression >= ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|TryStatement|try|Block|Finally" : [
    630,
    "[ContainsUndefinedBreakTarget] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-fulfillpromise" : [
    2751,
    "FulfillPromise",
    [
    ]
  ],
  "sec-template-literals-runtime-semantics-evaluation|SubstitutionTemplate|TemplateHead|Expression|TemplateSpans" : [
    1293,
    "[Evaluation] SubstitutionTemplate : TemplateHead Expression TemplateSpans",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|WhileStatement|while|(|Expression|)|Statement" : [
    437,
    "[VarScopedDeclarations] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-map.prototype.has" : [
    2595,
    "Map.prototype.has",
    [
    ]
  ],
  "sec-maybesimplecasefolding" : [
    2433,
    "MaybeSimpleCaseFolding",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    860,
    "[ComputedPropertyContains] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-keyedbindinginitialization|BindingElement|BindingPattern|Initializer" : [
    1447,
    "[KeyedBindingInitialization] BindingElement : BindingPattern Initializer",
    [
    ]
  ],
  "sec-asyncgenerator-definitions-evaluation|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1661,
    "[Evaluation] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-propname|AsyncGeneratorMethod|async|*|ClassElementName|(|UniqueFormalParameters|)|{|AsyncGeneratorBody|}" : [
    1001,
    "[PropName] AsyncGeneratorMethod : async * ClassElementName ( UniqueFormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-compileatom|Atom|PatternCharacter" : [
    2372,
    "[CompileAtom] Atom : PatternCharacter",
    [
    ]
  ],
  "sec-makebasicobject" : [
    160,
    "MakeBasicObject",
    [
    ]
  ],
  "sec-performpromiseall" : [
    2764,
    "PerformPromiseAll",
    [
    ]
  ],
  "sec-static-semantics-boundnames|FormalParameters" : [
    241,
    "[BoundNames] FormalParameters :",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|;|Expression|;|Expression|)|Statement" : [
    1464,
    "[ForLoopEvaluation] ForStatement : for ( ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-restdestructuringassignmentevaluation|AssignmentRestProperty|...|DestructuringAssignmentTarget" : [
    1409,
    "[RestDestructuringAssignmentEvaluation] AssignmentRestProperty : ... DestructuringAssignmentTarget",
    [
    ]
  ],
  "sec-sharedarraybuffer-@@species" : [
    2657,
    "get SharedArrayBuffer[@@species]",
    [
    ]
  ],
  "sec-arraybuffer-length" : [
    2643,
    "ArrayBuffer",
    [
    ]
  ],
  "sec-removewaiter" : [
    2700,
    "RemoveWaiter",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-isextensible" : [
    1179,
    "[[IsExtensible]]",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|TryStatement|try|Block|Catch|Finally" : [
    409,
    "[VarDeclaredNames] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-get-arraybuffer-@@species" : [
    2645,
    "get ArrayBuffer[@@species]",
    [
    ]
  ],
  "sec-string.prototype.codepointat" : [
    2242,
    "String.prototype.codePointAt",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ImportClause|ImportedDefaultBinding|,|NameSpaceImport" : [
    256,
    "[BoundNames] ImportClause : ImportedDefaultBinding , NameSpaceImport",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    672,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingRestElement|...|BindingIdentifier" : [
    1575,
    "[ContainsExpression] BindingRestElement : ... BindingIdentifier",
    [
    ]
  ],
  "sec-isarraybufferviewoutofbounds" : [
    1176,
    "IsArrayBufferViewOutOfBounds",
    [
    ]
  ],
  "sec-date.prototype.setutcdate" : [
    2216,
    "Date.prototype.setUTCDate",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportsList|ExportsList|,|ExportSpecifier" : [
    1980,
    "[ExportedBindings] ExportsList : ExportsList , ExportSpecifier",
    [
    ]
  ],
  "sec-asyncgeneratorenqueue" : [
    2813,
    "AsyncGeneratorEnqueue",
    [
    ]
  ],
  "sec-advancestringindex" : [
    2469,
    "AdvanceStringIndex",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|StatementList|StatementList|StatementListItem" : [
    319,
    "[LexicallyScopedDeclarations] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    616,
    "[ContainsUndefinedBreakTarget] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|TryStatement|try|Block|Finally" : [
    408,
    "[VarDeclaredNames] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-static-semantics-classelementkind|ClassElement|;" : [
    1668,
    "[ClassElementKind] ClassElement : ;",
    [
    ]
  ],
  "sec-static-semantics-propname|ClassElement|;" : [
    1003,
    "[PropName] ClassElement : ;",
    [
    ]
  ],
  "sec-numeric-types-number-exponentiate" : [
    53,
    "Number::exponentiate",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingElisionElement|BindingElement" : [
    1569,
    "[ContainsExpression] BindingElisionElement : BindingElement",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|AsyncConciseBody|ExpressionBody" : [
    340,
    "[LexicallyScopedDeclarations] AsyncConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-dataview.prototype.setint8" : [
    2686,
    "DataView.prototype.setInt8",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|?.|IdentifierName" : [
    1332,
    "[ChainEvaluation] OptionalChain : ?. IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UpdateExpression|LeftHandSideExpression|++" : [
    736,
    "[IsFunctionDefinition] UpdateExpression : LeftHandSideExpression ++",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ShiftExpression|ShiftExpression|<<|AdditiveExpression" : [
    752,
    "[IsFunctionDefinition] ShiftExpression : ShiftExpression << AdditiveExpression",
    [
    ]
  ],
  "sec-map.prototype.clear" : [
    2590,
    "Map.prototype.clear",
    [
    ]
  ],
  "sec-math.cosh" : [
    2137,
    "Math.cosh",
    [
    ]
  ],
  "sec-sharedarraybuffer.prototype.grow" : [
    2659,
    "SharedArrayBuffer.prototype.grow",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|;|;|Expression|)|Statement" : [
    1787,
    "[HasCallInTailPosition] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|LeftHandSideExpression|||=|AssignmentExpression" : [
    777,
    "[IsFunctionDefinition] AssignmentExpression : LeftHandSideExpression ||= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Catch|catch|(|CatchParameter|)|Block" : [
    698,
    "[ContainsUndefinedContinueTarget] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-regexpbuiltinexec" : [
    2468,
    "RegExpBuiltinExec",
    [
    ]
  ],
  "sec-global-environment-records-initializebinding-n-v" : [
    1035,
    "InitializeBinding",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseBlock|{|DefaultClause|}" : [
    684,
    "[ContainsUndefinedContinueTarget] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|BreakableStatement|IterationStatement" : [
    1533,
    "[LabelledEvaluation] BreakableStatement : IterationStatement",
    [
    ]
  ],
  "sec-regexpidentifiercodepoint|RegExpIdentifierStart|IdentifierStartChar" : [
    2337,
    "[RegExpIdentifierCodePoint] RegExpIdentifierStart : IdentifierStartChar",
    [
    ]
  ],
  "sec-math.min" : [
    2149,
    "Math.min",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    816,
    "[NamedEvaluation] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    1720,
    "[ContainsArguments] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|GeneratorBody|FunctionBody" : [
    1116,
    "[EvaluateBody] GeneratorBody : FunctionBody",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|ArrayLiteral" : [
    924,
    "[AssignmentTargetType] PrimaryExpression : ArrayLiteral",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassStringDisjunctionContents|ClassString|||ClassStringDisjunctionContents" : [
    2328,
    "[MayContainStrings] ClassStringDisjunctionContents : ClassString | ClassStringDisjunctionContents",
    [
    ]
  ],
  "sec-ordinaryhasproperty" : [
    1097,
    "OrdinaryHasProperty",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Statement|EmptyStatement" : [
    353,
    "[VarDeclaredNames] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-regexpidentifiercodepoints|RegExpIdentifierName|RegExpIdentifierStart" : [
    2335,
    "[RegExpIdentifierCodePoints] RegExpIdentifierName : RegExpIdentifierStart",
    [
    ]
  ],
  "sec-literals-runtime-semantics-evaluation|Literal|BooleanLiteral" : [
    1243,
    "[Evaluation] Literal : BooleanLiteral",
    [
    ]
  ],
  "sec-string.prototype.tostring" : [
    2268,
    "String.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ModuleItem|ImportDeclaration" : [
    491,
    "[VarScopedDeclarations] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    376,
    "[VarDeclaredNames] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiategeneratorfunctionobject|GeneratorDeclaration|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    1648,
    "[InstantiateGeneratorFunctionObject] GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-sharedatablockeventset" : [
    2854,
    "SharedDataBlockEventSet",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|ClassElementList|ClassElementList|ClassElement" : [
    1694,
    "[PrivateBoundIdentifiers] ClassElementList : ClassElementList ClassElement",
    [
    ]
  ],
  "sec-static-semantics-privateboundidentifiers|ClassElementName|PrivateIdentifier" : [
    1690,
    "[PrivateBoundIdentifiers] ClassElementName : PrivateIdentifier",
    [
    ]
  ],
  "sec-date.prototype.setutcfullyear" : [
    2217,
    "Date.prototype.setUTCFullYear",
    [
    ]
  ],
  "sec-static-semantics-propname|FieldDefinition|ClassElementName|Initializer" : [
    1006,
    "[PropName] FieldDefinition : ClassElementName Initializer",
    [
    ]
  ],
  "sec-compiletocharset|NestedClass|[|ClassContents|]" : [
    2419,
    "[CompileToCharSet] NestedClass : [ ClassContents ]",
    [
    ]
  ],
  "sec-asyncblockstart" : [
    2830,
    "AsyncBlockStart",
    [
      2828,
      2829,
      2827
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ClassStaticBlockStatementList|StatementList" : [
    484,
    "[VarScopedDeclarations] ClassStaticBlockStatementList : StatementList",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ModuleItemList|ModuleItemList|ModuleItem" : [
    344,
    "[LexicallyScopedDeclarations] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    670,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ClassExpression|class|ClassTail" : [
    790,
    "[IsFunctionDefinition] ClassExpression : class ClassTail",
    [
    ]
  ],
  "sec-static-semantics-classelementevaluation|ClassElement|MethodDefinition" : [
    1731,
    "[ClassElementEvaluation] ClassElement : MethodDefinition",
    [
    ]
  ],
  "sec-runtime-semantics-catchclauseevaluation|Catch|catch|(|CatchParameter|)|Block" : [
    1550,
    "[CatchClauseEvaluation] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    594,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-asyncgeneratorawaitreturn" : [
    2822,
    "AsyncGeneratorAwaitReturn",
    [
      2821,
      2820
    ]
  ],
  "sec-atomics.waitasync" : [
    2723,
    "Atomics.waitAsync",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|DefaultClause|default|:" : [
    403,
    "[VarDeclaredNames] DefaultClause : default :",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|SuperCall" : [
    1863,
    "[HasCallInTailPosition] CallExpression : SuperCall",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression|AsyncGeneratorExpression|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1660,
    "[InstantiateAsyncGeneratorFunctionExpression] AsyncGeneratorExpression : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|YieldExpression" : [
    1822,
    "[HasCallInTailPosition] AssignmentExpression : YieldExpression",
    [
    ]
  ],
  "sec-performpromiserace" : [
    2774,
    "PerformPromiseRace",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|LeftHandSideExpression|&&=|AssignmentExpression" : [
    986,
    "[AssignmentTargetType] AssignmentExpression : LeftHandSideExpression &&= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-declarationpart|Declaration|LexicalDeclaration" : [
    273,
    "[DeclarationPart] Declaration : LexicalDeclaration",
    [
    ]
  ],
  "sec-global-environment-records-hasthisbinding" : [
    1039,
    "HasThisBinding",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|TryStatement|try|Block|Catch" : [
    477,
    "[VarScopedDeclarations] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-ecmascript-function-objects-construct-argumentslist-newtarget" : [
    1123,
    "[[Construct]]",
    [
    ]
  ],
  "sec-static-semantics-hasdirectsuper|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    1627,
    "[HasDirectSuper] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-compilesubpattern|Term|Assertion" : [
    2348,
    "[CompileSubpattern] Term : Assertion",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    621,
    "[ContainsUndefinedBreakTarget] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-continue-statement-runtime-semantics-evaluation|ContinueStatement|continue|;" : [
    1512,
    "[Evaluation] ContinueStatement : continue ;",
    [
    ]
  ],
  "sec-async-function-constructor-arguments" : [
    2825,
    "AsyncFunction",
    [
    ]
  ],
  "sec-bound-function-exotic-objects-call-thisargument-argumentslist" : [
    1138,
    "[[Call]]",
    [
    ]
  ],
  "sec-static-semantics-boundnames|VariableDeclarationList|VariableDeclarationList|,|VariableDeclaration" : [
    215,
    "[BoundNames] VariableDeclarationList : VariableDeclarationList , VariableDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|ArrayLiteral" : [
    722,
    "[IsFunctionDefinition] PrimaryExpression : ArrayLiteral",
    [
    ]
  ],
  "sec-static-semantics-contains|OptionalChain|OptionalChain|.|IdentifierName" : [
    856,
    "[Contains] OptionalChain : OptionalChain . IdentifierName",
    [
    ]
  ],
  "sec-keyforsymbol" : [
    2101,
    "KeyForSymbol",
    [
    ]
  ],
  "sec-dataview-buffer-byteoffset-bytelength" : [
    2668,
    "DataView",
    [
    ]
  ],
  "sec-backreference-matcher" : [
    2383,
    "BackreferenceMatcher",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseBlock|{|}" : [
    322,
    "[LexicallyScopedDeclarations] CaseBlock : { }",
    [
    ]
  ],
  "sec-get-set.prototype.size" : [
    2611,
    "get Set.prototype.size",
    [
    ]
  ],
  "sec-compiletocharset|ClassSubtraction|ClassSubtraction|--|ClassSetOperand" : [
    2414,
    "[CompileToCharSet] ClassSubtraction : ClassSubtraction -- ClassSetOperand",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|ArrowParameters|CoverParenthesizedExpressionAndArrowParameterList" : [
    1593,
    "[IsSimpleParameterList] ArrowParameters : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|MemberExpression|.|IdentifierName" : [
    1481,
    "[IsDestructuring] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-compiletocharset|ClassStringDisjunctionContents|ClassString|||ClassStringDisjunctionContents" : [
    2424,
    "[CompileToCharSet] ClassStringDisjunctionContents : ClassString | ClassStringDisjunctionContents",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|ContinueStatement" : [
    1771,
    "[HasCallInTailPosition] Statement : ContinueStatement",
    [
    ]
  ],
  "sec-typedarray-getownproperty" : [
    1161,
    "[[GetOwnProperty]]",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|-|UnaryExpression" : [
    1859,
    "[HasCallInTailPosition] UnaryExpression : - UnaryExpression",
    [
    ]
  ],
  "sec-get-%typedarray%.prototype.bytelength" : [
    2536,
    "get TypedArray.prototype.byteLength",
    [
    ]
  ],
  "sec-runtime-semantics-propertydefinitionevaluation|PropertyDefinitionList|PropertyDefinitionList|,|PropertyDefinition" : [
    1273,
    "[PropertyDefinitionEvaluation] PropertyDefinitionList : PropertyDefinitionList , PropertyDefinition",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|!|UnaryExpression" : [
    1861,
    "[HasCallInTailPosition] UnaryExpression : ! UnaryExpression",
    [
    ]
  ],
  "sec-weakset.prototype.add" : [
    2622,
    "WeakSet.prototype.add",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|AssignmentElementList|]" : [
    1400,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ AssignmentElementList ]",
    [
    ]
  ],
  "sec-statement-semantics-runtime-semantics-evaluation|BreakableStatement|SwitchStatement" : [
    1427,
    "[Evaluation] BreakableStatement : SwitchStatement",
    [
    ]
  ],
  "sec-string.prototype.split" : [
    2264,
    "String.prototype.split",
    [
    ]
  ],
  "sec-tobigint" : [
    29,
    "ToBigInt",
    [
    ]
  ],
  "sec-static-semantics-propname|FieldDefinition|ClassElementName" : [
    1005,
    "[PropName] FieldDefinition : ClassElementName",
    [
    ]
  ],
  "sec-numeric-types-bigint-lessThan" : [
    79,
    "BigInt::lessThan",
    [
    ]
  ],
  "sec-numericvalue|NumericLiteral|NonDecimalIntegerLiteral" : [
    1218,
    "[NumericValue] NumericLiteral : NonDecimalIntegerLiteral",
    [
    ]
  ],
  "sec-modulenamespacecreate" : [
    1188,
    "ModuleNamespaceCreate",
    [
    ]
  ],
  "sec-source-text-module-record-execute-module" : [
    1947,
    "ExecuteModule",
    [
    ]
  ],
  "sec-stringcreate" : [
    1148,
    "StringCreate",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    1779,
    "[HasCallInTailPosition] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    1476,
    "[ForLoopEvaluation] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|SuperProperty" : [
    1483,
    "[IsDestructuring] MemberExpression : SuperProperty",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|BindingRestElement|...|BindingPattern" : [
    904,
    "[IteratorBindingInitialization] BindingRestElement : ... BindingPattern",
    [
    ]
  ],
  "sec-compileatom|AtomEscape|CharacterEscape" : [
    2379,
    "[CompileAtom] AtomEscape : CharacterEscape",
    [
    ]
  ],
  "sec-get-regexp.prototype.ignorecase" : [
    2453,
    "get RegExp.prototype.ignoreCase",
    [
    ]
  ],
  "sec-static-semantics-hasdirectsuper|AsyncGeneratorMethod|async|*|ClassElementName|(|UniqueFormalParameters|)|{|AsyncGeneratorBody|}" : [
    1631,
    "[HasDirectSuper] AsyncGeneratorMethod : async * ClassElementName ( UniqueFormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-localtime" : [
    2179,
    "LocalTime",
    [
    ]
  ],
  "sec-getmodifysetvalueinbuffer" : [
    2642,
    "GetModifySetValueInBuffer",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|ClassElementList|ClassElementList|ClassElement" : [
    865,
    "[ComputedPropertyContains] ClassElementList : ClassElementList ClassElement",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|AssignmentElementList|,|AssignmentRestElement|]" : [
    1402,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ AssignmentElementList , AssignmentRestElement ]",
    [
    ]
  ],
  "sec-escaperegexppattern" : [
    2460,
    "EscapeRegExpPattern",
    [
    ]
  ],
  "sec-let-and-const-declarations-runtime-semantics-evaluation|LexicalBinding|BindingPattern|Initializer" : [
    1436,
    "[Evaluation] LexicalBinding : BindingPattern Initializer",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver" : [
    1199,
    "[[Set]]",
    [
    ]
  ],
  "sec-weakset-iterable" : [
    2621,
    "WeakSet",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|FormalParameters|FunctionRestParameter" : [
    1602,
    "[ExpectedArgumentCount] FormalParameters : FunctionRestParameter",
    [
    ]
  ],
  "sec-generatorvalidate" : [
    2796,
    "GeneratorValidate",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    475,
    "[VarScopedDeclarations] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|OptionalChain|?.|PrivateIdentifier" : [
    1684,
    "[AllPrivateIdentifiersValid] OptionalChain : ?. PrivateIdentifier",
    [
    ]
  ],
  "sec-string-constructor-string-value" : [
    2235,
    "String",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|StatementList|StatementList|StatementListItem" : [
    361,
    "[VarDeclaredNames] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportFromClause|*" : [
    1988,
    "[ExportedNames] ExportFromClause : *",
    [
    ]
  ],
  "sec-static-semantics-contains|GeneratorDeclaration|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    831,
    "[Contains] GeneratorDeclaration : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    304,
    "[LexicallyDeclaredNames] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    1474,
    "[ForLoopEvaluation] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-grouping-operator-runtime-semantics-evaluation|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    1298,
    "[Evaluation] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-tozeropaddeddecimalstring" : [
    2257,
    "ToZeroPaddedDecimalString",
    [
    ]
  ],
  "sec-promise-reject-functions" : [
    2749,
    "yet:PromiseRejectFunction",
    [
    ]
  ],
  "sec-math.round" : [
    2151,
    "Math.round",
    [
    ]
  ],
  "sec-property-accessors-runtime-semantics-evaluation|MemberExpression|MemberExpression|.|IdentifierName" : [
    1301,
    "[Evaluation] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-string.prototype.matchall" : [
    2251,
    "String.prototype.matchAll",
    [
    ]
  ],
  "sec-runtime-semantics-unicodematchproperty-p" : [
    2435,
    "UnicodeMatchProperty",
    [
    ]
  ],
  "sec-set-immutable-prototype" : [
    1190,
    "SetImmutablePrototype",
    [
    ]
  ],
  "sec-candeclareglobalfunction" : [
    1047,
    "CanDeclareGlobalFunction",
    [
    ]
  ],
  "sec-number.isnan" : [
    2110,
    "Number.isNaN",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|ContinueStatement" : [
    577,
    "[ContainsUndefinedBreakTarget] Statement : ContinueStatement",
    [
    ]
  ],
  "sec-performpromiseany" : [
    2771,
    "PerformPromiseAny",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|ImportClause|ImportedDefaultBinding|,|NamedImports" : [
    1962,
    "[ImportEntriesForModule] ImportClause : ImportedDefaultBinding , NamedImports",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncGeneratorExpression|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    838,
    "[Contains] AsyncGeneratorExpression : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-error-message" : [
    2102,
    "Error",
    [
    ]
  ],
  "sec-arraybuffer.prototype.resize" : [
    2650,
    "ArrayBuffer.prototype.resize",
    [
    ]
  ],
  "sec-getidentifierreference" : [
    1054,
    "GetIdentifierReference",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UpdateExpression|LeftHandSideExpression|--" : [
    737,
    "[IsFunctionDefinition] UpdateExpression : LeftHandSideExpression --",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|EqualityExpression|EqualityExpression|!=|RelationalExpression" : [
    1834,
    "[HasCallInTailPosition] EqualityExpression : EqualityExpression != RelationalExpression",
    [
    ]
  ],
  "sec-generator.prototype.next" : [
    2790,
    "GeneratorFunction.prototype.prototype.next",
    [
    ]
  ],
  "sec-get-regexp.prototype.unicodesets" : [
    2466,
    "get RegExp.prototype.unicodeSets",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|BindingIdentifier|yield" : [
    1230,
    "[StringValue] BindingIdentifier : yield",
    [
    ]
  ],
  "sec-binary-logical-operators-runtime-semantics-evaluation|CoalesceExpression|CoalesceExpressionHead|??|BitwiseORExpression" : [
    1382,
    "[Evaluation] CoalesceExpression : CoalesceExpressionHead ?? BitwiseORExpression",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingPropertyList|BindingPropertyList|,|BindingProperty" : [
    1567,
    "[ContainsExpression] BindingPropertyList : BindingPropertyList , BindingProperty",
    [
    ]
  ],
  "sec-date.prototype.toutcstring" : [
    2232,
    "Date.prototype.toUTCString",
    [
    ]
  ],
  "sec-getutcepochnanoseconds" : [
    2174,
    "GetUTCEpochNanoseconds",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|ExpressionStatement" : [
    640,
    "[ContainsUndefinedContinueTarget] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-validatenonrevokedproxy" : [
    1204,
    "ValidateNonRevokedProxy",
    [
    ]
  ],
  "sec-object.prototype.__lookupGetter__" : [
    2080,
    "Object.prototype.__lookupGetter__",
    [
    ]
  ],
  "sec-compiletocharset|ClassUnion|ClassSetOperand" : [
    2409,
    "[CompileToCharSet] ClassUnion : ClassSetOperand",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|;|Expression|;|)|Statement" : [
    590,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-typedarraylength" : [
    1171,
    "TypedArrayLength",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseClause|case|Expression|:" : [
    471,
    "[VarScopedDeclarations] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|BindingRestElement|...|BindingIdentifier" : [
    903,
    "[IteratorBindingInitialization] BindingRestElement : ... BindingIdentifier",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|ConciseBody|ExpressionBody" : [
    1115,
    "[EvaluateBody] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|GeneratorMethod|*|ClassElementName|(|UniqueFormalParameters|)|{|GeneratorBody|}" : [
    1722,
    "[ContainsArguments] GeneratorMethod : * ClassElementName ( UniqueFormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-promise.prototype.then" : [
    2786,
    "Promise.prototype.then",
    [
    ]
  ],
  "sec-regexp.prototype-@@split" : [
    2461,
    "RegExp.prototype[@@split]",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|FunctionStatementList" : [
    481,
    "[VarScopedDeclarations] FunctionStatementList :",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MultiplicativeExpression|MultiplicativeExpression|MultiplicativeOperator|ExponentiationExpression" : [
    749,
    "[IsFunctionDefinition] MultiplicativeExpression : MultiplicativeExpression MultiplicativeOperator ExponentiationExpression",
    [
    ]
  ],
  "sec-msfromtime" : [
    2173,
    "msFromTime",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|LeftHandSideExpression|OptionalExpression" : [
    815,
    "[IsIdentifierRef] LeftHandSideExpression : OptionalExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|typeof|UnaryExpression" : [
    1857,
    "[HasCallInTailPosition] UnaryExpression : typeof UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|BreakStatement" : [
    515,
    "[ContainsDuplicateLabels] Statement : BreakStatement",
    [
    ]
  ],
  "sec-compileclasssetstring|NonEmptyClassString|ClassSetCharacter|NonEmptyClassString" : [
    2440,
    "[CompileClassSetString] NonEmptyClassString : ClassSetCharacter NonEmptyClassString",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|BitwiseXORExpression|BitwiseXORExpression|^|BitwiseANDExpression" : [
    1831,
    "[HasCallInTailPosition] BitwiseXORExpression : BitwiseXORExpression ^ BitwiseANDExpression",
    [
    ]
  ],
  "sec-getsubstitution" : [
    2260,
    "GetSubstitution",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|ArrowFunction|ArrowParameters|=>|ConciseBody" : [
    822,
    "[NamedEvaluation] ArrowFunction : ArrowParameters => ConciseBody",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|ThrowStatement" : [
    643,
    "[ContainsUndefinedContinueTarget] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateordinaryfunctionexpression|FunctionExpression|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    1615,
    "[InstantiateOrdinaryFunctionExpression] FunctionExpression : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|DebuggerStatement" : [
    1548,
    "[LabelledEvaluation] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ModuleItemList|ModuleItemList|ModuleItem" : [
    2001,
    "[ExportEntries] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-declarative-environment-records-hasthisbinding" : [
    1015,
    "HasThisBinding",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|CoverParenthesizedExpressionAndArrowParameterList" : [
    805,
    "[IsIdentifierRef] PrimaryExpression : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|;|;|Expression|)|Statement" : [
    1462,
    "[ForLoopEvaluation] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|await|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    677,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for await ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-addrestrictedfunctionproperties" : [
    1125,
    "AddRestrictedFunctionProperties",
    [
    ]
  ],
  "sec-toboolean" : [
    30,
    "ToBoolean",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    522,
    "[ContainsDuplicateLabels] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-math.imul" : [
    2143,
    "Math.imul",
    [
    ]
  ],
  "sec-runtime-semantics-keyeddestructuringassignmentevaluation|AssignmentElement|DestructuringAssignmentTarget|Initializer" : [
    1420,
    "[KeyedDestructuringAssignmentEvaluation] AssignmentElement : DestructuringAssignmentTarget Initializer",
    [
    ]
  ],
  "sec-array.from" : [
    2478,
    "Array.from",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|?.|PrivateIdentifier" : [
    1333,
    "[ChainEvaluation] OptionalChain : ?. PrivateIdentifier",
    [
    ]
  ],
  "sec-function-definitions-runtime-semantics-evaluation|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    1616,
    "[Evaluation] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-leavecriticalsection" : [
    2698,
    "LeaveCriticalSection",
    [
    ]
  ],
  "sec-typedarray-get" : [
    1164,
    "[[Get]]",
    [
    ]
  ],
  "sec-runtime-semantics-methoddefinitionevaluation|MethodDefinition|ClassElementName|(|UniqueFormalParameters|)|{|FunctionBody|}" : [
    1640,
    "[MethodDefinitionEvaluation] MethodDefinition : ClassElementName ( UniqueFormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-regexpidentifiercodepoint|RegExpIdentifierPart|IdentifierPartChar" : [
    2338,
    "[RegExpIdentifierCodePoint] RegExpIdentifierPart : IdentifierPartChar",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|FunctionStatementList|StatementList" : [
    336,
    "[LexicallyScopedDeclarations] FunctionStatementList : StatementList",
    [
    ]
  ],
  "sec-object-environment-records-deletebinding-n" : [
    1023,
    "DeleteBinding",
    [
    ]
  ],
  "sec-iscompatiblepropertydescriptor" : [
    1094,
    "IsCompatiblePropertyDescriptor",
    [
    ]
  ],
  "sec-runtime-semantics-haseitherunicodeflag-abstract-operation" : [
    2430,
    "HasEitherUnicodeFlag",
    [
    ]
  ],
  "sec-runtime-semantics-forin-div-ofbodyevaluation-lhs-stmt-iterator-lhskind-labelset" : [
    1505,
    "ForIn/OfBodyEvaluation",
    [
    ]
  ],
  "sec-regexpidentifiercodepoint|RegExpIdentifierPart|UnicodeLeadSurrogate|UnicodeTrailSurrogate" : [
    2342,
    "[RegExpIdentifierCodePoint] RegExpIdentifierPart : UnicodeLeadSurrogate UnicodeTrailSurrogate",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    2022,
    "[Evaluation] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-typedarray-ownpropertykeys" : [
    1167,
    "[[OwnPropertyKeys]]",
    [
    ]
  ],
  "sec-date.prototype.setminutes" : [
    2212,
    "Date.prototype.setMinutes",
    [
    ]
  ],
  "sec-numeric-types-bigint-remainder" : [
    74,
    "BigInt::remainder",
    [
    ]
  ],
  "sec-static-semantics-boundnames|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    240,
    "[BoundNames] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ShiftExpression|ShiftExpression|>>>|AdditiveExpression" : [
    754,
    "[IsFunctionDefinition] ShiftExpression : ShiftExpression >>> AdditiveExpression",
    [
    ]
  ],
  "sec-function.prototype.tostring" : [
    10,
    "Function.prototype.toString",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|.|DecimalDigits" : [
    126,
    "[StringNumericValue] StrUnsignedDecimalLiteral : . DecimalDigits",
    [
    ]
  ],
  "sec-for-in-and-for-of-statements-runtime-semantics-evaluation|BindingIdentifier|await" : [
    1508,
    "[Evaluation] BindingIdentifier : await",
    [
    ]
  ],
  "sec-static-semantics-exportentriesformodule|ExportsList|ExportsList|,|ExportSpecifier" : [
    2014,
    "[ExportEntriesForModule] ExportsList : ExportsList , ExportSpecifier",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|LabelledItem|FunctionDeclaration" : [
    334,
    "[LexicallyScopedDeclarations] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncgeneratorfunctionobject|AsyncGeneratorDeclaration|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1657,
    "[InstantiateAsyncGeneratorFunctionObject] AsyncGeneratorDeclaration : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|ArrowFunction" : [
    1823,
    "[HasCallInTailPosition] AssignmentExpression : ArrowFunction",
    [
    ]
  ],
  "sec-newglobalenvironment" : [
    1058,
    "NewGlobalEnvironment",
    [
    ]
  ],
  "sec-availablenamedtimezoneidentifiers" : [
    2177,
    "AvailableNamedTimeZoneIdentifiers",
    [
    ]
  ],
  "sec-static-semantics-propname|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    998,
    "[PropName] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-isdetachedbuffer" : [
    2628,
    "IsDetachedBuffer",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ClassStaticBlockStatementList" : [
    413,
    "[VarDeclaredNames] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportsList|ExportsList|,|ExportSpecifier" : [
    1997,
    "[ExportedNames] ExportsList : ExportsList , ExportSpecifier",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|MemberExpression|TemplateLiteral" : [
    1482,
    "[IsDestructuring] MemberExpression : MemberExpression TemplateLiteral",
    [
    ]
  ],
  "sec-compileatom|Atom|CharacterClass" : [
    2374,
    "[CompileAtom] Atom : CharacterClass",
    [
    ]
  ],
  "sec-async-function-definitions-runtime-semantics-evaluation|AwaitExpression|await|UnaryExpression" : [
    1757,
    "[Evaluation] AwaitExpression : await UnaryExpression",
    [
    ]
  ],
  "sec-ordinarypreventextensions" : [
    1089,
    "OrdinaryPreventExtensions",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|Identifier|IdentifierName" : [
    1235,
    "[StringValue] Identifier : IdentifierName",
    [
    ]
  ],
  "sec-module-semantics-runtime-semantics-evaluation|ModuleBody|ModuleItemList" : [
    1952,
    "[Evaluation] ModuleBody : ModuleItemList",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|NamedExports|{|}" : [
    1979,
    "[ExportedBindings] NamedExports : { }",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|AsyncFunctionDeclaration|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    283,
    "[IsConstantDeclaration] AsyncFunctionDeclaration : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-%regexpstringiteratorprototype%.next" : [
    2476,
    "RegExpStringIteratorPrototype.next",
    [
    ]
  ],
  "sec-reflect.deleteproperty" : [
    2840,
    "Reflect.deleteProperty",
    [
    ]
  ],
  "sec-matchtwoalternatives" : [
    2353,
    "MatchTwoAlternatives",
    [
    ]
  ],
  "sec-string.prototype.padend" : [
    2253,
    "String.prototype.padEnd",
    [
    ]
  ],
  "sec-static-semantics-prototypepropertynamelist|ClassElementList|ClassElementList|ClassElement" : [
    1680,
    "[PrototypePropertyNameList] ClassElementList : ClassElementList ClassElement",
    [
    ]
  ],
  "sec-promise.any-reject-element-functions" : [
    2772,
    "yet:`Promise.any`RejectElementFunction",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetOperand|ClassSetCharacter" : [
    2416,
    "[CompileToCharSet] ClassSetOperand : ClassSetCharacter",
    [
    ]
  ],
  "sec-%typedarray%.prototype.foreach" : [
    2547,
    "TypedArray.prototype.forEach",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    661,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-propname|ClassElement|ClassStaticBlock" : [
    1002,
    "[PropName] ClassElement : ClassStaticBlock",
    [
    ]
  ],
  "sec-%mapiteratorprototype%.next" : [
    2602,
    "MapIteratorPrototype.next",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|ObjectBindingPattern|{|BindingPropertyList|,|}" : [
    886,
    "[BindingInitialization] ObjectBindingPattern : { BindingPropertyList , }",
    [
    ]
  ],
  "sec-functiondeclarationinstantiation" : [
    1133,
    "FunctionDeclarationInstantiation",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|FunctionExpression" : [
    926,
    "[AssignmentTargetType] PrimaryExpression : FunctionExpression",
    [
    ]
  ],
  "sec-static-semantics-iscomputedpropertykey|PropertyName|ComputedPropertyName" : [
    1263,
    "[IsComputedPropertyKey] PropertyName : ComputedPropertyName",
    [
    ]
  ],
  "sec-static-semantics-toplevellexicallyscopeddeclarations|StatementListItem|Declaration" : [
    498,
    "[TopLevelLexicallyScopedDeclarations] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-async-module-execution-rejected" : [
    1942,
    "AsyncModuleExecutionRejected",
    [
    ]
  ],
  "sec-function-definitions-runtime-semantics-evaluation|FunctionExpression|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    1619,
    "[Evaluation] FunctionExpression : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-generatoryield" : [
    2803,
    "GeneratorYield",
    [
      2802
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|TryStatement|try|Block|Catch" : [
    565,
    "[ContainsDuplicateLabels] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ClassStaticBlockStatementList" : [
    483,
    "[VarScopedDeclarations] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ObjectBindingPattern|{|BindingPropertyList|,|BindingRestProperty|}" : [
    1558,
    "[ContainsExpression] ObjectBindingPattern : { BindingPropertyList , BindingRestProperty }",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|AsyncArrowFunction|CoverCallExpressionAndAsyncArrowHead|=>|AsyncConciseBody" : [
    824,
    "[NamedEvaluation] AsyncArrowFunction : CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody",
    [
    ]
  ],
  "sec-static-semantics-propname|GeneratorMethod|*|ClassElementName|(|UniqueFormalParameters|)|{|GeneratorBody|}" : [
    1000,
    "[PropName] GeneratorMethod : * ClassElementName ( UniqueFormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-asyncfromsynciteratorcontinuation" : [
    2747,
    "AsyncFromSyncIteratorContinuation",
    [
      2746
    ]
  ],
  "sec-static-semantics-stringvalue|ModuleExportName|StringLiteral" : [
    1237,
    "[StringValue] ModuleExportName : StringLiteral",
    [
    ]
  ],
  "sec-date.prototype.setmilliseconds" : [
    2211,
    "Date.prototype.setMilliseconds",
    [
    ]
  ],
  "sec-runtime-semantics-classdefinitionevaluation|ClassTail|{|}" : [
    1736,
    "[ClassDefinitionEvaluation] ClassTail : { }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    1810,
    "[HasCallInTailPosition] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    674,
    "[ContainsUndefinedContinueTarget] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p" : [
    1197,
    "[[HasProperty]]",
    [
    ]
  ],
  "sec-patterns-static-semantics-is-character-class|ClassEscape|CharacterEscape" : [
    2287,
    "[IsCharacterClass] ClassEscape : CharacterEscape",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|LeftHandSideExpression|CallExpression" : [
    1488,
    "[IsDestructuring] LeftHandSideExpression : CallExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    1804,
    "[HasCallInTailPosition] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Block|{|}" : [
    1775,
    "[HasCallInTailPosition] Block : { }",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassSubtraction|ClassSubtraction|--|ClassSetOperand" : [
    2327,
    "[MayContainStrings] ClassSubtraction : ClassSubtraction -- ClassSetOperand",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|typeof|UnaryExpression" : [
    742,
    "[IsFunctionDefinition] UnaryExpression : typeof UnaryExpression",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|BlockStatement" : [
    1537,
    "[LabelledEvaluation] Statement : BlockStatement",
    [
    ]
  ],
  "sec-get-dataview.prototype.bytelength" : [
    2670,
    "get DataView.prototype.byteLength",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|StatementList|StatementList|StatementListItem" : [
    1765,
    "[HasCallInTailPosition] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|LetOrConst|const" : [
    276,
    "[IsConstantDeclaration] LetOrConst : const",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    545,
    "[ContainsDuplicateLabels] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-declarative-environment-records-getbindingvalue-n-s" : [
    1013,
    "GetBindingValue",
    [
    ]
  ],
  "sec-runtime-semantics-loopevaluation|IterationStatement|ForStatement" : [
    1457,
    "[LoopEvaluation] IterationStatement : ForStatement",
    [
    ]
  ],
  "sec-weakmap.prototype.get" : [
    2618,
    "WeakMap.prototype.get",
    [
    ]
  ],
  "sec-map.prototype.values" : [
    2599,
    "Map.prototype.values",
    [
    ]
  ],
  "sec-%typedarray%.prototype.reduce" : [
    2555,
    "TypedArray.prototype.reduce",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ConciseBody|ExpressionBody" : [
    415,
    "[VarDeclaredNames] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-tointegerorinfinity" : [
    131,
    "ToIntegerOrInfinity",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|ReturnStatement" : [
    426,
    "[VarScopedDeclarations] Statement : ReturnStatement",
    [
    ]
  ],
  "sec-static-semantics-contains|LiteralPropertyName|IdentifierName" : [
    851,
    "[Contains] LiteralPropertyName : IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ReturnStatement|return|;" : [
    1776,
    "[HasCallInTailPosition] ReturnStatement : return ;",
    [
    ]
  ],
  "sec-compileassertion|Assertion|\\B" : [
    2358,
    "[CompileAssertion] Assertion : \\B",
    [
    ]
  ],
  "sec-patterns-static-semantics-capturing-group-number|DecimalEscape|NonZeroDigit" : [
    2281,
    "[CapturingGroupNumber] DecimalEscape : NonZeroDigit",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|LeftHandSideExpression|=|AssignmentExpression" : [
    984,
    "[AssignmentTargetType] AssignmentExpression : LeftHandSideExpression = AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|AsyncArrowFunction" : [
    781,
    "[IsFunctionDefinition] AssignmentExpression : AsyncArrowFunction",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingIdentifier|Identifier" : [
    207,
    "[BoundNames] BindingIdentifier : Identifier",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|IdentifierReference|Identifier" : [
    1702,
    "[ContainsArguments] IdentifierReference : Identifier",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|VariableDeclarationList|VariableDeclarationList|,|VariableDeclaration" : [
    433,
    "[VarScopedDeclarations] VariableDeclarationList : VariableDeclarationList , VariableDeclaration",
    [
    ]
  ],
  "sec-set.prototype.entries" : [
    2608,
    "Set.prototype.entries",
    [
    ]
  ],
  "sec-static-semantics-toplevellexicallydeclarednames|StatementList|StatementList|StatementListItem" : [
    493,
    "[TopLevelLexicallyDeclaredNames] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    1793,
    "[HasCallInTailPosition] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    448,
    "[VarScopedDeclarations] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ClassStaticBlockStatementList" : [
    309,
    "[LexicallyDeclaredNames] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-block-runtime-semantics-evaluation|Block|{|StatementList|}" : [
    1429,
    "[Evaluation] Block : { StatementList }",
    [
    ]
  ],
  "sec-speciesconstructor" : [
    181,
    "SpeciesConstructor",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|DebuggerStatement" : [
    1774,
    "[HasCallInTailPosition] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|BindingRestElement|]" : [
    1561,
    "[ContainsExpression] ArrayBindingPattern : [ BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|FunctionStatementList" : [
    633,
    "[ContainsUndefinedBreakTarget] FunctionStatementList :",
    [
    ]
  ],
  "sec-createbytedatablock" : [
    106,
    "CreateByteDataBlock",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetOperand|NestedClass" : [
    2418,
    "[CompileToCharSet] ClassSetOperand : NestedClass",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|OptionalChain|[|Expression|]" : [
    1335,
    "[ChainEvaluation] OptionalChain : OptionalChain [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|;|;|Expression|)|Statement" : [
    527,
    "[ContainsDuplicateLabels] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-exportentriesformodule|ExportSpecifier|ModuleExportName" : [
    2015,
    "[ExportEntriesForModule] ExportSpecifier : ModuleExportName",
    [
    ]
  ],
  "sec-runtime-semantics-loopevaluation|IterationStatement|WhileStatement" : [
    1456,
    "[LoopEvaluation] IterationStatement : WhileStatement",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|FormalParameters|FunctionRestParameter" : [
    1588,
    "[IsSimpleParameterList] FormalParameters : FunctionRestParameter",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys" : [
    1201,
    "[[OwnPropertyKeys]]",
    [
    ]
  ],
  "sec-enqueueatomicswaitasynctimeoutjob" : [
    2708,
    "EnqueueAtomicsWaitAsyncTimeoutJob",
    [
      2707
    ]
  ],
  "sec-static-semantics-vardeclarednames|VariableStatement|var|VariableDeclarationList|;" : [
    363,
    "[VarDeclaredNames] VariableStatement : var VariableDeclarationList ;",
    [
    ]
  ],
  "sec-stringgetownproperty" : [
    1149,
    "StringGetOwnProperty",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ClassStaticBlockStatementList" : [
    337,
    "[LexicallyScopedDeclarations] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|RelationalExpression|<=|ShiftExpression" : [
    757,
    "[IsFunctionDefinition] RelationalExpression : RelationalExpression <= ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|ThrowStatement" : [
    427,
    "[VarScopedDeclarations] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-static-semantics-declarationpart|HoistableDeclaration|AsyncGeneratorDeclaration" : [
    271,
    "[DeclarationPart] HoistableDeclaration : AsyncGeneratorDeclaration",
    [
    ]
  ],
  "sec-identifiercodepoint|UnicodeEscapeSequence|u{|CodePoint|}" : [
    1216,
    "[IdentifierCodePoint] UnicodeEscapeSequence : u{ CodePoint }",
    [
    ]
  ],
  "sec-ordinarysetprototypeof" : [
    1085,
    "OrdinarySetPrototypeOf",
    [
    ]
  ],
  "sec-atomics.add" : [
    2713,
    "Atomics.add",
    [
    ]
  ],
  "sec-array.prototype.concat" : [
    2483,
    "Array.prototype.concat",
    [
    ]
  ],
  "sec-string.prototype.padstart" : [
    2254,
    "String.prototype.padStart",
    [
    ]
  ],
  "sec-entercriticalsection" : [
    2697,
    "EnterCriticalSection",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AssignmentExpression|LeftHandSideExpression|=|AssignmentExpression" : [
    1825,
    "[HasCallInTailPosition] AssignmentExpression : LeftHandSideExpression = AssignmentExpression",
    [
    ]
  ],
  "sec-%typedarray%.prototype.reduceright" : [
    2556,
    "TypedArray.prototype.reduceRight",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StringNumericLiteral" : [
    113,
    "[StringNumericValue] StringNumericLiteral :",
    [
    ]
  ],
  "sec-static-semantics-referencedbindings|ModuleExportName|IdentifierName" : [
    2020,
    "[ReferencedBindings] ModuleExportName : IdentifierName",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    1799,
    "[HasCallInTailPosition] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|ReturnStatement" : [
    578,
    "[ContainsUndefinedBreakTarget] Statement : ReturnStatement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|RelationalExpression|instanceof|ShiftExpression" : [
    967,
    "[AssignmentTargetType] RelationalExpression : RelationalExpression instanceof ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-toplevelvardeclarednames|StatementList|StatementList|StatementListItem" : [
    499,
    "[TopLevelVarDeclaredNames] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-get-%typedarray%.prototype.byteoffset" : [
    2537,
    "get TypedArray.prototype.byteOffset",
    [
    ]
  ],
  "sec-static-semantics-templatestrings|TemplateMiddleList|TemplateMiddle|Expression" : [
    1284,
    "[TemplateStrings] TemplateMiddleList : TemplateMiddle Expression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|TryStatement|try|Block|Catch|Finally" : [
    631,
    "[ContainsUndefinedBreakTarget] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-asyncgeneratorstart" : [
    2811,
    "AsyncGeneratorStart",
    [
      2810,
      2809
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|LabelledItem|FunctionDeclaration" : [
    694,
    "[ContainsUndefinedContinueTarget] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-bindthisvalue" : [
    1027,
    "BindThisValue",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    377,
    "[VarDeclaredNames] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-let-and-const-declarations-runtime-semantics-evaluation|LexicalDeclaration|LetOrConst|BindingList|;" : [
    1432,
    "[Evaluation] LexicalDeclaration : LetOrConst BindingList ;",
    [
    ]
  ],
  "sec-comparearrayelements" : [
    2516,
    "CompareArrayElements",
    [
    ]
  ],
  "sec-validateandapplypropertydescriptor" : [
    1095,
    "ValidateAndApplyPropertyDescriptor",
    [
    ]
  ],
  "sec-number.prototype.tofixed" : [
    2113,
    "Number.prototype.toFixed",
    [
    ]
  ],
  "sec-runtime-semantics-caseblockevaluation|CaseBlock|{|}" : [
    1519,
    "[CaseBlockEvaluation] CaseBlock : { }",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|AsyncArrowBindingIdentifier|BindingIdentifier" : [
    1594,
    "[IsSimpleParameterList] AsyncArrowBindingIdentifier : BindingIdentifier",
    [
    ]
  ],
  "sec-numbertobigint" : [
    2119,
    "NumberToBigInt",
    [
    ]
  ],
  "sec-assignment-operators-runtime-semantics-evaluation|AssignmentExpression|LeftHandSideExpression|AssignmentOperator|AssignmentExpression" : [
    1385,
    "[Evaluation] AssignmentExpression : LeftHandSideExpression AssignmentOperator AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-exportentriesformodule|ExportFromClause|*" : [
    2011,
    "[ExportEntriesForModule] ExportFromClause : *",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncgeneratorfunctionexpression|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1659,
    "[InstantiateAsyncGeneratorFunctionExpression] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-get-%typedarray%.prototype-@@tostringtag" : [
    2571,
    "get TypedArray.prototype[@@toStringTag]",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseClauses|CaseClauses|CaseClause" : [
    299,
    "[LexicallyDeclaredNames] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-toint32" : [
    132,
    "ToInt32",
    [
    ]
  ],
  "sec-createglobalvarbinding" : [
    1048,
    "CreateGlobalVarBinding",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|ReturnStatement" : [
    642,
    "[ContainsUndefinedContinueTarget] Statement : ReturnStatement",
    [
    ]
  ],
  "sec-ContinueDynamicImport" : [
    1342,
    "ContinueDynamicImport",
    [
      1340,
      1341,
      1339
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|LeftHandSideExpression|AssignmentOperator|AssignmentExpression" : [
    985,
    "[AssignmentTargetType] AssignmentExpression : LeftHandSideExpression AssignmentOperator AssignmentExpression",
    [
    ]
  ],
  "sec-removewaiters" : [
    2701,
    "RemoveWaiters",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|-|UnaryExpression" : [
    744,
    "[IsFunctionDefinition] UnaryExpression : - UnaryExpression",
    [
    ]
  ],
  "sec-matchsequence" : [
    2354,
    "MatchSequence",
    [
    ]
  ],
  "sec-regexp.prototype-@@match" : [
    2454,
    "RegExp.prototype[@@match]",
    [
    ]
  ],
  "sec-numericvalue|DecimalBigIntegerLiteral|0|BigIntLiteralSuffix" : [
    1221,
    "[NumericValue] DecimalBigIntegerLiteral : 0 BigIntLiteralSuffix",
    [
    ]
  ],
  "sec-numeric-types-number-sameValueZero" : [
    65,
    "Number::sameValueZero",
    [
    ]
  ],
  "sec-array.prototype.reduce" : [
    2507,
    "Array.prototype.reduce",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|UnaryExpression|!|UnaryExpression" : [
    746,
    "[IsFunctionDefinition] UnaryExpression : ! UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|NestedClass|[^|ClassContents|]" : [
    2315,
    "[MayContainStrings] NestedClass : [^ ClassContents ]",
    [
    ]
  ],
  "sec-static-semantics-concisebodycontainsusestrict|ConciseBody|ExpressionBody" : [
    1621,
    "[ConciseBodyContainsUseStrict] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-typeof-operator-runtime-semantics-evaluation|UnaryExpression|typeof|UnaryExpression" : [
    1353,
    "[Evaluation] UnaryExpression : typeof UnaryExpression",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|ReturnStatement" : [
    1544,
    "[LabelledEvaluation] Statement : ReturnStatement",
    [
    ]
  ],
  "sec-runtime-semantics-substitutionevaluation|TemplateMiddleList|TemplateMiddleList|TemplateMiddle|Expression" : [
    1291,
    "[SubstitutionEvaluation] TemplateMiddleList : TemplateMiddleList TemplateMiddle Expression",
    [
    ]
  ],
  "sec-string.prototype.slice" : [
    2263,
    "String.prototype.slice",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ImportDeclaration|import|ImportClause|FromClause|;" : [
    254,
    "[BoundNames] ImportDeclaration : import ImportClause FromClause ;",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|ImportCall" : [
    1864,
    "[HasCallInTailPosition] CallExpression : ImportCall",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportDeclaration|export|NamedExports|;" : [
    1973,
    "[ExportedBindings] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-static-semantics-toplevellexicallyscopeddeclarations|StatementList|StatementList|StatementListItem" : [
    496,
    "[TopLevelLexicallyScopedDeclarations] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-hasinitializer|BindingElement|BindingPattern" : [
    1596,
    "[HasInitializer] BindingElement : BindingPattern",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|VariableStatement" : [
    511,
    "[ContainsDuplicateLabels] Statement : VariableStatement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|StatementListItem|Declaration" : [
    520,
    "[ContainsDuplicateLabels] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-privatefieldadd" : [
    186,
    "PrivateFieldAdd",
    [
    ]
  ],
  "sec-runtime-semantics-caseblockevaluation|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    1523,
    "[CaseBlockEvaluation] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-compileclasssetstring|NonEmptyClassString|ClassSetCharacter" : [
    2439,
    "[CompileClassSetString] NonEmptyClassString : ClassSetCharacter",
    [
    ]
  ],
  "sec-datefromtime" : [
    2168,
    "DateFromTime",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingRestElement|...|BindingPattern" : [
    1576,
    "[ContainsExpression] BindingRestElement : ... BindingPattern",
    [
    ]
  ],
  "sec-object.getownpropertydescriptor" : [
    2053,
    "Object.getOwnPropertyDescriptor",
    [
    ]
  ],
  "sec-for-in-and-for-of-statements-runtime-semantics-evaluation|BindingIdentifier|yield" : [
    1507,
    "[Evaluation] BindingIdentifier : yield",
    [
    ]
  ],
  "sec-global-environment-records-createimmutablebinding-n-s" : [
    1034,
    "CreateImmutableBinding",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|RelationalExpression|RelationalExpression|<|ShiftExpression" : [
    755,
    "[IsFunctionDefinition] RelationalExpression : RelationalExpression < ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|TemplateLiteral" : [
    725,
    "[IsFunctionDefinition] PrimaryExpression : TemplateLiteral",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ModuleItem|StatementListItem" : [
    2003,
    "[ExportEntries] ModuleItem : StatementListItem",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|EqualityExpression|EqualityExpression|!=|RelationalExpression" : [
    763,
    "[IsFunctionDefinition] EqualityExpression : EqualityExpression != RelationalExpression",
    [
    ]
  ],
  "sec-date" : [
    2188,
    "Date",
    [
    ]
  ],
  "sec-getstringindex" : [
    2470,
    "GetStringIndex",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncMethod|async|ClassElementName|(|UniqueFormalParameters|)|{|AsyncFunctionBody|}" : [
    1724,
    "[ContainsArguments] AsyncMethod : async ClassElementName ( UniqueFormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-parsehexoctet" : [
    2042,
    "ParseHexOctet",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|ObjectLiteral" : [
    925,
    "[AssignmentTargetType] PrimaryExpression : ObjectLiteral",
    [
    ]
  ],
  "sec-toint16" : [
    134,
    "ToInt16",
    [
    ]
  ],
  "sec-islabelledfunction" : [
    1531,
    "IsLabelledFunction",
    [
    ]
  ],
  "sec-runtime-semantics-caseblockevaluation|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    1524,
    "[CaseBlockEvaluation] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|BindingElement|BindingPattern" : [
    1583,
    "[IsSimpleParameterList] BindingElement : BindingPattern",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Block|{|}" : [
    581,
    "[ContainsUndefinedBreakTarget] Block : { }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|TryStatement|try|Block|Catch" : [
    695,
    "[ContainsUndefinedContinueTarget] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-getgeneratorkind" : [
    2801,
    "GetGeneratorKind",
    [
    ]
  ],
  "sec-date.prototype.getutcseconds" : [
    2207,
    "Date.prototype.getUTCSeconds",
    [
    ]
  ],
  "sec-date.prototype.getutcmilliseconds" : [
    2204,
    "Date.prototype.getUTCMilliseconds",
    [
    ]
  ],
  "sec-compileassertion|Assertion|\\b" : [
    2357,
    "[CompileAssertion] Assertion : \\b",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|CoalesceExpression|CoalesceExpressionHead|??|BitwiseORExpression" : [
    771,
    "[IsFunctionDefinition] CoalesceExpression : CoalesceExpressionHead ?? BitwiseORExpression",
    [
    ]
  ],
  "sec-math.hypot" : [
    2142,
    "Math.hypot",
    [
    ]
  ],
  "sec-getvalue" : [
    95,
    "GetValue",
    [
    ]
  ],
  "sec-static-semantics-toplevelvarscopeddeclarations|LabelledItem|Statement" : [
    509,
    "[TopLevelVarScopedDeclarations] LabelledItem : Statement",
    [
    ]
  ],
  "sec-string.prototype.indexof" : [
    2246,
    "String.prototype.indexOf",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|VariableStatement" : [
    638,
    "[ContainsUndefinedContinueTarget] Statement : VariableStatement",
    [
    ]
  ],
  "sec-patterns-static-semantics-is-character-class|ClassAtomNoDash|SourceCharacter" : [
    2284,
    "[IsCharacterClass] ClassAtomNoDash : SourceCharacter",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|;|Expression|;|)|Statement" : [
    528,
    "[ContainsDuplicateLabels] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|IfStatement|if|(|Expression|)|Statement" : [
    523,
    "[ContainsDuplicateLabels] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|EqualityExpression|EqualityExpression|==|RelationalExpression" : [
    970,
    "[AssignmentTargetType] EqualityExpression : EqualityExpression == RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseClause|case|Expression|:" : [
    328,
    "[LexicallyScopedDeclarations] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-dayfromyear" : [
    2162,
    "DayFromYear",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseClauses|CaseClauses|CaseClause" : [
    470,
    "[VarScopedDeclarations] CaseClauses : CaseClauses CaseClause",
    [
    ]
  ],
  "sec-InnerModuleLinking" : [
    1934,
    "InnerModuleLinking",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|Elision|SpreadElement" : [
    1251,
    "[ArrayAccumulation] ElementList : Elision SpreadElement",
    [
    ]
  ],
  "sec-symbol.prototype.valueof" : [
    2098,
    "Symbol.prototype.valueOf",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|StatementList|StatementList|StatementListItem" : [
    430,
    "[VarScopedDeclarations] StatementList : StatementList StatementListItem",
    [
    ]
  ],
  "sec-runtime-semantics-classstaticblockdefinitionevaluation|ClassStaticBlock|static|{|ClassStaticBlockBody|}" : [
    1727,
    "[ClassStaticBlockDefinitionEvaluation] ClassStaticBlock : static { ClassStaticBlockBody }",
    [
    ]
  ],
  "sec-findviapredicate" : [
    2494,
    "FindViaPredicate",
    [
    ]
  ],
  "sec-%typedarray%.prototype.find" : [
    2543,
    "TypedArray.prototype.find",
    [
    ]
  ],
  "sec-numeric-types-bigint-bitwiseXOR" : [
    86,
    "BigInt::bitwiseXOR",
    [
    ]
  ],
  "sec-return-statement-runtime-semantics-evaluation|ReturnStatement|return|Expression|;" : [
    1517,
    "[Evaluation] ReturnStatement : return Expression ;",
    [
    ]
  ],
  "sec-construct" : [
    173,
    "Construct",
    [
    ]
  ],
  "sec-identifiercodepoint|UnicodeEscapeSequence|u|Hex4Digits" : [
    1215,
    "[IdentifierCodePoint] UnicodeEscapeSequence : u Hex4Digits",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|ExpressionStatement" : [
    1540,
    "[LabelledEvaluation] Statement : ExpressionStatement",
    [
    ]
  ],
  "sec-weakmap-iterable" : [
    2616,
    "WeakMap",
    [
    ]
  ],
  "sec-date.prototype.gettimezoneoffset" : [
    2199,
    "Date.prototype.getTimezoneOffset",
    [
    ]
  ],
  "sec-evaluate-property-access-with-expression-key" : [
    1306,
    "EvaluatePropertyAccessWithExpressionKey",
    [
    ]
  ],
  "sec-compilesubpattern|Alternative|Alternative|Term" : [
    2347,
    "[CompileSubpattern] Alternative : Alternative Term",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|ElementList|,|AssignmentExpression" : [
    1252,
    "[ArrayAccumulation] ElementList : ElementList , AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|BlockStatement" : [
    647,
    "[ContainsUndefinedContinueTarget] Statement : BlockStatement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    1778,
    "[HasCallInTailPosition] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-module-namespace-exotic-objects-ownpropertykeys" : [
    1187,
    "[[OwnPropertyKeys]]",
    [
    ]
  ],
  "sec-number.prototype.tostring" : [
    2115,
    "Number.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|TryStatement|try|Block|Catch" : [
    407,
    "[VarDeclaredNames] TryStatement : try Block Catch",
    [
    ]
  ],
  "sec-function-calls-runtime-semantics-evaluation|CallExpression|CallExpression|Arguments" : [
    1312,
    "[Evaluation] CallExpression : CallExpression Arguments",
    [
    ]
  ],
  "sec-installerrorcause" : [
    2106,
    "InstallErrorCause",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseBlock|{|DefaultClause|}" : [
    466,
    "[VarScopedDeclarations] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-contains|ClassStaticBlock|static|{|ClassStaticBlockBody|}" : [
    845,
    "[Contains] ClassStaticBlock : static { ClassStaticBlockBody }",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ImportDeclaration|import|ModuleSpecifier|;" : [
    255,
    "[BoundNames] ImportDeclaration : import ModuleSpecifier ;",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    788,
    "[IsFunctionDefinition] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-function-definitions-runtime-semantics-evaluation|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    1617,
    "[Evaluation] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-importentries|ImportDeclaration|import|ModuleSpecifier|;" : [
    1960,
    "[ImportEntries] ImportDeclaration : import ModuleSpecifier ;",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ReturnStatement|return|Expression|;" : [
    1807,
    "[HasCallInTailPosition] ReturnStatement : return Expression ;",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|Block|{|}" : [
    290,
    "[LexicallyDeclaredNames] Block : { }",
    [
    ]
  ],
  "sec-prefix-decrement-operator-runtime-semantics-evaluation|UpdateExpression|--|UnaryExpression" : [
    1350,
    "[Evaluation] UpdateExpression : -- UnaryExpression",
    [
    ]
  ],
  "sec-hasvardeclaration" : [
    1043,
    "HasVarDeclaration",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|ImportClause|ImportedDefaultBinding|,|NameSpaceImport" : [
    1961,
    "[ImportEntriesForModule] ImportClause : ImportedDefaultBinding , NameSpaceImport",
    [
    ]
  ],
  "sec-arrow-function-definitions-runtime-semantics-evaluation|ExpressionBody|AssignmentExpression" : [
    1626,
    "[Evaluation] ExpressionBody : AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|await|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    611,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for await ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-numberbitwiseop" : [
    66,
    "NumberBitwiseOp",
    [
    ]
  ],
  "sec-%typedarray%.prototype.sort" : [
    2564,
    "TypedArray.prototype.sort",
    [
      2563
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|DefaultClause|default|:" : [
    625,
    "[ContainsUndefinedBreakTarget] DefaultClause : default :",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|TryStatement|try|Block|Finally" : [
    478,
    "[VarScopedDeclarations] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-static-semantics-isstatic|ClassElement|FieldDefinition|;" : [
    1673,
    "[IsStatic] ClassElement : FieldDefinition ;",
    [
    ]
  ],
  "sec-object.isextensible" : [
    2062,
    "Object.isExtensible",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|LexicalDeclaration|LetOrConst|BindingList|;" : [
    274,
    "[IsConstantDeclaration] LexicalDeclaration : LetOrConst BindingList ;",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassUnion|ClassSetRange" : [
    2320,
    "[MayContainStrings] ClassUnion : ClassSetRange",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ImportClause|ImportedDefaultBinding|,|NamedImports" : [
    257,
    "[BoundNames] ImportClause : ImportedDefaultBinding , NamedImports",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|RegularExpressionLiteral" : [
    803,
    "[IsIdentifierRef] PrimaryExpression : RegularExpressionLiteral",
    [
    ]
  ],
  "sec-stringtobigint" : [
    26,
    "StringToBigInt",
    [
    ]
  ],
  "sec-compileatom|Atom|." : [
    2373,
    "[CompileAtom] Atom : .",
    [
    ]
  ],
  "sec-string.raw" : [
    2238,
    "String.raw",
    [
    ]
  ],
  "sec-get-promise-@@species" : [
    2779,
    "get Promise[@@species]",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncArrowFunction|CoverCallExpressionAndAsyncArrowHead|=>|AsyncConciseBody" : [
    849,
    "[Contains] AsyncArrowFunction : CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|this" : [
    794,
    "[IsIdentifierRef] PrimaryExpression : this",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|LabelledItem|FunctionDeclaration" : [
    406,
    "[VarDeclaredNames] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|ImportSpecifier|ModuleExportName|as|ImportedBinding" : [
    1968,
    "[ImportEntriesForModule] ImportSpecifier : ModuleExportName as ImportedBinding",
    [
    ]
  ],
  "sec-statement-semantics-runtime-semantics-evaluation|BreakableStatement|IterationStatement" : [
    1426,
    "[Evaluation] BreakableStatement : IterationStatement",
    [
    ]
  ],
  "sec-compileclasssetstring|ClassString|NonEmptyClassString" : [
    2438,
    "[CompileClassSetString] ClassString : NonEmptyClassString",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|LabelledItem|FunctionDeclaration" : [
    476,
    "[VarScopedDeclarations] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ScriptBody|StatementList" : [
    488,
    "[VarScopedDeclarations] ScriptBody : StatementList",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|await|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    388,
    "[VarDeclaredNames] ForInOfStatement : for await ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiategeneratorfunctionexpression|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    1649,
    "[InstantiateGeneratorFunctionExpression] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UpdateExpression|++|UnaryExpression" : [
    1853,
    "[HasCallInTailPosition] UpdateExpression : ++ UnaryExpression",
    [
    ]
  ],
  "sec-%typedarray%.prototype.fill" : [
    2541,
    "TypedArray.prototype.fill",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|ExponentiationExpression|UpdateExpression|**|ExponentiationExpression" : [
    956,
    "[AssignmentTargetType] ExponentiationExpression : UpdateExpression ** ExponentiationExpression",
    [
    ]
  ],
  "sec-compiletocharset|ClassIntersection|ClassSetOperand|&&|ClassSetOperand" : [
    2411,
    "[CompileToCharSet] ClassIntersection : ClassSetOperand && ClassSetOperand",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Block|{|}" : [
    429,
    "[VarScopedDeclarations] Block : { }",
    [
    ]
  ],
  "sec-deletepropertyorthrow" : [
    168,
    "DeletePropertyOrThrow",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncgeneratorfunctionobject|AsyncGeneratorDeclaration|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1658,
    "[InstantiateAsyncGeneratorFunctionObject] AsyncGeneratorDeclaration : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    604,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseClause|case|Expression|:" : [
    689,
    "[ContainsUndefinedContinueTarget] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|;|Expression|;|)|Statement" : [
    440,
    "[VarScopedDeclarations] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseBlock|{|}" : [
    683,
    "[ContainsUndefinedContinueTarget] CaseBlock : { }",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Catch|catch|(|CatchParameter|)|Block" : [
    480,
    "[VarScopedDeclarations] Catch : catch ( CatchParameter ) Block",
    [
    ]
  ],
  "sec-array.prototype.includes" : [
    2499,
    "Array.prototype.includes",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ObjectBindingPattern|{|}" : [
    219,
    "[BoundNames] ObjectBindingPattern : { }",
    [
    ]
  ],
  "sec-weakrefderef" : [
    2736,
    "WeakRefDeref",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|;|;|Expression|)|Statement" : [
    439,
    "[VarScopedDeclarations] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-substitutionevaluation|TemplateMiddleList|TemplateMiddle|Expression" : [
    1290,
    "[SubstitutionEvaluation] TemplateMiddleList : TemplateMiddle Expression",
    [
    ]
  ],
  "sec-bigint.asuintn" : [
    2121,
    "BigInt.asUintN",
    [
    ]
  ],
  "sec-runtime-semantics-methoddefinitionevaluation|AsyncMethod|async|ClassElementName|(|UniqueFormalParameters|)|{|AsyncFunctionBody|}" : [
    1645,
    "[MethodDefinitionEvaluation] AsyncMethod : async ClassElementName ( UniqueFormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-function.prototype.bind" : [
    2085,
    "Function.prototype.bind",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|DefaultClause|default|:|StatementList" : [
    303,
    "[LexicallyDeclaredNames] DefaultClause : default : StatementList",
    [
    ]
  ],
  "sec-samevaluezero" : [
    155,
    "SameValueZero",
    [
    ]
  ],
  "sec-binary-bitwise-operators-runtime-semantics-evaluation|BitwiseANDExpression|BitwiseANDExpression|&|EqualityExpression" : [
    1377,
    "[Evaluation] BitwiseANDExpression : BitwiseANDExpression & EqualityExpression",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|BindingProperty|PropertyName|:|BindingElement" : [
    1571,
    "[ContainsExpression] BindingProperty : PropertyName : BindingElement",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|NamedImports|{|}" : [
    1965,
    "[ImportEntriesForModule] NamedImports : { }",
    [
    ]
  ],
  "sec-string-exotic-objects-ownpropertykeys" : [
    1147,
    "[[OwnPropertyKeys]]",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|RelationalExpression|>|ShiftExpression" : [
    1838,
    "[HasCallInTailPosition] RelationalExpression : RelationalExpression > ShiftExpression",
    [
    ]
  ],
  "sec-typedarraysetelement" : [
    1175,
    "TypedArraySetElement",
    [
    ]
  ],
  "sec-math.abs" : [
    2125,
    "Math.abs",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingElementList|BindingElementList|,|BindingElisionElement" : [
    230,
    "[BoundNames] BindingElementList : BindingElementList , BindingElisionElement",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    297,
    "[LexicallyDeclaredNames] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|FormalParameters|FormalParameterList|,|FunctionRestParameter" : [
    1603,
    "[ExpectedArgumentCount] FormalParameters : FormalParameterList , FunctionRestParameter",
    [
    ]
  ],
  "sec-comma-operator-runtime-semantics-evaluation|Expression|Expression|,|AssignmentExpression" : [
    1421,
    "[Evaluation] Expression : Expression , AssignmentExpression",
    [
    ]
  ],
  "sec-equality-operators-runtime-semantics-evaluation|EqualityExpression|EqualityExpression|!=|RelationalExpression" : [
    1374,
    "[Evaluation] EqualityExpression : EqualityExpression != RelationalExpression",
    [
    ]
  ],
  "sec-continue-statement-runtime-semantics-evaluation|ContinueStatement|continue|LabelIdentifier|;" : [
    1513,
    "[Evaluation] ContinueStatement : continue LabelIdentifier ;",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ShiftExpression|ShiftExpression|>>>|AdditiveExpression" : [
    1846,
    "[HasCallInTailPosition] ShiftExpression : ShiftExpression >>> AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|YieldExpression" : [
    773,
    "[IsFunctionDefinition] AssignmentExpression : YieldExpression",
    [
    ]
  ],
  "sec-numeric-types-number-tostring" : [
    23,
    "Number::toString",
    [
    ]
  ],
  "sec-array.prototype.pop" : [
    2505,
    "Array.prototype.pop",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|ConditionalExpression|ShortCircuitExpression|?|AssignmentExpression|:|AssignmentExpression" : [
    980,
    "[AssignmentTargetType] ConditionalExpression : ShortCircuitExpression ? AssignmentExpression : AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|ForBinding|BindingIdentifier" : [
    1491,
    "[IsDestructuring] ForBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-newfunctionenvironment" : [
    1057,
    "NewFunctionEnvironment",
    [
    ]
  ],
  "sec-rejectpromise" : [
    2755,
    "RejectPromise",
    [
    ]
  ],
  "sec-getmethod" : [
    169,
    "GetMethod",
    [
    ]
  ],
  "sec-string-exotic-objects-getownproperty-p" : [
    1145,
    "[[GetOwnProperty]]",
    [
    ]
  ],
  "sec-tonumeric" : [
    111,
    "ToNumeric",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    652,
    "[ContainsUndefinedContinueTarget] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ScriptBody|StatementList" : [
    314,
    "[LexicallyDeclaredNames] ScriptBody : StatementList",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|.|DecimalDigits|ExponentPart" : [
    127,
    "[StringNumericValue] StrUnsignedDecimalLiteral : . DecimalDigits ExponentPart",
    [
    ]
  ],
  "sec-math.log" : [
    2144,
    "Math.log",
    [
    ]
  ],
  "sec-try-statement-runtime-semantics-evaluation|TryStatement|try|Block|Catch|Finally" : [
    1554,
    "[Evaluation] TryStatement : try Block Catch Finally",
    [
    ]
  ],
  "sec-math.asinh" : [
    2129,
    "Math.asinh",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|Infinity" : [
    121,
    "[StringNumericValue] StrUnsignedDecimalLiteral : Infinity",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-hasproperty-p" : [
    1096,
    "[[HasProperty]]",
    [
    ]
  ],
  "sec-assignment-operators-runtime-semantics-evaluation|AssignmentExpression|LeftHandSideExpression|&&=|AssignmentExpression" : [
    1386,
    "[Evaluation] AssignmentExpression : LeftHandSideExpression &&= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|LabelledItem|FunctionDeclaration" : [
    628,
    "[ContainsUndefinedBreakTarget] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrowParameters|BindingIdentifier" : [
    908,
    "[IteratorBindingInitialization] ArrowParameters : BindingIdentifier",
    [
    ]
  ],
  "sec-setfunctionname" : [
    1131,
    "SetFunctionName",
    [
    ]
  ],
  "sec-generatorresumeabrupt" : [
    2800,
    "GeneratorResumeAbrupt",
    [
      2799
    ]
  ],
  "sec-variable-statement-runtime-semantics-evaluation|VariableDeclaration|BindingPattern|Initializer" : [
    1441,
    "[Evaluation] VariableDeclaration : BindingPattern Initializer",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|FieldDefinition|ClassElementName|Initializer" : [
    870,
    "[ComputedPropertyContains] FieldDefinition : ClassElementName Initializer",
    [
    ]
  ],
  "sec-static-semantics-referencedbindings|ModuleExportName|StringLiteral" : [
    2021,
    "[ReferencedBindings] ModuleExportName : StringLiteral",
    [
    ]
  ],
  "sec-reflect.has" : [
    2844,
    "Reflect.has",
    [
    ]
  ],
  "sec-static-semantics-propname|PropertyDefinition|IdentifierReference" : [
    990,
    "[PropName] PropertyDefinition : IdentifierReference",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    1535,
    "[LabelledEvaluation] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ArrayAssignmentPattern|[|AssignmentElementList|,|]" : [
    1401,
    "[DestructuringAssignmentEvaluation] ArrayAssignmentPattern : [ AssignmentElementList , ]",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncGeneratorDeclaration|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1712,
    "[ContainsArguments] AsyncGeneratorDeclaration : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-array" : [
    2477,
    "Array",
    [
    ]
  ],
  "sec-tonumber" : [
    112,
    "ToNumber",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|+|UnaryExpression" : [
    1858,
    "[HasCallInTailPosition] UnaryExpression : + UnaryExpression",
    [
    ]
  ],
  "sec-%typedarray%" : [
    2530,
    "TypedArray",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    1682,
    "[AllPrivateIdentifiersValid] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-arraybuffer.prototype.transfertofixedlength" : [
    2653,
    "ArrayBuffer.prototype.transferToFixedLength",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|ArrayLiteral" : [
    796,
    "[IsIdentifierRef] PrimaryExpression : ArrayLiteral",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    1704,
    "[ContainsArguments] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization|BindingPropertyList|BindingPropertyList|,|BindingProperty" : [
    1442,
    "[PropertyBindingInitialization] BindingPropertyList : BindingPropertyList , BindingProperty",
    [
    ]
  ],
  "sec-canbeheldweakly" : [
    1081,
    "CanBeHeldWeakly",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|SuperProperty" : [
    809,
    "[IsIdentifierRef] MemberExpression : SuperProperty",
    [
    ]
  ],
  "sec-runtime-semantics-destructuringassignmentevaluation|ObjectAssignmentPattern|{|}" : [
    1391,
    "[DestructuringAssignmentEvaluation] ObjectAssignmentPattern : { }",
    [
    ]
  ],
  "sec-date.prototype.getutcfullyear" : [
    2202,
    "Date.prototype.getUTCFullYear",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    537,
    "[ContainsDuplicateLabels] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-promise.all" : [
    2762,
    "Promise.all",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|FunctionDeclaration|function|(|FormalParameters|)|{|FunctionBody|}" : [
    872,
    "[InstantiateFunctionObject] FunctionDeclaration : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-array.prototype.join" : [
    2501,
    "Array.prototype.join",
    [
    ]
  ],
  "sec-atomics.sub" : [
    2721,
    "Atomics.sub",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|Script" : [
    341,
    "[LexicallyScopedDeclarations] Script :",
    [
    ]
  ],
  "sec-static-semantics-classelementkind|ClassElement|ClassStaticBlock" : [
    1667,
    "[ClassElementKind] ClassElement : ClassStaticBlock",
    [
    ]
  ],
  "sec-get-array-@@species" : [
    2481,
    "get Array[@@species]",
    [
    ]
  ],
  "sec-array.prototype.copywithin" : [
    2485,
    "Array.prototype.copyWithin",
    [
    ]
  ],
  "sec-secfromtime" : [
    2172,
    "SecFromTime",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseBlock|{|DefaultClause|}" : [
    323,
    "[LexicallyScopedDeclarations] CaseBlock : { DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|LeftHandSideExpression|CallExpression" : [
    734,
    "[IsFunctionDefinition] LeftHandSideExpression : CallExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|await|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    462,
    "[VarScopedDeclarations] ForInOfStatement : for await ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|NonEmptyClassString|ClassSetCharacter" : [
    2331,
    "[MayContainStrings] NonEmptyClassString : ClassSetCharacter",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|BindingElementList|,|Elision|]" : [
    1564,
    "[ContainsExpression] ArrayBindingPattern : [ BindingElementList , Elision ]",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|LeftHandSideExpression|??=|AssignmentExpression" : [
    778,
    "[IsFunctionDefinition] AssignmentExpression : LeftHandSideExpression ??= AssignmentExpression",
    [
    ]
  ],
  "sec-array.prototype.reverse" : [
    2509,
    "Array.prototype.reverse",
    [
    ]
  ],
  "sec-isfixedlengtharraybuffer" : [
    2632,
    "IsFixedLengthArrayBuffer",
    [
    ]
  ],
  "sec-bytelistbitwiseop" : [
    2711,
    "ByteListBitwiseOp",
    [
    ]
  ],
  "sec-promise.reject" : [
    2775,
    "Promise.reject",
    [
    ]
  ],
  "sec-%typedarray%.prototype.with" : [
    2570,
    "TypedArray.prototype.with",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|NamedExports|;" : [
    1924,
    "[ModuleRequests] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-clear-kept-objects" : [
    1078,
    "ClearKeptObjects",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|ClassElementName|PrivateIdentifier" : [
    857,
    "[ComputedPropertyContains] ClassElementName : PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|RegularExpressionLiteral" : [
    724,
    "[IsFunctionDefinition] PrimaryExpression : RegularExpressionLiteral",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CoalesceExpression|CoalesceExpressionHead|??|BitwiseORExpression" : [
    979,
    "[AssignmentTargetType] CoalesceExpression : CoalesceExpressionHead ?? BitwiseORExpression",
    [
    ]
  ],
  "sec-static-semantics-exportedbindings|ExportSpecifier|ModuleExportName|as|ModuleExportName" : [
    1982,
    "[ExportedBindings] ExportSpecifier : ModuleExportName as ModuleExportName",
    [
    ]
  ],
  "sec-function-calls-runtime-semantics-evaluation|CallExpression|CoverCallExpressionAndAsyncArrowHead" : [
    1311,
    "[Evaluation] CallExpression : CoverCallExpressionAndAsyncArrowHead",
    [
    ]
  ],
  "sec-applystringornumericbinaryoperator" : [
    1389,
    "ApplyStringOrNumericBinaryOperator",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|ArrowParameters|BindingIdentifier" : [
    1592,
    "[IsSimpleParameterList] ArrowParameters : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|CallExpression|ImportCall" : [
    935,
    "[AssignmentTargetType] CallExpression : ImportCall",
    [
    ]
  ],
  "sec-internalizejsonproperty" : [
    2727,
    "InternalizeJSONProperty",
    [
    ]
  ],
  "sec-runtime-semantics-propertydestructuringassignmentevaluation|AssignmentProperty|IdentifierReference" : [
    1406,
    "[PropertyDestructuringAssignmentEvaluation] AssignmentProperty : IdentifierReference",
    [
    ]
  ],
  "sec-runtime-semantics-evaluateclassstaticblockbody|ClassStaticBlockBody|ClassStaticBlockStatementList" : [
    1728,
    "[EvaluateClassStaticBlockBody] ClassStaticBlockBody : ClassStaticBlockStatementList",
    [
    ]
  ],
  "sec-math.sqrt" : [
    2155,
    "Math.sqrt",
    [
    ]
  ],
  "sec-getactivescriptormodule" : [
    1066,
    "GetActiveScriptOrModule",
    [
    ]
  ],
  "sec-get-regexp-@@species" : [
    2446,
    "get RegExp[@@species]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|;|;|Expression|)|Statement" : [
    655,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-evaluategeneratorbody|GeneratorBody|FunctionBody" : [
    1646,
    "[EvaluateGeneratorBody] GeneratorBody : FunctionBody",
    [
    ]
  ],
  "sec-createdataproperty" : [
    164,
    "CreateDataProperty",
    [
    ]
  ],
  "sec-static-semantics-propname|LiteralPropertyName|NumericLiteral" : [
    995,
    "[PropName] LiteralPropertyName : NumericLiteral",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseClause|case|Expression|:" : [
    401,
    "[VarDeclaredNames] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|ThrowStatement" : [
    1546,
    "[LabelledEvaluation] Statement : ThrowStatement",
    [
    ]
  ],
  "sec-generator-function-definitions-runtime-semantics-evaluation|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    1651,
    "[Evaluation] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-gettemplateobject" : [
    1287,
    "GetTemplateObject",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|IfStatement|if|(|Expression|)|Statement" : [
    435,
    "[VarScopedDeclarations] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    920,
    "[AssignmentTargetType] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-propname|ClassElementName|PrivateIdentifier" : [
    1007,
    "[PropName] ClassElementName : PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassString" : [
    2329,
    "[MayContainStrings] ClassString :",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|NamedExports|;" : [
    347,
    "[LexicallyScopedDeclarations] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-promise.all-resolve-element-functions" : [
    2765,
    "yet:`Promise.all`ResolveElementFunction",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|RelationalExpression|in|ShiftExpression" : [
    1370,
    "[Evaluation] RelationalExpression : RelationalExpression in ShiftExpression",
    [
    ]
  ],
  "sec-hasrestrictedglobalproperty" : [
    1045,
    "HasRestrictedGlobalProperty",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ConciseBody|ExpressionBody" : [
    311,
    "[LexicallyDeclaredNames] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    547,
    "[ContainsDuplicateLabels] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-object-environment-records-initializebinding-n-v" : [
    1020,
    "InitializeBinding",
    [
    ]
  ],
  "sec-createlistfromarraylike" : [
    178,
    "CreateListFromArrayLike",
    [
    ]
  ],
  "sec-weakset.prototype.delete" : [
    2623,
    "WeakSet.prototype.delete",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    385,
    "[VarDeclaredNames] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    1780,
    "[HasCallInTailPosition] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncFunctionDeclaration|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1715,
    "[ContainsArguments] AsyncFunctionDeclaration : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|(|var|ForBinding|in|Expression|)|Statement" : [
    543,
    "[ContainsDuplicateLabels] ForInOfStatement : for ( var ForBinding in Expression ) Statement",
    [
    ]
  ],
  "sec-object-environment-records-withbaseobject" : [
    1026,
    "WithBaseObject",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|VariableStatement" : [
    574,
    "[ContainsUndefinedBreakTarget] Statement : VariableStatement",
    [
    ]
  ],
  "sec-weakmap.prototype.delete" : [
    2617,
    "WeakMap.prototype.delete",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassSubtraction|ClassSetOperand|--|ClassSetOperand" : [
    2326,
    "[MayContainStrings] ClassSubtraction : ClassSetOperand -- ClassSetOperand",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|VariableStatement" : [
    2024,
    "[Evaluation] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|ClassExpression" : [
    927,
    "[AssignmentTargetType] PrimaryExpression : ClassExpression",
    [
    ]
  ],
  "sec-ispropertykey" : [
    151,
    "IsPropertyKey",
    [
    ]
  ],
  "sec-numeric-types-number-bitwiseAND" : [
    67,
    "Number::bitwiseAND",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|WithStatement|with|(|Expression|)|Statement" : [
    681,
    "[ContainsUndefinedContinueTarget] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-%iteratorprototype%-@@iterator" : [
    2740,
    "IteratorPrototype[@@iterator]",
    [
    ]
  ],
  "sec-array.prototype.toreversed" : [
    2519,
    "Array.prototype.toReversed",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|ObjectBindingPattern|{|BindingRestProperty|}" : [
    887,
    "[BindingInitialization] ObjectBindingPattern : { BindingRestProperty }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|SuperProperty" : [
    1871,
    "[HasCallInTailPosition] MemberExpression : SuperProperty",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|ArrayLiteral" : [
    1878,
    "[HasCallInTailPosition] PrimaryExpression : ArrayLiteral",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|CaseClause|case|Expression|:|StatementList" : [
    690,
    "[ContainsUndefinedContinueTarget] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|ImportsList|ImportsList|,|ImportSpecifier" : [
    1966,
    "[ImportEntriesForModule] ImportsList : ImportsList , ImportSpecifier",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|LeftHandSideExpression|&&=|AssignmentExpression" : [
    776,
    "[IsFunctionDefinition] AssignmentExpression : LeftHandSideExpression &&= AssignmentExpression",
    [
    ]
  ],
  "sec-function-p1-p2-pn-body" : [
    2082,
    "Function",
    [
    ]
  ],
  "sec-monthfromtime" : [
    2167,
    "MonthFromTime",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|StatementListItem|Declaration" : [
    582,
    "[ContainsUndefinedBreakTarget] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    619,
    "[ContainsUndefinedBreakTarget] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-runtime-semantics-namedevaluation|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    819,
    "[NamedEvaluation] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-module-semantics-runtime-semantics-evaluation|ModuleItemList|ModuleItemList|ModuleItem" : [
    1953,
    "[Evaluation] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|VariableStatement" : [
    1768,
    "[HasCallInTailPosition] Statement : VariableStatement",
    [
    ]
  ],
  "sec-reflect.ownkeys" : [
    2846,
    "Reflect.ownKeys",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|DoWhileStatement|do|Statement|while|(|Expression|)|;" : [
    524,
    "[ContainsDuplicateLabels] DoWhileStatement : do Statement while ( Expression ) ;",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncGeneratorDeclaration|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    835,
    "[Contains] AsyncGeneratorDeclaration : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-hasinitializer|FormalParameterList|FormalParameterList|,|FormalParameter" : [
    1600,
    "[HasInitializer] FormalParameterList : FormalParameterList , FormalParameter",
    [
    ]
  ],
  "sec-static-semantics-contains|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    833,
    "[Contains] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|IdentifierReference" : [
    793,
    "[IsIdentifierRef] PrimaryExpression : IdentifierReference",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|default|HoistableDeclaration" : [
    1927,
    "[ModuleRequests] ExportDeclaration : export default HoistableDeclaration",
    [
    ]
  ],
  "sec-requireinternalslot" : [
    1110,
    "RequireInternalSlot",
    [
    ]
  ],
  "sec-promise-resolve" : [
    2777,
    "PromiseResolve",
    [
    ]
  ],
  "sec-runtime-semantics-iswordchar-abstract-operation" : [
    2363,
    "IsWordChar",
    [
    ]
  ],
  "sec-dataview.prototype.setbigint64" : [
    2682,
    "DataView.prototype.setBigInt64",
    [
    ]
  ],
  "sec-string.prototype.lastindexof" : [
    2248,
    "String.prototype.lastIndexOf",
    [
    ]
  ],
  "sec-compilecharacterclass|CharacterClass|[^|ClassContents|]" : [
    2386,
    "[CompileCharacterClass] CharacterClass : [^ ClassContents ]",
    [
    ]
  ],
  "await" : [
    2836,
    "Await",
    [
      42,
      43,
      44,
      45,
      41,
      2831,
      2832,
      2833,
      2834,
      2835,
      46
    ]
  ],
  "sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization|BindingRestProperty|...|BindingIdentifier" : [
    1445,
    "[RestBindingInitialization] BindingRestProperty : ... BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|OptionalChain|[|Expression|]" : [
    1902,
    "[HasCallInTailPosition] OptionalChain : OptionalChain [ Expression ]",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|BindingRestElement|]" : [
    892,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ BindingRestElement ]",
    [
    ]
  ],
  "sec-string.prototype.trimend" : [
    2272,
    "String.prototype.trimEnd",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    531,
    "[ContainsDuplicateLabels] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|CharacterEscape|c|AsciiLetter" : [
    2294,
    "[CharacterValue] CharacterEscape : c AsciiLetter",
    [
    ]
  ],
  "sec-unsigned-right-shift-operator-runtime-semantics-evaluation|ShiftExpression|ShiftExpression|>>>|AdditiveExpression" : [
    1364,
    "[Evaluation] ShiftExpression : ShiftExpression >>> AdditiveExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|CaseClause|case|Expression|:" : [
    300,
    "[LexicallyDeclaredNames] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-makeprivatereference" : [
    99,
    "MakePrivateReference",
    [
    ]
  ],
  "sec-array.prototype.findlast" : [
    2492,
    "Array.prototype.findLast",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|(|ForDeclaration|in|Expression|)|Statement" : [
    606,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for ( ForDeclaration in Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingPropertyList|BindingPropertyList|,|BindingProperty" : [
    229,
    "[BoundNames] BindingPropertyList : BindingPropertyList , BindingProperty",
    [
    ]
  ],
  "sec-identifiercodepoint|IdentifierStart|IdentifierStartChar" : [
    1213,
    "[IdentifierCodePoint] IdentifierStart : IdentifierStartChar",
    [
    ]
  ],
  "sec-binaryor" : [
    82,
    "BinaryOr",
    [
    ]
  ],
  "sec-generator-function-definitions-runtime-semantics-evaluation|GeneratorExpression|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    1652,
    "[Evaluation] GeneratorExpression : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|BindingElementList|BindingElementList|,|BindingElisionElement" : [
    897,
    "[IteratorBindingInitialization] BindingElementList : BindingElementList , BindingElisionElement",
    [
    ]
  ],
  "sec-async-functions-abstract-operations-async-function-start" : [
    2826,
    "AsyncFunctionStart",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-isextensible" : [
    1193,
    "[[IsExtensible]]",
    [
    ]
  ],
  "sec-utc-t" : [
    2180,
    "UTC",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|AdditiveExpression|AdditiveExpression|-|MultiplicativeExpression" : [
    1848,
    "[HasCallInTailPosition] AdditiveExpression : AdditiveExpression - MultiplicativeExpression",
    [
    ]
  ],
  "sec-initializereferencedbinding" : [
    98,
    "InitializeReferencedBinding",
    [
    ]
  ],
  "sec-iteratornext" : [
    196,
    "IteratorNext",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|AsyncGeneratorDeclaration|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    876,
    "[InstantiateFunctionObject] AsyncGeneratorDeclaration : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-object.prototype.__lookupSetter__" : [
    2081,
    "Object.prototype.__lookupSetter__",
    [
    ]
  ],
  "sec-object.defineproperties" : [
    2046,
    "Object.defineProperties",
    [
    ]
  ],
  "sec-generator-function-definitions-runtime-semantics-evaluation|YieldExpression|yield|*|AssignmentExpression" : [
    1655,
    "[Evaluation] YieldExpression : yield * AssignmentExpression",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|RelationalExpression|<=|ShiftExpression" : [
    1367,
    "[Evaluation] RelationalExpression : RelationalExpression <= ShiftExpression",
    [
    ]
  ],
  "sec-%foriniteratorprototype%.next" : [
    1511,
    "ForInIteratorPrototype.next",
    [
    ]
  ],
  "sec-static-semantics-prototypepropertynamelist|ClassElementList|ClassElement" : [
    1679,
    "[PrototypePropertyNameList] ClassElementList : ClassElement",
    [
    ]
  ],
  "sec-let-and-const-declarations-runtime-semantics-evaluation|LexicalBinding|BindingIdentifier" : [
    1434,
    "[Evaluation] LexicalBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    452,
    "[VarScopedDeclarations] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-compilequantifier|Quantifier|QuantifierPrefix|?" : [
    2365,
    "[CompileQuantifier] Quantifier : QuantifierPrefix ?",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ClassDeclaration|class|ClassTail" : [
    250,
    "[BoundNames] ClassDeclaration : class ClassTail",
    [
    ]
  ],
  "sec-unary-plus-operator-runtime-semantics-evaluation|UnaryExpression|+|UnaryExpression" : [
    1354,
    "[Evaluation] UnaryExpression : + UnaryExpression",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|ElementList|ElementList|,|SpreadElement" : [
    1254,
    "[ArrayAccumulation] ElementList : ElementList , SpreadElement",
    [
    ]
  ],
  "sec-compilequantifierprefix|QuantifierPrefix|{|DecimalDigits|,}" : [
    2370,
    "[CompileQuantifierPrefix] QuantifierPrefix : { DecimalDigits ,}",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|BindingElementList|,|Elision|]" : [
    894,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ BindingElementList , Elision ]",
    [
    ]
  ],
  "sec-runtime-semantics-methoddefinitionevaluation|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    1641,
    "[MethodDefinitionEvaluation] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|RelationalExpression|<=|ShiftExpression" : [
    965,
    "[AssignmentTargetType] RelationalExpression : RelationalExpression <= ShiftExpression",
    [
    ]
  ],
  "sec-equality-operators-runtime-semantics-evaluation|EqualityExpression|EqualityExpression|!==|RelationalExpression" : [
    1376,
    "[Evaluation] EqualityExpression : EqualityExpression !== RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|]" : [
    1559,
    "[ContainsExpression] ArrayBindingPattern : [ ]",
    [
    ]
  ],
  "sec-static-semantics-propname|PropertyDefinition|PropertyName|:|AssignmentExpression" : [
    992,
    "[PropName] PropertyDefinition : PropertyName : AssignmentExpression",
    [
    ]
  ],
  "sec-ispromise" : [
    2754,
    "IsPromise",
    [
    ]
  ],
  "sec-topropertydescriptor" : [
    104,
    "ToPropertyDescriptor",
    [
    ]
  ],
  "sec-samevalue" : [
    154,
    "SameValue",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    1466,
    "[ForLoopEvaluation] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|PrivateIdentifier|in|ShiftExpression" : [
    1843,
    "[HasCallInTailPosition] RelationalExpression : PrivateIdentifier in ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncGeneratorDeclaration|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    836,
    "[Contains] AsyncGeneratorDeclaration : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-string.prototype.endswith" : [
    2244,
    "String.prototype.endsWith",
    [
    ]
  ],
  "sec-object.getownpropertynames" : [
    2055,
    "Object.getOwnPropertyNames",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|~|UnaryExpression" : [
    953,
    "[AssignmentTargetType] UnaryExpression : ~ UnaryExpression",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|GeneratorExpression|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    784,
    "[IsFunctionDefinition] GeneratorExpression : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-testintegritylevel" : [
    175,
    "TestIntegrityLevel",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Expression|Expression|,|AssignmentExpression" : [
    1888,
    "[HasCallInTailPosition] Expression : Expression , AssignmentExpression",
    [
    ]
  ],
  "sec-loopcontinues" : [
    1454,
    "LoopContinues",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|MemberExpression|TemplateLiteral" : [
    728,
    "[IsFunctionDefinition] MemberExpression : MemberExpression TemplateLiteral",
    [
    ]
  ],
  "sec-array.prototype.filter" : [
    2489,
    "Array.prototype.filter",
    [
    ]
  ],
  "sec-roundmvresult" : [
    130,
    "RoundMVResult",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|ClassExpression" : [
    799,
    "[IsIdentifierRef] PrimaryExpression : ClassExpression",
    [
    ]
  ],
  "sec-atomiccompareexchangeinsharedblock" : [
    2709,
    "AtomicCompareExchangeInSharedBlock",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|StatementListItem|Declaration" : [
    321,
    "[LexicallyScopedDeclarations] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-math.pow" : [
    2150,
    "Math.pow",
    [
    ]
  ],
  "sec-runtime-semantics-methoddefinitionevaluation|AsyncGeneratorMethod|async|*|ClassElementName|(|UniqueFormalParameters|)|{|AsyncGeneratorBody|}" : [
    1644,
    "[MethodDefinitionEvaluation] AsyncGeneratorMethod : async * ClassElementName ( UniqueFormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-%typedarray%.prototype.toreversed" : [
    2566,
    "TypedArray.prototype.toReversed",
    [
    ]
  ],
  "sec-getexportednames" : [
    1944,
    "GetExportedNames",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|ArrowParameters|BindingIdentifier" : [
    1606,
    "[ExpectedArgumentCount] ArrowParameters : BindingIdentifier",
    [
    ]
  ],
  "sec-object.is" : [
    2061,
    "Object.is",
    [
    ]
  ],
  "sec-date.prototype.sethours" : [
    2210,
    "Date.prototype.setHours",
    [
    ]
  ],
  "sec-global-environment-records-getbindingvalue-n-s" : [
    1037,
    "GetBindingValue",
    [
    ]
  ],
  "sec-getfunctionrealm" : [
    183,
    "GetFunctionRealm",
    [
    ]
  ],
  "sec-tobiguint64" : [
    140,
    "ToBigUint64",
    [
    ]
  ],
  "sec-execute-async-module" : [
    1939,
    "ExecuteAsyncModule",
    [
      1938,
      1937
    ]
  ],
  "sec-innermoduleevaluation" : [
    1936,
    "InnerModuleEvaluation",
    [
    ]
  ],
  "sec-promise-executor" : [
    2761,
    "Promise",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    682,
    "[ContainsUndefinedContinueTarget] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-arraybuffer.prototype.slice" : [
    2651,
    "ArrayBuffer.prototype.slice",
    [
    ]
  ],
  "sec-equality-operators-runtime-semantics-evaluation|EqualityExpression|EqualityExpression|===|RelationalExpression" : [
    1375,
    "[Evaluation] EqualityExpression : EqualityExpression === RelationalExpression",
    [
    ]
  ],
  "sec-runtime-semantics-bindingclassdeclarationevaluation|ClassDeclaration|class|BindingIdentifier|ClassTail" : [
    1743,
    "[BindingClassDeclarationEvaluation] ClassDeclaration : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-runtime-semantics-classfielddefinitionevaluation|FieldDefinition|ClassElementName" : [
    1725,
    "[ClassFieldDefinitionEvaluation] FieldDefinition : ClassElementName",
    [
    ]
  ],
  "sec-asyncgeneratordrainqueue" : [
    2823,
    "AsyncGeneratorDrainQueue",
    [
    ]
  ],
  "sec-variable-statement-runtime-semantics-evaluation|VariableDeclarationList|VariableDeclarationList|,|VariableDeclaration" : [
    1438,
    "[Evaluation] VariableDeclarationList : VariableDeclarationList , VariableDeclaration",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrDecimalLiteral|-|StrUnsignedDecimalLiteral" : [
    120,
    "[StringNumericValue] StrDecimalLiteral : - StrUnsignedDecimalLiteral",
    [
    ]
  ],
  "sec-object.preventextensions" : [
    2066,
    "Object.preventExtensions",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    1705,
    "[ContainsArguments] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|await|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    1503,
    "[ForInOfLoopEvaluation] ForInOfStatement : for await ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|WithStatement|with|(|Expression|)|Statement" : [
    463,
    "[VarScopedDeclarations] WithStatement : with ( Expression ) Statement",
    [
    ]
  ],
  "sec-typedarray-set" : [
    1165,
    "[[Set]]",
    [
    ]
  ],
  "sec-array-exotic-objects-defineownproperty-p-desc" : [
    1141,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-proxy-target-handler" : [
    2850,
    "Proxy",
    [
    ]
  ],
  "sec-object-environment-records-hassuperbinding" : [
    1025,
    "HasSuperBinding",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|DebuggerStatement" : [
    644,
    "[ContainsUndefinedContinueTarget] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    326,
    "[LexicallyScopedDeclarations] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|default|AssignmentExpression|;" : [
    352,
    "[LexicallyScopedDeclarations] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-numeric-types-bigint-leftShift" : [
    1,
    "BigInt::leftShift",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncarrowfunctionexpression|AsyncArrowFunction|async|AsyncArrowBindingIdentifier|=>|AsyncConciseBody" : [
    1761,
    "[InstantiateAsyncArrowFunctionExpression] AsyncArrowFunction : async AsyncArrowBindingIdentifier => AsyncConciseBody",
    [
    ]
  ],
  "sec-iteratorstepvalue" : [
    200,
    "IteratorStepValue",
    [
    ]
  ],
  "sec-array.prototype.tolocalestring" : [
    2518,
    "Array.prototype.toLocaleString",
    [
    ]
  ],
  "sec-validateatomicaccess" : [
    2693,
    "ValidateAtomicAccess",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|;|Expression|;|)|Statement" : [
    370,
    "[VarDeclaredNames] ForStatement : for ( ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|MemberExpression|MemberExpression|.|PrivateIdentifier" : [
    812,
    "[IsIdentifierRef] MemberExpression : MemberExpression . PrivateIdentifier",
    [
    ]
  ],
  "sec-runtime-semantics-propertydefinitionevaluation|PropertyDefinition|PropertyName|:|AssignmentExpression" : [
    1276,
    "[PropertyDefinitionEvaluation] PropertyDefinition : PropertyName : AssignmentExpression",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|HexTrailSurrogate|Hex4Digits" : [
    2301,
    "[CharacterValue] HexTrailSurrogate : Hex4Digits",
    [
    ]
  ],
  "sec-array-initializer-runtime-semantics-evaluation|ArrayLiteral|[|Elision|]" : [
    1258,
    "[Evaluation] ArrayLiteral : [ Elision ]",
    [
    ]
  ],
  "sec-number-constructor-number-value" : [
    2107,
    "Number",
    [
    ]
  ],
  "sec-resolveexport" : [
    1945,
    "ResolveExport",
    [
    ]
  ],
  "sec-getownpropertykeys" : [
    2057,
    "GetOwnPropertyKeys",
    [
    ]
  ],
  "sec-static-semantics-boundnames|GeneratorDeclaration|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    246,
    "[BoundNames] GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-getownproperty-p" : [
    1090,
    "[[GetOwnProperty]]",
    [
    ]
  ],
  "sec-makedate" : [
    2183,
    "MakeDate",
    [
    ]
  ],
  "sec-nativeerror" : [
    2104,
    "_NativeError_",
    [
    ]
  ],
  "sec-touint32" : [
    133,
    "ToUint32",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|BindingElementList|,|Elision|BindingRestElement|]" : [
    228,
    "[BoundNames] ArrayBindingPattern : [ BindingElementList , Elision BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|DefaultClause|default|:" : [
    691,
    "[ContainsUndefinedContinueTarget] DefaultClause : default :",
    [
    ]
  ],
  "sec-array.prototype.foreach" : [
    2498,
    "Array.prototype.forEach",
    [
    ]
  ],
  "sec-promise.any" : [
    2770,
    "Promise.any",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|GeneratorExpression|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    1710,
    "[ContainsArguments] GeneratorExpression : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-declarative-environment-records-hasbinding-n" : [
    1008,
    "HasBinding",
    [
    ]
  ],
  "sec-makearggetter" : [
    1158,
    "MakeArgGetter",
    [
      1157
    ]
  ],
  "sec-static-semantics-referencedbindings|ExportsList|ExportsList|,|ExportSpecifier" : [
    2018,
    "[ReferencedBindings] ExportsList : ExportsList , ExportSpecifier",
    [
    ]
  ],
  "sec-isprivatereference" : [
    94,
    "IsPrivateReference",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|ArgumentList|ArgumentList|,|...|AssignmentExpression" : [
    1323,
    "[ArgumentListEvaluation] ArgumentList : ArgumentList , ... AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-contains|ArrowFunction|ArrowParameters|=>|ConciseBody" : [
    846,
    "[Contains] ArrowFunction : ArrowParameters => ConciseBody",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|ClassSetOperand|ClassSetCharacter" : [
    2318,
    "[MayContainStrings] ClassSetOperand : ClassSetCharacter",
    [
    ]
  ],
  "sec-array.prototype.reduceright" : [
    2508,
    "Array.prototype.reduceRight",
    [
    ]
  ],
  "sec-string.prototype.trim" : [
    2270,
    "String.prototype.trim",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|void|UnaryExpression" : [
    1856,
    "[HasCallInTailPosition] UnaryExpression : void UnaryExpression",
    [
    ]
  ],
  "sec-relational-operators-runtime-semantics-evaluation|RelationalExpression|RelationalExpression|instanceof|ShiftExpression" : [
    1369,
    "[Evaluation] RelationalExpression : RelationalExpression instanceof ShiftExpression",
    [
    ]
  ],
  "sec-array.prototype.keys" : [
    2502,
    "Array.prototype.keys",
    [
    ]
  ],
  "sec-static-semantics-issimpleparameterlist|CoverCallExpressionAndAsyncArrowHead|MemberExpression|Arguments" : [
    1595,
    "[IsSimpleParameterList] CoverCallExpressionAndAsyncArrowHead : MemberExpression Arguments",
    [
    ]
  ],
  "sec-get-regexp.prototype.flags" : [
    2449,
    "get RegExp.prototype.flags",
    [
    ]
  ],
  "sec-compileclasssetstring|ClassString" : [
    2437,
    "[CompileClassSetString] ClassString :",
    [
    ]
  ],
  "sec-completepropertydescriptor" : [
    105,
    "CompletePropertyDescriptor",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|LabelIdentifier|await" : [
    1234,
    "[StringValue] LabelIdentifier : await",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    664,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-propname|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    999,
    "[PropName] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-math.fround" : [
    2141,
    "Math.fround",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|UnaryExpression|AwaitExpression" : [
    1862,
    "[HasCallInTailPosition] UnaryExpression : AwaitExpression",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|AsyncArrowBindingIdentifier|BindingIdentifier" : [
    910,
    "[IteratorBindingInitialization] AsyncArrowBindingIdentifier : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|GeneratorDeclaration|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    279,
    "[IsConstantDeclaration] GeneratorDeclaration : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|ExportDeclaration|export|default|ClassDeclaration" : [
    351,
    "[LexicallyScopedDeclarations] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|RelationalExpression|in|ShiftExpression" : [
    968,
    "[AssignmentTargetType] RelationalExpression : RelationalExpression in ShiftExpression",
    [
    ]
  ],
  "sec-for-in-and-for-of-statements-runtime-semantics-evaluation|BindingIdentifier|Identifier" : [
    1506,
    "[Evaluation] BindingIdentifier : Identifier",
    [
    ]
  ],
  "sec-%typedarray%.prototype.values" : [
    2569,
    "TypedArray.prototype.values",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|LeftHandSideExpression|OptionalExpression" : [
    943,
    "[AssignmentTargetType] LeftHandSideExpression : OptionalExpression",
    [
    ]
  ],
  "sec-static-semantics-isidentifierref|PrimaryExpression|AsyncGeneratorExpression" : [
    802,
    "[IsIdentifierRef] PrimaryExpression : AsyncGeneratorExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|PrimaryExpression|IdentifierReference" : [
    1876,
    "[HasCallInTailPosition] PrimaryExpression : IdentifierReference",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|StatementListItem|Declaration" : [
    293,
    "[LexicallyDeclaredNames] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-gather-available-ancestors" : [
    1940,
    "GatherAvailableAncestors",
    [
    ]
  ],
  "sec-runtime-semantics-bindinginitialization|BindingIdentifier|yield" : [
    880,
    "[BindingInitialization] BindingIdentifier : yield",
    [
    ]
  ],
  "sec-module-environment-records-getbindingvalue-n-s" : [
    1050,
    "GetBindingValue",
    [
    ]
  ],
  "sec-static-semantics-hasdirectsuper|MethodDefinition|get|ClassElementName|(|)|{|FunctionBody|}" : [
    1628,
    "[HasDirectSuper] MethodDefinition : get ClassElementName ( ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    600,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ModuleItem|ExportDeclaration" : [
    492,
    "[VarScopedDeclarations] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|Module" : [
    1917,
    "[ModuleRequests] Module :",
    [
    ]
  ],
  "sec-asyncgeneratorfunction" : [
    2789,
    "AsyncGeneratorFunction",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    593,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateordinaryfunctionobject|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    1612,
    "[InstantiateOrdinaryFunctionObject] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-caseblockevaluation|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    1522,
    "[CaseBlockEvaluation] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-runtime-semantics-arrayaccumulation|Elision|," : [
    1246,
    "[ArrayAccumulation] Elision : ,",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ModuleItem|ExportDeclaration" : [
    573,
    "[ContainsDuplicateLabels] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|AssignmentExpression|ArrowFunction" : [
    780,
    "[IsFunctionDefinition] AssignmentExpression : ArrowFunction",
    [
    ]
  ],
  "sec-touint16" : [
    135,
    "ToUint16",
    [
    ]
  ],
  "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization|BindingProperty|PropertyName|:|BindingElement" : [
    1444,
    "[PropertyBindingInitialization] BindingProperty : PropertyName : BindingElement",
    [
    ]
  ],
  "sec-object.values" : [
    2069,
    "Object.values",
    [
    ]
  ],
  "sec-globaldeclarationinstantiation" : [
    1915,
    "GlobalDeclarationInstantiation",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingElement|BindingPattern" : [
    236,
    "[BoundNames] BindingElement : BindingPattern",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|Elision|]" : [
    222,
    "[BoundNames] ArrayBindingPattern : [ Elision ]",
    [
    ]
  ],
  "sec-arguments-exotic-objects-getownproperty-p" : [
    1150,
    "[[GetOwnProperty]]",
    [
    ]
  ],
  "sec-compiletocharset|ClassEscape|-" : [
    2395,
    "[CompileToCharSet] ClassEscape : -",
    [
    ]
  ],
  "sec-ispropertyreference" : [
    91,
    "IsPropertyReference",
    [
    ]
  ],
  "sec-numeric-types-number-bitwiseOR" : [
    69,
    "Number::bitwiseOR",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    391,
    "[VarDeclaredNames] ForInOfStatement : for ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ExportDeclaration|export|Declaration" : [
    1926,
    "[ModuleRequests] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-clonearraybuffer" : [
    2630,
    "CloneArrayBuffer",
    [
    ]
  ],
  "sec-hostcalljobcallback" : [
    1073,
    "HostCallJobCallback",
    [
    ]
  ],
  "sec-object.keys" : [
    2065,
    "Object.keys",
    [
    ]
  ],
  "sec-compiletocharset|ClassSetCharacter|\\|ClassSetReservedPunctuator" : [
    2427,
    "[CompileToCharSet] ClassSetCharacter : \\ ClassSetReservedPunctuator",
    [
    ]
  ],
  "sec-date.prototype.tojson" : [
    2225,
    "Date.prototype.toJSON",
    [
    ]
  ],
  "sec-weakmap.prototype.has" : [
    2619,
    "WeakMap.prototype.has",
    [
    ]
  ],
  "sec-date.prototype.getday" : [
    2191,
    "Date.prototype.getDay",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|ClassAtomNoDash|SourceCharacter" : [
    2290,
    "[CharacterValue] ClassAtomNoDash : SourceCharacter",
    [
    ]
  ],
  "sec-variable-statement-runtime-semantics-evaluation|VariableDeclaration|BindingIdentifier" : [
    1439,
    "[Evaluation] VariableDeclaration : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1713,
    "[ContainsArguments] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-createasynciteratorfromclosure" : [
    2824,
    "CreateAsyncIteratorFromClosure",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|IfStatement|if|(|Expression|)|Statement" : [
    585,
    "[ContainsUndefinedBreakTarget] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-promise.allsettled-resolve-element-functions" : [
    2768,
    "yet:`Promise.allSettled`ResolveElementFunction",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseClause|case|Expression|:" : [
    559,
    "[ContainsDuplicateLabels] CaseClause : case Expression :",
    [
    ]
  ],
  "sec-object.seal" : [
    2067,
    "Object.seal",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|MemberExpression|MemberExpression|.|IdentifierName" : [
    727,
    "[IsFunctionDefinition] MemberExpression : MemberExpression . IdentifierName",
    [
    ]
  ],
  "sec-parsetext" : [
    1210,
    "ParseText",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-preventextensions" : [
    1088,
    "[[PreventExtensions]]",
    [
    ]
  ],
  "sec-prepareforordinarycall" : [
    1112,
    "PrepareForOrdinaryCall",
    [
    ]
  ],
  "sec-compiletocharset|ClassEscape|b" : [
    2394,
    "[CompileToCharSet] ClassEscape : b",
    [
    ]
  ],
  "sec-static-semantics-boundnames|LexicalDeclaration|LetOrConst|BindingList|;" : [
    210,
    "[BoundNames] LexicalDeclaration : LetOrConst BindingList ;",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|GeneratorExpression|function|*|BindingIdentifier|(|FormalParameters|)|{|GeneratorBody|}" : [
    785,
    "[IsFunctionDefinition] GeneratorExpression : function * BindingIdentifier ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-%typedarray%.prototype.indexof" : [
    2549,
    "TypedArray.prototype.indexOf",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|RegExpUnicodeEscapeSequence|u|Hex4Digits" : [
    2298,
    "[CharacterValue] RegExpUnicodeEscapeSequence : u Hex4Digits",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|FunctionStatementList|StatementList" : [
    482,
    "[VarScopedDeclarations] FunctionStatementList : StatementList",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ModuleItem|ExportDeclaration" : [
    421,
    "[VarDeclaredNames] ModuleItem : ExportDeclaration",
    [
    ]
  ],
  "sec-set.prototype.foreach" : [
    2609,
    "Set.prototype.forEach",
    [
    ]
  ],
  "sec-iscallable" : [
    147,
    "IsCallable",
    [
    ]
  ],
  "sec-runtime-semantics-labelledevaluation|Statement|BreakStatement" : [
    1543,
    "[LabelledEvaluation] Statement : BreakStatement",
    [
    ]
  ],
  "sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization|BindingProperty|SingleNameBinding" : [
    1443,
    "[PropertyBindingInitialization] BindingProperty : SingleNameBinding",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    1792,
    "[HasCallInTailPosition] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-stringvalue|IdentifierReference|await" : [
    1232,
    "[StringValue] IdentifierReference : await",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    1500,
    "[ForInOfLoopEvaluation] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ClassStaticBlockStatementList" : [
    570,
    "[ContainsDuplicateLabels] ClassStaticBlockStatementList :",
    [
    ]
  ],
  "sec-import-call-runtime-semantics-evaluation|ImportCall|import|(|AssignmentExpression|)" : [
    1338,
    "[Evaluation] ImportCall : import ( AssignmentExpression )",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Statement|BreakStatement" : [
    356,
    "[VarDeclaredNames] Statement : BreakStatement",
    [
    ]
  ],
  "sec-static-semantics-boundnames|BindingProperty|PropertyName|:|BindingElement" : [
    233,
    "[BoundNames] BindingProperty : PropertyName : BindingElement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|DefaultClause|default|:" : [
    561,
    "[ContainsDuplicateLabels] DefaultClause : default :",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|;|;|)|Statement" : [
    438,
    "[VarScopedDeclarations] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-computedpropertycontains|ClassElement|ClassStaticBlock" : [
    866,
    "[ComputedPropertyContains] ClassElement : ClassStaticBlock",
    [
    ]
  ],
  "sec-static-semantics-propname|ComputedPropertyName|[|AssignmentExpression|]" : [
    996,
    "[PropName] ComputedPropertyName : [ AssignmentExpression ]",
    [
    ]
  ],
  "sec-arrow-function-definitions-runtime-semantics-evaluation|ArrowFunction|ArrowParameters|=>|ConciseBody" : [
    1625,
    "[Evaluation] ArrowFunction : ArrowParameters => ConciseBody",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|CaseBlock|{|}" : [
    553,
    "[ContainsDuplicateLabels] CaseBlock : { }",
    [
    ]
  ],
  "sec-completion-ao" : [
    49,
    "Completion",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|;|;|)|Statement" : [
    368,
    "[VarDeclaredNames] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-prefix-increment-operator-runtime-semantics-evaluation|UpdateExpression|++|UnaryExpression" : [
    1349,
    "[Evaluation] UpdateExpression : ++ UnaryExpression",
    [
    ]
  ],
  "sec-math.max" : [
    2148,
    "Math.max",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    383,
    "[VarDeclaredNames] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-isdestructuring|MemberExpression|new|MemberExpression|Arguments" : [
    1485,
    "[IsDestructuring] MemberExpression : new MemberExpression Arguments",
    [
    ]
  ],
  "sec-static-semantics-maycontainstrings|CharacterClassEscape|P{|UnicodePropertyValueExpression|}" : [
    2313,
    "[MayContainStrings] CharacterClassEscape : P{ UnicodePropertyValueExpression }",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|VariableDeclarationList|VariableDeclaration" : [
    432,
    "[VarScopedDeclarations] VariableDeclarationList : VariableDeclaration",
    [
    ]
  ],
  "sec-get-regexp.prototype.sticky" : [
    2462,
    "get RegExp.prototype.sticky",
    [
    ]
  ],
  "sec-number.prototype.valueof" : [
    2116,
    "Number.prototype.valueOf",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|Expression|;|Expression|;|Expression|)|Statement" : [
    595,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( Expression ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-boolean-constructor-boolean-value" : [
    2088,
    "Boolean",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|RelationalExpression|RelationalExpression|>=|ShiftExpression" : [
    966,
    "[AssignmentTargetType] RelationalExpression : RelationalExpression >= ShiftExpression",
    [
    ]
  ],
  "sec-createnonenumerabledatapropertyorthrow" : [
    166,
    "CreateNonEnumerableDataPropertyOrThrow",
    [
    ]
  ],
  "sec-string.prototype.substring" : [
    2266,
    "String.prototype.substring",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|ClassDeclaration|class|ClassTail" : [
    286,
    "[IsConstantDeclaration] ClassDeclaration : class ClassTail",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|AsyncFunctionDeclaration|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    877,
    "[InstantiateFunctionObject] AsyncFunctionDeclaration : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-atomics.compareexchange" : [
    2715,
    "Atomics.compareExchange",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|OptionalChain|OptionalChain|.|PrivateIdentifier" : [
    1685,
    "[AllPrivateIdentifiersValid] OptionalChain : OptionalChain . PrivateIdentifier",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|BitwiseXORExpression|BitwiseXORExpression|^|BitwiseANDExpression" : [
    767,
    "[IsFunctionDefinition] BitwiseXORExpression : BitwiseXORExpression ^ BitwiseANDExpression",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ModuleItem|ImportDeclaration" : [
    572,
    "[ContainsDuplicateLabels] ModuleItem : ImportDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isstrict|Script" : [
    1910,
    "[IsStrict] Script :",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|GeneratorDeclaration|function|*|(|FormalParameters|)|{|GeneratorBody|}" : [
    1708,
    "[ContainsArguments] GeneratorDeclaration : function * ( FormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|LexicalDeclaration|;|Expression|)|Statement" : [
    539,
    "[ContainsDuplicateLabels] ForStatement : for ( LexicalDeclaration ; Expression ) Statement",
    [
    ]
  ],
  "sec-timezoneestring" : [
    2229,
    "TimeZoneString",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|ArrayBindingPattern|[|BindingElementList|,|BindingRestElement|]" : [
    1565,
    "[ContainsExpression] ArrayBindingPattern : [ BindingElementList , BindingRestElement ]",
    [
    ]
  ],
  "sec-arraycreate" : [
    1142,
    "ArrayCreate",
    [
    ]
  ],
  "sec-static-semantics-hasname|AsyncArrowFunction|CoverCallExpressionAndAsyncArrowHead|=>|AsyncConciseBody" : [
    711,
    "[HasName] AsyncArrowFunction : CoverCallExpressionAndAsyncArrowHead => AsyncConciseBody",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|TryStatement|try|Block|Finally" : [
    696,
    "[ContainsUndefinedContinueTarget] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-static-semantics-propname|LiteralPropertyName|StringLiteral" : [
    994,
    "[PropName] LiteralPropertyName : StringLiteral",
    [
    ]
  ],
  "sec-compileassertion|Assertion|(?!|Disjunction|)" : [
    2360,
    "[CompileAssertion] Assertion : (?! Disjunction )",
    [
    ]
  ],
  "sec-regexp-prototype-matchall" : [
    2455,
    "RegExp.prototype[@@matchAll]",
    [
    ]
  ],
  "sec-maketime" : [
    2181,
    "MakeTime",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|EqualityExpression|EqualityExpression|!==|RelationalExpression" : [
    765,
    "[IsFunctionDefinition] EqualityExpression : EqualityExpression !== RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    332,
    "[LexicallyScopedDeclarations] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-privateelementfind" : [
    185,
    "PrivateElementFind",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ImportSpecifier|ModuleExportName|as|ImportedBinding" : [
    260,
    "[BoundNames] ImportSpecifier : ModuleExportName as ImportedBinding",
    [
    ]
  ],
  "sec-object.groupby" : [
    2059,
    "Object.groupBy",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|;|;|)|Statement" : [
    1461,
    "[ForLoopEvaluation] ForStatement : for ( ; ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|MemberExpression|[|Expression|]" : [
    1869,
    "[HasCallInTailPosition] MemberExpression : MemberExpression [ Expression ]",
    [
    ]
  ],
  "sec-validateintegertypedarray" : [
    2692,
    "ValidateIntegerTypedArray",
    [
    ]
  ],
  "sec-setviewvalue" : [
    2667,
    "SetViewValue",
    [
    ]
  ],
  "sec-static-semantics-boundnames|AsyncGeneratorDeclaration|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    248,
    "[BoundNames] AsyncGeneratorDeclaration : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-string.prototype.charcodeat" : [
    2241,
    "String.prototype.charCodeAt",
    [
    ]
  ],
  "sec-makemethod" : [
    1129,
    "MakeMethod",
    [
    ]
  ],
  "sec-static-semantics-allprivateidentifiersvalid|RelationalExpression|PrivateIdentifier|in|ShiftExpression" : [
    1687,
    "[AllPrivateIdentifiersValid] RelationalExpression : PrivateIdentifier in ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|EqualityExpression|EqualityExpression|==|RelationalExpression" : [
    1833,
    "[HasCallInTailPosition] EqualityExpression : EqualityExpression == RelationalExpression",
    [
    ]
  ],
  "sec-math.sinh" : [
    2154,
    "Math.sinh",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|MemberExpression|MemberExpression|TemplateLiteral" : [
    1907,
    "[HasCallInTailPosition] MemberExpression : MemberExpression TemplateLiteral",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys" : [
    1105,
    "[[OwnPropertyKeys]]",
    [
    ]
  ],
  "sec-static-semantics-toplevelvarscopeddeclarations|LabelledItem|FunctionDeclaration" : [
    510,
    "[TopLevelVarScopedDeclarations] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ConditionalExpression|ShortCircuitExpression|?|AssignmentExpression|:|AssignmentExpression" : [
    772,
    "[IsFunctionDefinition] ConditionalExpression : ShortCircuitExpression ? AssignmentExpression : AssignmentExpression",
    [
    ]
  ],
  "sec-arraybuffer.prototype.transfer" : [
    2652,
    "ArrayBuffer.prototype.transfer",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|CallExpression|TemplateLiteral" : [
    1895,
    "[HasCallInTailPosition] CallExpression : CallExpression TemplateLiteral",
    [
    ]
  ],
  "sec-object.defineproperty" : [
    2048,
    "Object.defineProperty",
    [
    ]
  ],
  "sec-static-semantics-classelementkind|ClassElement|MethodDefinition" : [
    1663,
    "[ClassElementKind] ClassElement : MethodDefinition",
    [
    ]
  ],
  "sec-object-environment-records-hasbinding-n" : [
    1018,
    "HasBinding",
    [
    ]
  ],
  "sec-assignment-operators-runtime-semantics-evaluation|AssignmentExpression|LeftHandSideExpression|||=|AssignmentExpression" : [
    1387,
    "[Evaluation] AssignmentExpression : LeftHandSideExpression ||= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|Expression|)|Statement" : [
    379,
    "[VarDeclaredNames] ForStatement : for ( var VariableDeclarationList ; Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|IdentifierReference|Identifier" : [
    911,
    "[AssignmentTargetType] IdentifierReference : Identifier",
    [
    ]
  ],
  "sec-compiletocharset|ClassUnion|ClassSetOperand|ClassUnion" : [
    2410,
    "[CompileToCharSet] ClassUnion : ClassSetOperand ClassUnion",
    [
    ]
  ],
  "sec-function-environment-records-getthisbinding" : [
    1030,
    "GetThisBinding",
    [
    ]
  ],
  "sec-static-semantics-importentriesformodule|ImportedDefaultBinding|ImportedBinding" : [
    1963,
    "[ImportEntriesForModule] ImportedDefaultBinding : ImportedBinding",
    [
    ]
  ],
  "sec-compiletocharset|CharacterClassEscape|p{|UnicodePropertyValueExpression|}" : [
    2403,
    "[CompileToCharSet] CharacterClassEscape : p{ UnicodePropertyValueExpression }",
    [
    ]
  ],
  "sec-set.prototype.values" : [
    2612,
    "Set.prototype.values",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|]" : [
    221,
    "[BoundNames] ArrayBindingPattern : [ ]",
    [
    ]
  ],
  "sec-static-semantics-constructormethod|ClassElementList|ClassElement" : [
    1669,
    "[ConstructorMethod] ClassElementList : ClassElement",
    [
    ]
  ],
  "sec-global-environment-records-hasbinding-n" : [
    1032,
    "HasBinding",
    [
    ]
  ],
  "sec-script-semantics-runtime-semantics-evaluation|Script" : [
    1912,
    "[Evaluation] Script :",
    [
    ]
  ],
  "sec-%typedarray%.prototype.subarray" : [
    2565,
    "TypedArray.prototype.subarray",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|StatementListItem|Statement" : [
    292,
    "[LexicallyDeclaredNames] StatementListItem : Statement",
    [
    ]
  ],
  "sec-arguments-exotic-objects-get-p-receiver" : [
    1152,
    "[[Get]]",
    [
    ]
  ],
  "sec-static-semantics-hasdirectsuper|GeneratorMethod|*|ClassElementName|(|UniqueFormalParameters|)|{|GeneratorBody|}" : [
    1630,
    "[HasDirectSuper] GeneratorMethod : * ClassElementName ( UniqueFormalParameters ) { GeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    1791,
    "[HasCallInTailPosition] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForInOfStatement|for|await|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    612,
    "[ContainsUndefinedBreakTarget] ForInOfStatement : for await ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-charactercomplement" : [
    2434,
    "CharacterComplement",
    [
    ]
  ],
  "sec-ordinary-object-internal-methods-and-internal-slots-getprototypeof" : [
    1082,
    "[[GetPrototypeOf]]",
    [
    ]
  ],
  "sec-set.prototype.has" : [
    2610,
    "Set.prototype.has",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CaseBlock|{|CaseClauses|DefaultClause|CaseClauses|}" : [
    1812,
    "[HasCallInTailPosition] CaseBlock : { CaseClauses DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-runtime-semantics-keyedbindinginitialization|BindingElement|BindingPattern" : [
    1446,
    "[KeyedBindingInitialization] BindingElement : BindingPattern",
    [
    ]
  ],
  "sec-get-sharedarraybuffer.prototype.bytelength" : [
    2658,
    "get SharedArrayBuffer.prototype.byteLength",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|PrimaryExpression|GeneratorExpression" : [
    928,
    "[AssignmentTargetType] PrimaryExpression : GeneratorExpression",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|await|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    458,
    "[VarScopedDeclarations] ForInOfStatement : for await ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-async-function-definitions-runtime-semantics-evaluation|AsyncFunctionExpression|async|function|BindingIdentifier|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1756,
    "[Evaluation] AsyncFunctionExpression : async function BindingIdentifier ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|Statement|DebuggerStatement" : [
    580,
    "[ContainsUndefinedBreakTarget] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-date.prototype.getfullyear" : [
    2192,
    "Date.prototype.getFullYear",
    [
    ]
  ],
  "sec-function-definitions-runtime-semantics-evaluation|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    1618,
    "[Evaluation] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-toplevelvardeclarednames|LabelledItem|FunctionDeclaration" : [
    504,
    "[TopLevelVarDeclaredNames] LabelledItem : FunctionDeclaration",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|PrimaryExpression|this" : [
    719,
    "[IsFunctionDefinition] PrimaryExpression : this",
    [
    ]
  ],
  "sec-static-semantics-propname|PropertyDefinition|...|AssignmentExpression" : [
    991,
    "[PropName] PropertyDefinition : ... AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|Statement|EmptyStatement" : [
    639,
    "[ContainsUndefinedContinueTarget] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|VariableStatement" : [
    2006,
    "[ExportEntries] ExportDeclaration : export VariableStatement",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncFunctionDeclaration|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1716,
    "[ContainsArguments] AsyncFunctionDeclaration : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrayBindingPattern|[|BindingElementList|,|BindingRestElement|]" : [
    227,
    "[BoundNames] ArrayBindingPattern : [ BindingElementList , BindingRestElement ]",
    [
    ]
  ],
  "sec-valueofreadevent" : [
    2857,
    "ValueOfReadEvent",
    [
    ]
  ],
  "sec-math.cbrt" : [
    2133,
    "Math.cbrt",
    [
    ]
  ],
  "sec-delete-operator-runtime-semantics-evaluation|UnaryExpression|delete|UnaryExpression" : [
    1351,
    "[Evaluation] UnaryExpression : delete UnaryExpression",
    [
    ]
  ],
  "sec-numeric-types-number-divide" : [
    55,
    "Number::divide",
    [
    ]
  ],
  "sec-optional-chaining-chain-evaluation|OptionalChain|OptionalChain|.|IdentifierName" : [
    1336,
    "[ChainEvaluation] OptionalChain : OptionalChain . IdentifierName",
    [
    ]
  ],
  "sec-runjobs" : [
    48,
    "RunJobs",
    [
      47
    ]
  ],
  "sec-parse-script" : [
    1913,
    "ParseScript",
    [
    ]
  ],
  "sec-generator.prototype.return" : [
    2791,
    "GeneratorFunction.prototype.prototype.return",
    [
    ]
  ],
  "sec-call" : [
    172,
    "Call",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateasyncfunctionexpression|AsyncFunctionExpression|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    1752,
    "[InstantiateAsyncFunctionExpression] AsyncFunctionExpression : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-ordinarycallbindthis" : [
    1113,
    "OrdinaryCallBindThis",
    [
    ]
  ],
  "sec-literals-runtime-semantics-evaluation|Literal|NumericLiteral" : [
    1244,
    "[Evaluation] Literal : NumericLiteral",
    [
    ]
  ],
  "sec-runtime-semantics-catchclauseevaluation|Catch|catch|Block" : [
    1551,
    "[CatchClauseEvaluation] Catch : catch Block",
    [
    ]
  ],
  "sec-grouping-operator-runtime-semantics-evaluation|ParenthesizedExpression|(|Expression|)" : [
    1299,
    "[Evaluation] ParenthesizedExpression : ( Expression )",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForInOfStatement|for|(|ForDeclaration|of|AssignmentExpression|)|Statement" : [
    387,
    "[VarDeclaredNames] ForInOfStatement : for ( ForDeclaration of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|Statement|ReturnStatement" : [
    516,
    "[ContainsDuplicateLabels] Statement : ReturnStatement",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ExportDeclaration|export|default|ClassDeclaration" : [
    266,
    "[BoundNames] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-moduleevaluation" : [
    1935,
    "Evaluate",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|Statement|BreakStatement" : [
    1772,
    "[HasCallInTailPosition] Statement : BreakStatement",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ExponentiationExpression|UpdateExpression|**|ExponentiationExpression" : [
    748,
    "[IsFunctionDefinition] ExponentiationExpression : UpdateExpression ** ExponentiationExpression",
    [
    ]
  ],
  "sec-subtraction-operator-minus-runtime-semantics-evaluation|AdditiveExpression|AdditiveExpression|-|MultiplicativeExpression" : [
    1361,
    "[Evaluation] AdditiveExpression : AdditiveExpression - MultiplicativeExpression",
    [
    ]
  ],
  "sec-map.prototype.delete" : [
    2591,
    "Map.prototype.delete",
    [
    ]
  ],
  "sec-array-initializer-runtime-semantics-evaluation|ArrayLiteral|[|ElementList|,|]" : [
    1260,
    "[Evaluation] ArrayLiteral : [ ElementList , ]",
    [
    ]
  ],
  "sec-thissymbolvalue" : [
    2099,
    "ThisSymbolValue",
    [
    ]
  ],
  "sec-get-regexp.prototype.dotAll" : [
    2448,
    "get RegExp.prototype.dotAll",
    [
    ]
  ],
  "sec-forbodyevaluation" : [
    1477,
    "ForBodyEvaluation",
    [
    ]
  ],
  "sec-static-semantics-exportentries|ExportDeclaration|export|ExportFromClause|FromClause|;" : [
    2004,
    "[ExportEntries] ExportDeclaration : export ExportFromClause FromClause ;",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|EqualityExpression|EqualityExpression|===|RelationalExpression" : [
    764,
    "[IsFunctionDefinition] EqualityExpression : EqualityExpression === RelationalExpression",
    [
    ]
  ],
  "sec-static-semantics-hasinitializer|SingleNameBinding|BindingIdentifier|Initializer" : [
    1599,
    "[HasInitializer] SingleNameBinding : BindingIdentifier Initializer",
    [
    ]
  ],
  "sec-runtime-semantics-canonicalize-ch" : [
    2384,
    "Canonicalize",
    [
    ]
  ],
  "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget" : [
    1203,
    "[[Construct]]",
    [
    ]
  ],
  "sec-static-semantics-lexicallyscopeddeclarations|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    325,
    "[LexicallyScopedDeclarations] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-runtime-semantics-propertydefinitionevaluation|PropertyDefinition|IdentifierReference" : [
    1275,
    "[PropertyDefinitionEvaluation] PropertyDefinition : IdentifierReference",
    [
    ]
  ],
  "sec-privatemethodoraccessoradd" : [
    187,
    "PrivateMethodOrAccessorAdd",
    [
    ]
  ],
  "sec-createarrayfromlist" : [
    176,
    "CreateArrayFromList",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportDeclaration|export|Declaration" : [
    1992,
    "[ExportedNames] ExportDeclaration : export Declaration",
    [
    ]
  ],
  "sec-set-o-p-v-throw" : [
    163,
    "Set",
    [
    ]
  ],
  "sec-weak-ref.prototype.deref" : [
    2735,
    "WeakRef.prototype.deref",
    [
    ]
  ],
  "sec-static-semantics-boundnames|LexicalBinding|BindingIdentifier" : [
    212,
    "[BoundNames] LexicalBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|TryStatement|try|Block|Finally" : [
    1819,
    "[HasCallInTailPosition] TryStatement : try Block Finally",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|ExportDeclaration|export|NamedExports|;" : [
    288,
    "[IsConstantDeclaration] ExportDeclaration : export NamedExports ;",
    [
    ]
  ],
  "sec-runtime-semantics-evaluatebody|Initializer|=|AssignmentExpression" : [
    1120,
    "[EvaluateBody] Initializer : = AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|RelationalExpression|RelationalExpression|instanceof|ShiftExpression" : [
    1841,
    "[HasCallInTailPosition] RelationalExpression : RelationalExpression instanceof ShiftExpression",
    [
    ]
  ],
  "sec-static-semantics-modulerequests|ModuleItemList|ModuleItemList|ModuleItem" : [
    1919,
    "[ModuleRequests] ModuleItemList : ModuleItemList ModuleItem",
    [
    ]
  ],
  "sec-reflect.isextensible" : [
    2845,
    "Reflect.isExtensible",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    454,
    "[VarScopedDeclarations] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|(|LeftHandSideExpression|in|Expression|)|Statement" : [
    1495,
    "[ForInOfLoopEvaluation] ForInOfStatement : for ( LeftHandSideExpression in Expression ) Statement",
    [
    ]
  ],
  "sec-compileassertion|Assertion|^" : [
    2355,
    "[CompileAssertion] Assertion : ^",
    [
    ]
  ],
  "sec-compilequantifierprefix|QuantifierPrefix|{|DecimalDigits|}" : [
    2369,
    "[CompileQuantifierPrefix] QuantifierPrefix : { DecimalDigits }",
    [
    ]
  ],
  "sec-static-semantics-hasname|ClassExpression|class|ClassTail" : [
    712,
    "[HasName] ClassExpression : class ClassTail",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|FunctionStatementList|StatementList" : [
    308,
    "[LexicallyDeclaredNames] FunctionStatementList : StatementList",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|SwitchStatement|switch|(|Expression|)|CaseBlock" : [
    552,
    "[ContainsDuplicateLabels] SwitchStatement : switch ( Expression ) CaseBlock",
    [
    ]
  ],
  "sec-numeric-types-number-equal" : [
    63,
    "Number::equal",
    [
    ]
  ],
  "sec-date.utc" : [
    2189,
    "Date.UTC",
    [
    ]
  ],
  "sec-static-semantics-boundnames|FunctionDeclaration|function|BindingIdentifier|(|FormalParameters|)|{|FunctionBody|}" : [
    239,
    "[BoundNames] FunctionDeclaration : function BindingIdentifier ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-static-semantics-flagtext|RegularExpressionLiteral|/|RegularExpressionBody|/|RegularExpressionFlags" : [
    1226,
    "[FlagText] RegularExpressionLiteral : / RegularExpressionBody / RegularExpressionFlags",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|StatementListItem|Declaration" : [
    646,
    "[ContainsUndefinedContinueTarget] StatementListItem : Declaration",
    [
    ]
  ],
  "sec-static-semantics-isfunctiondefinition|ClassExpression|class|BindingIdentifier|ClassTail" : [
    791,
    "[IsFunctionDefinition] ClassExpression : class BindingIdentifier ClassTail",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UpdateExpression|LeftHandSideExpression|++" : [
    944,
    "[AssignmentTargetType] UpdateExpression : LeftHandSideExpression ++",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseBlock|{|DefaultClause|CaseClauses|}" : [
    467,
    "[VarScopedDeclarations] CaseBlock : { DefaultClause CaseClauses }",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForInOfStatement|for|await|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    548,
    "[ContainsDuplicateLabels] ForInOfStatement : for await ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-math.sign" : [
    2152,
    "Math.sign",
    [
    ]
  ],
  "sec-array-initializer-runtime-semantics-evaluation|ArrayLiteral|[|ElementList|]" : [
    1259,
    "[Evaluation] ArrayLiteral : [ ElementList ]",
    [
    ]
  ],
  "sec-isunresolvablereference" : [
    92,
    "IsUnresolvableReference",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    444,
    "[VarScopedDeclarations] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-numeric-types-number-unaryMinus" : [
    51,
    "Number::unaryMinus",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|SingleNameBinding|BindingIdentifier" : [
    899,
    "[IteratorBindingInitialization] SingleNameBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-boundnames|FormalParameterList|FormalParameterList|,|FormalParameter" : [
    243,
    "[BoundNames] FormalParameterList : FormalParameterList , FormalParameter",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|default|ClassDeclaration" : [
    2027,
    "[Evaluation] ExportDeclaration : export default ClassDeclaration",
    [
    ]
  ],
  "sec-identifiers-runtime-semantics-evaluation|IdentifierReference|Identifier" : [
    1238,
    "[Evaluation] IdentifierReference : Identifier",
    [
    ]
  ],
  "sec-set.prototype.clear" : [
    2606,
    "Set.prototype.clear",
    [
    ]
  ],
  "sec-isvalidregularexpressionliteral" : [
    1278,
    "IsValidRegularExpressionLiteral",
    [
    ]
  ],
  "sec-static-semantics-hasname|AsyncGeneratorExpression|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    715,
    "[HasName] AsyncGeneratorExpression : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-compiletocharset|ClassSubtraction|ClassSetOperand|--|ClassSetOperand" : [
    2413,
    "[CompileToCharSet] ClassSubtraction : ClassSetOperand -- ClassSetOperand",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|ObjectLiteral|{|}" : [
    1266,
    "[Evaluation] ObjectLiteral : { }",
    [
    ]
  ],
  "sec-arguments-exotic-objects-defineownproperty-p-desc" : [
    1151,
    "[[DefineOwnProperty]]",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    650,
    "[ContainsUndefinedContinueTarget] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|Script" : [
    417,
    "[VarDeclaredNames] Script :",
    [
    ]
  ],
  "sec-objectdefineproperties" : [
    2047,
    "ObjectDefineProperties",
    [
    ]
  ],
  "sec-atomics.load" : [
    2718,
    "Atomics.load",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|WhileStatement|while|(|Expression|)|Statement" : [
    653,
    "[ContainsUndefinedContinueTarget] WhileStatement : while ( Expression ) Statement",
    [
    ]
  ],
  "sec-getv" : [
    162,
    "GetV",
    [
    ]
  ],
  "sec-runtime-semantics-iteratordestructuringassignmentevaluation|AssignmentElisionElement|Elision|AssignmentElement" : [
    1413,
    "[IteratorDestructuringAssignmentEvaluation] AssignmentElisionElement : Elision AssignmentElement",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StrUnsignedDecimalLiteral|DecimalDigits" : [
    128,
    "[StringNumericValue] StrUnsignedDecimalLiteral : DecimalDigits",
    [
    ]
  ],
  "sec-getthisvalue" : [
    97,
    "GetThisValue",
    [
    ]
  ],
  "sec-blockdeclarationinstantiation" : [
    1431,
    "BlockDeclarationInstantiation",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|MethodDefinition|set|ClassElementName|(|PropertySetParameterList|)|{|FunctionBody|}" : [
    1721,
    "[ContainsArguments] MethodDefinition : set ClassElementName ( PropertySetParameterList ) { FunctionBody }",
    [
    ]
  ],
  "sec-regexpidentifiercodepoint|RegExpIdentifierStart|UnicodeLeadSurrogate|UnicodeTrailSurrogate" : [
    2341,
    "[RegExpIdentifierCodePoint] RegExpIdentifierStart : UnicodeLeadSurrogate UnicodeTrailSurrogate",
    [
    ]
  ],
  "sec-islessthan" : [
    157,
    "IsLessThan",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|LeftHandSideExpression|??=|AssignmentExpression" : [
    988,
    "[AssignmentTargetType] AssignmentExpression : LeftHandSideExpression ??= AssignmentExpression",
    [
    ]
  ],
  "sec-static-semantics-toplevelvardeclarednames|StatementListItem|Statement" : [
    501,
    "[TopLevelVarDeclaredNames] StatementListItem : Statement",
    [
    ]
  ],
  "sec-static-semantics-declarationpart|HoistableDeclaration|GeneratorDeclaration" : [
    269,
    "[DeclarationPart] HoistableDeclaration : GeneratorDeclaration",
    [
    ]
  ],
  "sec-static-semantics-boundnames|ArrowParameters|CoverParenthesizedExpressionAndArrowParameterList" : [
    244,
    "[BoundNames] ArrowParameters : CoverParenthesizedExpressionAndArrowParameterList",
    [
    ]
  ],
  "sec-static-semantics-contains|ToDo" : [
    826,
    "Contains",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|var|VariableDeclarationList|;|Expression|;|)|Statement" : [
    1471,
    "[ForLoopEvaluation] ForStatement : for ( var VariableDeclarationList ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-compileassertion|Assertion|$" : [
    2356,
    "[CompileAssertion] Assertion : $",
    [
    ]
  ],
  "sec-string.prototype.repeat" : [
    2258,
    "String.prototype.repeat",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|IdentifierReference|await" : [
    913,
    "[AssignmentTargetType] IdentifierReference : await",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|EmptyStatement" : [
    422,
    "[VarScopedDeclarations] Statement : EmptyStatement",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|IfStatement|if|(|Expression|)|Statement|else|Statement" : [
    584,
    "[ContainsUndefinedBreakTarget] IfStatement : if ( Expression ) Statement else Statement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|AsyncFunctionDeclaration|async|function|(|FormalParameters|)|{|AsyncFunctionBody|}" : [
    878,
    "[InstantiateFunctionObject] AsyncFunctionDeclaration : async function ( FormalParameters ) { AsyncFunctionBody }",
    [
    ]
  ],
  "sec-runtime-semantics-argumentlistevaluation|ArgumentList|...|AssignmentExpression" : [
    1321,
    "[ArgumentListEvaluation] ArgumentList : ... AssignmentExpression",
    [
    ]
  ],
  "sec-boolean.prototype.tostring" : [
    2089,
    "Boolean.prototype.toString",
    [
    ]
  ],
  "sec-promise.withResolvers" : [
    2778,
    "Promise.withResolvers",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|ToDo" : [
    1701,
    "ContainsArguments",
    [
    ]
  ],
  "sec-istypedarrayoutofbounds" : [
    1172,
    "IsTypedArrayOutOfBounds",
    [
    ]
  ],
  "sec-error.prototype.tostring" : [
    2103,
    "Error.prototype.toString",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|ClassStaticBlockStatementList|StatementList" : [
    310,
    "[LexicallyDeclaredNames] ClassStaticBlockStatementList : StatementList",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|CallExpression|CallExpression|[|Expression|]" : [
    1865,
    "[HasCallInTailPosition] CallExpression : CallExpression [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|CaseBlock|{|CaseClauses|DefaultClause|}" : [
    398,
    "[VarDeclaredNames] CaseBlock : { CaseClauses DefaultClause }",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ForStatement|for|(|Expression|;|Expression|;|)|Statement" : [
    374,
    "[VarDeclaredNames] ForStatement : for ( Expression ; Expression ; ) Statement",
    [
    ]
  ],
  "sec-asyncgeneratoryield" : [
    2819,
    "AsyncGeneratorYield",
    [
      2818
    ]
  ],
  "sec-exp-operator-runtime-semantics-evaluation|ExponentiationExpression|UpdateExpression|**|ExponentiationExpression" : [
    1358,
    "[Evaluation] ExponentiationExpression : UpdateExpression ** ExponentiationExpression",
    [
    ]
  ],
  "sec-InnerModuleLoading" : [
    1931,
    "InnerModuleLoading",
    [
    ]
  ],
  "sec-get-%typedarray%.prototype.length" : [
    2553,
    "get TypedArray.prototype.length",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|LexicalDeclaration|Expression|;|Expression|)|Statement" : [
    1801,
    "[HasCallInTailPosition] ForStatement : for ( LexicalDeclaration Expression ; Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiatefunctionobject|AsyncGeneratorDeclaration|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    875,
    "[InstantiateFunctionObject] AsyncGeneratorDeclaration : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-exports-runtime-semantics-evaluation|ExportDeclaration|export|default|AssignmentExpression|;" : [
    2028,
    "[Evaluation] ExportDeclaration : export default AssignmentExpression ;",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|ObjectLiteral|{|PropertyDefinitionList|,|}" : [
    1268,
    "[Evaluation] ObjectLiteral : { PropertyDefinitionList , }",
    [
    ]
  ],
  "sec-makefullyear" : [
    2184,
    "MakeFullYear",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForInOfStatement|for|(|LeftHandSideExpression|of|AssignmentExpression|)|Statement" : [
    456,
    "[VarScopedDeclarations] ForInOfStatement : for ( LeftHandSideExpression of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-dataview.prototype.getint16" : [
    2677,
    "DataView.prototype.getInt16",
    [
    ]
  ],
  "sec-generatorfunction" : [
    2788,
    "GeneratorFunction",
    [
    ]
  ],
  "sec-symbol-description" : [
    2092,
    "Symbol",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    1798,
    "[HasCallInTailPosition] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|AssignmentExpression|ArrowFunction" : [
    982,
    "[AssignmentTargetType] AssignmentExpression : ArrowFunction",
    [
    ]
  ],
  "sec-static-semantics-lexicallydeclarednames|LabelledItem|Statement" : [
    305,
    "[LexicallyDeclaredNames] LabelledItem : Statement",
    [
    ]
  ],
  "sec-arraybuffercopyanddetach" : [
    2627,
    "ArrayBufferCopyAndDetach",
    [
    ]
  ],
  "sec-privateget" : [
    188,
    "PrivateGet",
    [
    ]
  ],
  "sec-evaluate-property-access-with-identifier-key" : [
    1307,
    "EvaluatePropertyAccessWithIdentifierKey",
    [
    ]
  ],
  "sec-string.fromcodepoint" : [
    2237,
    "String.fromCodePoint",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ForStatement|for|(|Expression|;|;|Expression|)|Statement" : [
    443,
    "[VarScopedDeclarations] ForStatement : for ( Expression ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-topropertykey" : [
    142,
    "ToPropertyKey",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MemberExpression|MemberExpression|[|Expression|]" : [
    917,
    "[AssignmentTargetType] MemberExpression : MemberExpression [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-contains|AsyncGeneratorExpression|async|function|*|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    837,
    "[Contains] AsyncGeneratorExpression : async function * ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-math.expm1" : [
    2139,
    "Math.expm1",
    [
    ]
  ],
  "sec-static-semantics-containsarguments|AsyncGeneratorDeclaration|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    1711,
    "[ContainsArguments] AsyncGeneratorDeclaration : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-static-semantics-exportednames|ExportSpecifier|ModuleExportName" : [
    1998,
    "[ExportedNames] ExportSpecifier : ModuleExportName",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|IfStatement|if|(|Expression|)|Statement" : [
    651,
    "[ContainsUndefinedContinueTarget] IfStatement : if ( Expression ) Statement",
    [
    ]
  ],
  "sec-runtime-semantics-instantiateordinaryfunctionexpression|FunctionExpression|function|(|FormalParameters|)|{|FunctionBody|}" : [
    1614,
    "[InstantiateOrdinaryFunctionExpression] FunctionExpression : function ( FormalParameters ) { FunctionBody }",
    [
    ]
  ],
  "sec-trimstring" : [
    2271,
    "TrimString",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedbreaktarget|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    596,
    "[ContainsUndefinedBreakTarget] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-numeric-types-number-bitwiseNOT" : [
    52,
    "Number::bitwiseNOT",
    [
    ]
  ],
  "sec-static-semantics-exportednames|NamedExports|{|}" : [
    1996,
    "[ExportedNames] NamedExports : { }",
    [
    ]
  ],
  "sec-runtime-semantics-classfielddefinitionevaluation|FieldDefinition|ClassElementName|Initializer" : [
    1726,
    "[ClassFieldDefinitionEvaluation] FieldDefinition : ClassElementName Initializer",
    [
    ]
  ],
  "sec-array.prototype.splice" : [
    2517,
    "Array.prototype.splice",
    [
    ]
  ],
  "sec-runtime-semantics-forinofloopevaluation|ForInOfStatement|for|await|(|var|ForBinding|of|AssignmentExpression|)|Statement" : [
    1502,
    "[ForInOfLoopEvaluation] ForInOfStatement : for await ( var ForBinding of AssignmentExpression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-hascallintailposition|OptionalChain|?.|[|Expression|]" : [
    1899,
    "[HasCallInTailPosition] OptionalChain : ?. [ Expression ]",
    [
    ]
  ],
  "sec-static-semantics-containsexpression|SingleNameBinding|BindingIdentifier" : [
    1573,
    "[ContainsExpression] SingleNameBinding : BindingIdentifier",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MemberExpression|MemberExpression|TemplateLiteral" : [
    939,
    "[AssignmentTargetType] MemberExpression : MemberExpression TemplateLiteral",
    [
    ]
  ],
  "sec-arguments-exotic-objects-delete-p" : [
    1154,
    "[[Delete]]",
    [
    ]
  ],
  "sec-runtime-semantics-stringnumericvalue|StringNumericLiteral|StrWhiteSpace" : [
    114,
    "[StringNumericValue] StringNumericLiteral : StrWhiteSpace",
    [
    ]
  ],
  "sec-number.prototype.toexponential" : [
    2112,
    "Number.prototype.toExponential",
    [
    ]
  ],
  "sec-set-object.prototype.__proto__" : [
    2077,
    "set Object.prototype.__proto__",
    [
    ]
  ],
  "sec-isviewoutofbounds" : [
    2665,
    "IsViewOutOfBounds",
    [
    ]
  ],
  "sec-module-environment-records-hasthisbinding" : [
    1051,
    "HasThisBinding",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|CaseClause|case|Expression|:|StatementList" : [
    472,
    "[VarScopedDeclarations] CaseClause : case Expression : StatementList",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|Statement|DebuggerStatement" : [
    428,
    "[VarScopedDeclarations] Statement : DebuggerStatement",
    [
    ]
  ],
  "sec-makesuperpropertyreference" : [
    1318,
    "MakeSuperPropertyReference",
    [
    ]
  ],
  "sec-dataview.prototype.getint32" : [
    2678,
    "DataView.prototype.getInt32",
    [
    ]
  ],
  "sec-static-semantics-containsduplicatelabels|ForStatement|for|(|LexicalDeclaration|Expression|;|)|Statement" : [
    540,
    "[ContainsDuplicateLabels] ForStatement : for ( LexicalDeclaration Expression ; ) Statement",
    [
    ]
  ],
  "sec-hasproperty" : [
    170,
    "HasProperty",
    [
    ]
  ],
  "sec-performpromiseallsettled" : [
    2767,
    "PerformPromiseAllSettled",
    [
    ]
  ],
  "sec-compiletocharset|ClassStringDisjunction|\\q{|ClassStringDisjunctionContents|}" : [
    2422,
    "[CompileToCharSet] ClassStringDisjunction : \\q{ ClassStringDisjunctionContents }",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|MultiplicativeExpression|MultiplicativeExpression|MultiplicativeOperator|ExponentiationExpression" : [
    957,
    "[AssignmentTargetType] MultiplicativeExpression : MultiplicativeExpression MultiplicativeOperator ExponentiationExpression",
    [
    ]
  ],
  "sec-getsuperconstructor" : [
    1317,
    "GetSuperConstructor",
    [
    ]
  ],
  "sec-static-semantics-varscopeddeclarations|ConciseBody|ExpressionBody" : [
    485,
    "[VarScopedDeclarations] ConciseBody : ExpressionBody",
    [
    ]
  ],
  "sec-object-initializer-runtime-semantics-evaluation|ComputedPropertyName|[|AssignmentExpression|]" : [
    1272,
    "[Evaluation] ComputedPropertyName : [ AssignmentExpression ]",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|var|VariableDeclarationList|;|;|)|Statement" : [
    1469,
    "[ForLoopEvaluation] ForStatement : for ( var VariableDeclarationList ; ; ) Statement",
    [
    ]
  ],
  "sec-tagged-templates-runtime-semantics-evaluation|MemberExpression|MemberExpression|TemplateLiteral" : [
    1343,
    "[Evaluation] MemberExpression : MemberExpression TemplateLiteral",
    [
    ]
  ],
  "sec-patterns-static-semantics-character-value|CharacterEscape|0" : [
    2295,
    "[CharacterValue] CharacterEscape : 0",
    [
    ]
  ],
  "sec-runtime-semantics-forloopevaluation|ForStatement|for|(|var|VariableDeclarationList|;|;|Expression|)|Statement" : [
    1470,
    "[ForLoopEvaluation] ForStatement : for ( var VariableDeclarationList ; ; Expression ) Statement",
    [
    ]
  ],
  "sec-static-semantics-expectedargumentcount|FormalParameters" : [
    1601,
    "[ExpectedArgumentCount] FormalParameters :",
    [
    ]
  ],
  "sec-static-semantics-toplevelvarscopeddeclarations|LabelledStatement|LabelIdentifier|:|LabelledItem" : [
    508,
    "[TopLevelVarScopedDeclarations] LabelledStatement : LabelIdentifier : LabelledItem",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|BindingElisionElement|Elision|BindingElement" : [
    898,
    "[IteratorBindingInitialization] BindingElisionElement : Elision BindingElement",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UpdateExpression|LeftHandSideExpression|--" : [
    945,
    "[AssignmentTargetType] UpdateExpression : LeftHandSideExpression --",
    [
    ]
  ],
  "sec-countleftcapturingparenswithin" : [
    2279,
    "CountLeftCapturingParensWithin",
    [
    ]
  ],
  "sec-static-semantics-assignmenttargettype|UnaryExpression|+|UnaryExpression" : [
    951,
    "[AssignmentTargetType] UnaryExpression : + UnaryExpression",
    [
    ]
  ],
  "sec-runtime-semantics-caseclauseisselected" : [
    1525,
    "CaseClauseIsSelected",
    [
    ]
  ],
  "sec-math.floor" : [
    2140,
    "Math.floor",
    [
    ]
  ],
  "sec-createforiniterator" : [
    1510,
    "CreateForInIterator",
    [
    ]
  ],
  "sec-yearfromtime" : [
    2164,
    "YearFromTime",
    [
    ]
  ],
  "sec-moduledeclarationlinking" : [
    1933,
    "Link",
    [
    ]
  ],
  "sec-static-semantics-isconstantdeclaration|AsyncGeneratorDeclaration|async|function|*|BindingIdentifier|(|FormalParameters|)|{|AsyncGeneratorBody|}" : [
    281,
    "[IsConstantDeclaration] AsyncGeneratorDeclaration : async function * BindingIdentifier ( FormalParameters ) { AsyncGeneratorBody }",
    [
    ]
  ],
  "sec-numeric-types-number-add" : [
    57,
    "Number::add",
    [
    ]
  ],
  "sec-static-semantics-containsundefinedcontinuetarget|ForStatement|for|(|LexicalDeclaration|;|)|Statement" : [
    666,
    "[ContainsUndefinedContinueTarget] ForStatement : for ( LexicalDeclaration ; ) Statement",
    [
    ]
  ],
  "sec-parsemodule" : [
    1943,
    "ParseModule",
    [
    ]
  ],
  "sec-static-semantics-hasname|ArrowFunction|ArrowParameters|=>|ConciseBody" : [
    709,
    "[HasName] ArrowFunction : ArrowParameters => ConciseBody",
    [
    ]
  ],
  "sec-runtime-semantics-iteratorbindinginitialization|ArrayBindingPattern|[|BindingElementList|,|Elision|BindingRestElement|]" : [
    896,
    "[IteratorBindingInitialization] ArrayBindingPattern : [ BindingElementList , Elision BindingRestElement ]",
    [
    ]
  ],
  "sec-static-semantics-vardeclarednames|ModuleItem|ImportDeclaration" : [
    420,
    "[VarDeclaredNames] ModuleItem : ImportDeclaration",
    [
    ]
  ]
}